#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MinimapIndicator_Player

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.BindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_MinimapIndicator_Player_C_BindData final
{
public:
	class UOdyUIData*                             NewUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MinimapIndicator_Player_C_BindData) == 0x000008, "Wrong alignment on WBP_MinimapIndicator_Player_C_BindData");
static_assert(sizeof(WBP_MinimapIndicator_Player_C_BindData) == 0x000008, "Wrong size on WBP_MinimapIndicator_Player_C_BindData");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_BindData, NewUIData) == 0x000000, "Member 'WBP_MinimapIndicator_Player_C_BindData::NewUIData' has a wrong offset!");

// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.ExecuteUbergraph_WBP_MinimapIndicator_Player
// 0x01A0 (0x01A0 - 0x0000)
struct WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x001C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOdyUIData*                             K2Node_Event_NewUIData;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaPlayerUIData*                    K2Node_DynamicCast_AsMatcha_Player_UI_Data;        // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             K2Node_Event_OldUIData;                            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaPlayerUIData*                    K2Node_DynamicCast_AsMatcha_Player_UI_Data_1;      // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool OldValue, bool NewValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0084(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OldValue_1;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewValue_1;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaPlayerUIData*                    K2Node_CustomEvent_LocalPlayerUIData;              // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaUIDataModelBase*                 CallFunc_GetUIDataModel_ReturnValue;               // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSpectatedTeamNumber_ReturnValue;       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOdyUIData*                             CallFunc_GetUIData_ReturnValue;                    // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaPlayerUIData*                    K2Node_DynamicCast_AsMatcha_Player_UI_Data_2;      // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UMatchaPlayerUIData* LocalPlayerUIData)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 OldValue, int32 NewValue)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 OldValue, int32 NewValue)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             CallFunc_GetUIData_ReturnValue_1;                  // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOdyMinimapWidget*                      CallFunc_GetOwningMinimap_ReturnValue;             // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_OdyMinimap_C*                      K2Node_DynamicCast_AsWBP_Ody_Minimap;              // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaPlayerUIData*                    K2Node_DynamicCast_AsMatcha_Player_UI_Data_3;      // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IntBinding_GetValue_ReturnValue;          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoolBinding_GetValue_ReturnValue;         // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_156[0x2];                                      // 0x0156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IntBinding_GetValue_ReturnValue_1;        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_OldValue;                       // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue;                       // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0170(0x0014)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0184(0x0014)()
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player) == 0x000008, "Wrong alignment on WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player");
static_assert(sizeof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player) == 0x0001A0, "Wrong size on WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, EntryPoint) == 0x000000, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, Temp_bool_Variable) == 0x000018, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_Event_MyGeometry) == 0x00001C, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_Event_InDeltaTime) == 0x000054, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_Event_NewUIData) == 0x000058, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_Event_NewUIData' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_DynamicCast_AsMatcha_Player_UI_Data) == 0x000060, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_DynamicCast_AsMatcha_Player_UI_Data' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_Event_OldUIData) == 0x000070, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_Event_OldUIData' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_DynamicCast_AsMatcha_Player_UI_Data_1) == 0x000078, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_DynamicCast_AsMatcha_Player_UI_Data_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_CreateDelegate_OutputDelegate) == 0x000084, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000098, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_CustomEvent_OldValue_1) == 0x0000A0, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_CustomEvent_OldValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_CustomEvent_NewValue_1) == 0x0000A4, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_CustomEvent_NewValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0000A8, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_CustomEvent_LocalPlayerUIData) == 0x0000B0, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_CustomEvent_LocalPlayerUIData' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, CallFunc_GetUIDataModel_ReturnValue) == 0x0000B8, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::CallFunc_GetUIDataModel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, CallFunc_GetSpectatedTeamNumber_ReturnValue) == 0x0000C4, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::CallFunc_GetSpectatedTeamNumber_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, CallFunc_GetUIData_ReturnValue) == 0x0000C8, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::CallFunc_GetUIData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_DynamicCast_AsMatcha_Player_UI_Data_2) == 0x0000D0, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_DynamicCast_AsMatcha_Player_UI_Data_2' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_DynamicCast_bSuccess_2) == 0x0000D8, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000DC, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000EC, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000FC, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_Event_IsDesignTime) == 0x00010C, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, CallFunc_GetUIData_ReturnValue_1) == 0x000110, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::CallFunc_GetUIData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, CallFunc_GetOwningMinimap_ReturnValue) == 0x000118, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::CallFunc_GetOwningMinimap_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, CallFunc_IsValid_ReturnValue_1) == 0x000120, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_DynamicCast_AsWBP_Ody_Minimap) == 0x000128, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_DynamicCast_AsWBP_Ody_Minimap' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_DynamicCast_bSuccess_3) == 0x000130, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_DynamicCast_AsMatcha_Player_UI_Data_3) == 0x000138, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_DynamicCast_AsMatcha_Player_UI_Data_3' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_DynamicCast_bSuccess_4) == 0x000140, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, CallFunc_SelectFloat_ReturnValue) == 0x000148, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, CallFunc_IntBinding_GetValue_ReturnValue) == 0x000150, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::CallFunc_IntBinding_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, CallFunc_BoolBinding_GetValue_ReturnValue) == 0x000154, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::CallFunc_BoolBinding_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000155, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, CallFunc_SelectColor_ReturnValue) == 0x000158, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, CallFunc_IntBinding_GetValue_ReturnValue_1) == 0x000168, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::CallFunc_IntBinding_GetValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_CustomEvent_OldValue) == 0x00016C, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_CustomEvent_NewValue) == 0x00016D, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_MakeStruct_SlateColor_1) == 0x000170, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, K2Node_Select_Default) == 0x000184, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000198, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x00019C, "Member 'WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.OnAliveStateChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_MinimapIndicator_Player_C_OnAliveStateChanged final
{
public:
	bool                                          OldValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewValue;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MinimapIndicator_Player_C_OnAliveStateChanged) == 0x000001, "Wrong alignment on WBP_MinimapIndicator_Player_C_OnAliveStateChanged");
static_assert(sizeof(WBP_MinimapIndicator_Player_C_OnAliveStateChanged) == 0x000002, "Wrong size on WBP_MinimapIndicator_Player_C_OnAliveStateChanged");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_OnAliveStateChanged, OldValue) == 0x000000, "Member 'WBP_MinimapIndicator_Player_C_OnAliveStateChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_OnAliveStateChanged, NewValue) == 0x000001, "Member 'WBP_MinimapIndicator_Player_C_OnAliveStateChanged::NewValue' has a wrong offset!");

// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.OnSpectatedPlayerChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_MinimapIndicator_Player_C_OnSpectatedPlayerChanged final
{
public:
	class UMatchaPlayerUIData*                    LocalPlayerUIData;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MinimapIndicator_Player_C_OnSpectatedPlayerChanged) == 0x000008, "Wrong alignment on WBP_MinimapIndicator_Player_C_OnSpectatedPlayerChanged");
static_assert(sizeof(WBP_MinimapIndicator_Player_C_OnSpectatedPlayerChanged) == 0x000008, "Wrong size on WBP_MinimapIndicator_Player_C_OnSpectatedPlayerChanged");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_OnSpectatedPlayerChanged, LocalPlayerUIData) == 0x000000, "Member 'WBP_MinimapIndicator_Player_C_OnSpectatedPlayerChanged::LocalPlayerUIData' has a wrong offset!");

// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.OnTeamNumberChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_MinimapIndicator_Player_C_OnTeamNumberChanged final
{
public:
	int32                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MinimapIndicator_Player_C_OnTeamNumberChanged) == 0x000004, "Wrong alignment on WBP_MinimapIndicator_Player_C_OnTeamNumberChanged");
static_assert(sizeof(WBP_MinimapIndicator_Player_C_OnTeamNumberChanged) == 0x000008, "Wrong size on WBP_MinimapIndicator_Player_C_OnTeamNumberChanged");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_OnTeamNumberChanged, OldValue) == 0x000000, "Member 'WBP_MinimapIndicator_Player_C_OnTeamNumberChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_OnTeamNumberChanged, NewValue) == 0x000004, "Member 'WBP_MinimapIndicator_Player_C_OnTeamNumberChanged::NewValue' has a wrong offset!");

// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_MinimapIndicator_Player_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MinimapIndicator_Player_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_MinimapIndicator_Player_C_PreConstruct");
static_assert(sizeof(WBP_MinimapIndicator_Player_C_PreConstruct) == 0x000001, "Wrong size on WBP_MinimapIndicator_Player_C_PreConstruct");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_MinimapIndicator_Player_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_MinimapIndicator_Player_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MinimapIndicator_Player_C_Tick) == 0x000004, "Wrong alignment on WBP_MinimapIndicator_Player_C_Tick");
static_assert(sizeof(WBP_MinimapIndicator_Player_C_Tick) == 0x00003C, "Wrong size on WBP_MinimapIndicator_Player_C_Tick");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_MinimapIndicator_Player_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_MinimapIndicator_Player_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.UnbindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_MinimapIndicator_Player_C_UnbindData final
{
public:
	class UOdyUIData*                             OldUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MinimapIndicator_Player_C_UnbindData) == 0x000008, "Wrong alignment on WBP_MinimapIndicator_Player_C_UnbindData");
static_assert(sizeof(WBP_MinimapIndicator_Player_C_UnbindData) == 0x000008, "Wrong size on WBP_MinimapIndicator_Player_C_UnbindData");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UnbindData, OldUIData) == 0x000000, "Member 'WBP_MinimapIndicator_Player_C_UnbindData::OldUIData' has a wrong offset!");

// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.UpdateEnemyDmgPercent
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent final
{
public:
	int32                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            HighDamageColor;                                   // 0x0008(0x0014)(Edit, BlueprintVisible)
	struct FSlateColor                            LowDamageColor;                                    // 0x001C(0x0014)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0010)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x00C8(0x0014)()
};
static_assert(alignof(WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent) == 0x000008, "Wrong alignment on WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent");
static_assert(sizeof(WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent) == 0x0000E0, "Wrong size on WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent, OldValue) == 0x000000, "Member 'WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent, NewValue) == 0x000004, "Member 'WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent, HighDamageColor) == 0x000008, "Member 'WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent::HighDamageColor' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent, LowDamageColor) == 0x00001C, "Member 'WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent::LowDamageColor' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent, Temp_bool_Variable) == 0x000030, "Member 'WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent, CallFunc_Greater_IntInt_ReturnValue) == 0x000031, "Member 'WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000032, "Member 'WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000038, "Member 'WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent, CallFunc_FTrunc_ReturnValue) == 0x000050, "Member 'WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000058, "Member 'WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent, K2Node_MakeArray_Array) == 0x0000A8, "Member 'WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent, K2Node_Select_Default) == 0x0000C8, "Member 'WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.UpdateZoneIndicator
// 0x0210 (0x0210 - 0x0000)
struct WBP_MinimapIndicator_Player_C_UpdateZoneIndicator final
{
public:
	double                                        CallFunc_GetPI_ReturnValue;                        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOdyMinimapSubsystem*                   CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOdyMinimapActor*                       CallFunc_GetMinimapActor_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_OdyMinimapActor_C*                  K2Node_DynamicCast_AsBP_Ody_Minimap_Actor;         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOdyMinimapWidget*                      CallFunc_GetOwningMinimap_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_1;                // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue_1;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ToDirectionAndLength2D_OutDir;            // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ToDirectionAndLength2D_OutLength;         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_HeadingAngle_ReturnValue;          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F3[0x5];                                      // 0x01F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0203(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator) == 0x000008, "Wrong alignment on WBP_MinimapIndicator_Player_C_UpdateZoneIndicator");
static_assert(sizeof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator) == 0x000210, "Wrong size on WBP_MinimapIndicator_Player_C_UpdateZoneIndicator");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_GetPI_ReturnValue) == 0x000000, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_GetPI_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_GetDesiredSize_ReturnValue) == 0x000008, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000020, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000028, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_GetPosition_ReturnValue) == 0x000030, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_GetMinimapActor_ReturnValue) == 0x000040, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_GetMinimapActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, K2Node_DynamicCast_AsBP_Ody_Minimap_Actor) == 0x000048, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::K2Node_DynamicCast_AsBP_Ody_Minimap_Actor' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_BreakVector_X) == 0x000070, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_BreakVector_Y) == 0x000078, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_BreakVector_Z) == 0x000080, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_GetOwningMinimap_ReturnValue) == 0x000088, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_GetOwningMinimap_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_BreakVector_X_1) == 0x000090, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_BreakVector_Y_1) == 0x000098, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_BreakVector_Z_1) == 0x0000A0, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x0000A8, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_GetVisibility_ReturnValue) == 0x0000B0, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_GetPosition_ReturnValue_1) == 0x0000B8, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_GetPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000C8, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_BooleanAND_ReturnValue) == 0x0000C9, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_IsValid_ReturnValue) == 0x0000CA, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_MakeVector2D_ReturnValue) == 0x0000D0, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_GetVisibility_ReturnValue_1) == 0x0000E0, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_GetVisibility_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0000E8, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000F8, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000100, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000110, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_ToDirectionAndLength2D_OutDir) == 0x000120, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_ToDirectionAndLength2D_OutDir' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_ToDirectionAndLength2D_OutLength) == 0x000130, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_ToDirectionAndLength2D_OutLength' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000138, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000140, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000148, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_MakeVector2D_ReturnValue_1) == 0x000160, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_Vector_HeadingAngle_ReturnValue) == 0x000170, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_Vector_HeadingAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000178, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000190, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000198, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_BreakVector_X_2) == 0x0001B0, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_BreakVector_Y_2) == 0x0001B8, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_BreakVector_Z_2) == 0x0001C0, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0001C8, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0001D0, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001D8, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001E0, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0001E8, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0001F0, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0001F1, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_BooleanAND_ReturnValue_1) == 0x0001F2, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001F8, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000200, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_BooleanAND_ReturnValue_2) == 0x000201, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_BooleanAND_ReturnValue_3) == 0x000202, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_Not_PreBool_ReturnValue) == 0x000203, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_BooleanAND_ReturnValue_4) == 0x000204, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000208, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MinimapIndicator_Player_C_UpdateZoneIndicator, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x00020C, "Member 'WBP_MinimapIndicator_Player_C_UpdateZoneIndicator::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");

}

