#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BUF_Boots_Traveler

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Matcha_structs.hpp"
#include "Matcha_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BUF_Boots_Traveler.BUF_Boots_Traveler_C
// 0x0060 (0x0088 - 0x0028)
class UBUF_Boots_Traveler_C : public UMatchaCharacterBuff
{
public:
	class UClass*                                 InteractSpeedGE;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  HitTagsToIgnoreDamageFrom;                         // 0x0030(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  HitTagsToIgnoreCCFrom;                             // 0x0050(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 MoveSpeedGE;                                       // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         LegendaryGlitchZoneMS;                             // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EpicGlitchZoneMS;                                  // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RareGlitchZoneMS;                                  // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddMovementSpeed(class AMatchaSnapNetCharacterEntity* BuffedCharacter, EObjectRarity Rarity) const;
	void OnBuffApplied(class AMatchaSnapNetCharacterEntity* BuffedCharacter, EObjectRarity BuffRarity) const;
	void OnBuffRemoved(class AMatchaSnapNetCharacterEntity* BuffedCharacter, EObjectRarity BuffRarity) const;
	void OnCharacterEnteredKOZone(class AMatchaSnapNetCharacterEntity* BuffedCharacter, EObjectRarity BuffRarity) const;
	void OnCharacterExitedKOZone(class AMatchaSnapNetCharacterEntity* BuffedCharacter, EObjectRarity BuffRarity) const;
	void RemoveMovementSpeed(class AMatchaSnapNetCharacterEntity* BuffedCharacter) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BUF_Boots_Traveler_C">();
	}
	static class UBUF_Boots_Traveler_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBUF_Boots_Traveler_C>();
	}
};
static_assert(alignof(UBUF_Boots_Traveler_C) == 0x000008, "Wrong alignment on UBUF_Boots_Traveler_C");
static_assert(sizeof(UBUF_Boots_Traveler_C) == 0x000088, "Wrong size on UBUF_Boots_Traveler_C");
static_assert(offsetof(UBUF_Boots_Traveler_C, InteractSpeedGE) == 0x000028, "Member 'UBUF_Boots_Traveler_C::InteractSpeedGE' has a wrong offset!");
static_assert(offsetof(UBUF_Boots_Traveler_C, HitTagsToIgnoreDamageFrom) == 0x000030, "Member 'UBUF_Boots_Traveler_C::HitTagsToIgnoreDamageFrom' has a wrong offset!");
static_assert(offsetof(UBUF_Boots_Traveler_C, HitTagsToIgnoreCCFrom) == 0x000050, "Member 'UBUF_Boots_Traveler_C::HitTagsToIgnoreCCFrom' has a wrong offset!");
static_assert(offsetof(UBUF_Boots_Traveler_C, MoveSpeedGE) == 0x000070, "Member 'UBUF_Boots_Traveler_C::MoveSpeedGE' has a wrong offset!");
static_assert(offsetof(UBUF_Boots_Traveler_C, LegendaryGlitchZoneMS) == 0x000078, "Member 'UBUF_Boots_Traveler_C::LegendaryGlitchZoneMS' has a wrong offset!");
static_assert(offsetof(UBUF_Boots_Traveler_C, EpicGlitchZoneMS) == 0x00007C, "Member 'UBUF_Boots_Traveler_C::EpicGlitchZoneMS' has a wrong offset!");
static_assert(offsetof(UBUF_Boots_Traveler_C, RareGlitchZoneMS) == 0x000080, "Member 'UBUF_Boots_Traveler_C::RareGlitchZoneMS' has a wrong offset!");

}

