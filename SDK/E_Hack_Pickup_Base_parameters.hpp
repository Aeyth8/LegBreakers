#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: E_Hack_Pickup_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Matcha_structs.hpp"


namespace SDK::Params
{

// Function E_Hack_Pickup_Base.E_Hack_Pickup_Base_C.ExecuteUbergraph_E_Hack_Pickup_Base
// 0x0004 (0x0004 - 0x0000)
struct E_Hack_Pickup_Base_C_ExecuteUbergraph_E_Hack_Pickup_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(E_Hack_Pickup_Base_C_ExecuteUbergraph_E_Hack_Pickup_Base) == 0x000004, "Wrong alignment on E_Hack_Pickup_Base_C_ExecuteUbergraph_E_Hack_Pickup_Base");
static_assert(sizeof(E_Hack_Pickup_Base_C_ExecuteUbergraph_E_Hack_Pickup_Base) == 0x000004, "Wrong size on E_Hack_Pickup_Base_C_ExecuteUbergraph_E_Hack_Pickup_Base");
static_assert(offsetof(E_Hack_Pickup_Base_C_ExecuteUbergraph_E_Hack_Pickup_Base, EntryPoint) == 0x000000, "Member 'E_Hack_Pickup_Base_C_ExecuteUbergraph_E_Hack_Pickup_Base::EntryPoint' has a wrong offset!");

// Function E_Hack_Pickup_Base.E_Hack_Pickup_Base_C.GetInventoryComponent
// 0x0008 (0x0008 - 0x0000)
struct E_Hack_Pickup_Base_C_GetInventoryComponent final
{
public:
	class UMatchaInventoryComponent*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(E_Hack_Pickup_Base_C_GetInventoryComponent) == 0x000008, "Wrong alignment on E_Hack_Pickup_Base_C_GetInventoryComponent");
static_assert(sizeof(E_Hack_Pickup_Base_C_GetInventoryComponent) == 0x000008, "Wrong size on E_Hack_Pickup_Base_C_GetInventoryComponent");
static_assert(offsetof(E_Hack_Pickup_Base_C_GetInventoryComponent, ReturnValue) == 0x000000, "Member 'E_Hack_Pickup_Base_C_GetInventoryComponent::ReturnValue' has a wrong offset!");

// Function E_Hack_Pickup_Base.E_Hack_Pickup_Base_C.GetItem
// 0x0118 (0x0118 - 0x0000)
struct E_Hack_Pickup_Base_C_GetItem final
{
public:
	class UMatchaItemAsset*                       Item_0;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FMatchaInventorySlot                   CallFunc_GetItemInSlot_ReturnValue;                // 0x0010(0x0100)(ConstParm)
	const class UMatchaItemAsset*                 CallFunc_GetValue_ItemAsset_ReturnValue;           // 0x0110(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(E_Hack_Pickup_Base_C_GetItem) == 0x000008, "Wrong alignment on E_Hack_Pickup_Base_C_GetItem");
static_assert(sizeof(E_Hack_Pickup_Base_C_GetItem) == 0x000118, "Wrong size on E_Hack_Pickup_Base_C_GetItem");
static_assert(offsetof(E_Hack_Pickup_Base_C_GetItem, Item_0) == 0x000000, "Member 'E_Hack_Pickup_Base_C_GetItem::Item_0' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_GetItem, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000008, "Member 'E_Hack_Pickup_Base_C_GetItem::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_GetItem, CallFunc_GetItemInSlot_ReturnValue) == 0x000010, "Member 'E_Hack_Pickup_Base_C_GetItem::CallFunc_GetItemInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_GetItem, CallFunc_GetValue_ItemAsset_ReturnValue) == 0x000110, "Member 'E_Hack_Pickup_Base_C_GetItem::CallFunc_GetValue_ItemAsset_ReturnValue' has a wrong offset!");

// Function E_Hack_Pickup_Base.E_Hack_Pickup_Base_C.PopulateDropInventory
// 0x00D0 (0x00D0 - 0x0000)
struct E_Hack_Pickup_Base_C_PopulateDropInventory final
{
public:
	int32                                         InitialQuantity;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	struct FMatchaInventoryItem                   CallFunc_FromItemAsset_ReturnValue;                // 0x0060(0x0058)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0010)()
	int32                                         CallFunc_TryAddItem_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(E_Hack_Pickup_Base_C_PopulateDropInventory) == 0x000008, "Wrong alignment on E_Hack_Pickup_Base_C_PopulateDropInventory");
static_assert(sizeof(E_Hack_Pickup_Base_C_PopulateDropInventory) == 0x0000D0, "Wrong size on E_Hack_Pickup_Base_C_PopulateDropInventory");
static_assert(offsetof(E_Hack_Pickup_Base_C_PopulateDropInventory, InitialQuantity) == 0x000000, "Member 'E_Hack_Pickup_Base_C_PopulateDropInventory::InitialQuantity' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_PopulateDropInventory, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'E_Hack_Pickup_Base_C_PopulateDropInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_PopulateDropInventory, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'E_Hack_Pickup_Base_C_PopulateDropInventory::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_PopulateDropInventory, K2Node_MakeArray_Array) == 0x000050, "Member 'E_Hack_Pickup_Base_C_PopulateDropInventory::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_PopulateDropInventory, CallFunc_FromItemAsset_ReturnValue) == 0x000060, "Member 'E_Hack_Pickup_Base_C_PopulateDropInventory::CallFunc_FromItemAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_PopulateDropInventory, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'E_Hack_Pickup_Base_C_PopulateDropInventory::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_PopulateDropInventory, CallFunc_TryAddItem_ReturnValue) == 0x0000C8, "Member 'E_Hack_Pickup_Base_C_PopulateDropInventory::CallFunc_TryAddItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_PopulateDropInventory, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000CC, "Member 'E_Hack_Pickup_Base_C_PopulateDropInventory::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function E_Hack_Pickup_Base.E_Hack_Pickup_Base_C.TryPickUpBy
// 0x0020 (0x0020 - 0x0000)
struct E_Hack_Pickup_Base_C_TryPickUpBy final
{
public:
	class AActor*                                 Instigator_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaItemAsset*                       CallFunc_GetItem_Item;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryPickUpBy_Success;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(E_Hack_Pickup_Base_C_TryPickUpBy) == 0x000008, "Wrong alignment on E_Hack_Pickup_Base_C_TryPickUpBy");
static_assert(sizeof(E_Hack_Pickup_Base_C_TryPickUpBy) == 0x000020, "Wrong size on E_Hack_Pickup_Base_C_TryPickUpBy");
static_assert(offsetof(E_Hack_Pickup_Base_C_TryPickUpBy, Instigator_0) == 0x000000, "Member 'E_Hack_Pickup_Base_C_TryPickUpBy::Instigator_0' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_TryPickUpBy, Success) == 0x000008, "Member 'E_Hack_Pickup_Base_C_TryPickUpBy::Success' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_TryPickUpBy, CallFunc_GetItem_Item) == 0x000010, "Member 'E_Hack_Pickup_Base_C_TryPickUpBy::CallFunc_GetItem_Item' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_TryPickUpBy, CallFunc_TryPickUpBy_Success) == 0x000018, "Member 'E_Hack_Pickup_Base_C_TryPickUpBy::CallFunc_TryPickUpBy_Success' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_TryPickUpBy, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'E_Hack_Pickup_Base_C_TryPickUpBy::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function E_Hack_Pickup_Base.E_Hack_Pickup_Base_C.TryRemoveQuantity
// 0x0014 (0x0014 - 0x0000)
struct E_Hack_Pickup_Base_C_TryRemoveQuantity final
{
public:
	int32                                         QuantityToRemove;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryRemoveItemFromSlot_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(E_Hack_Pickup_Base_C_TryRemoveQuantity) == 0x000004, "Wrong alignment on E_Hack_Pickup_Base_C_TryRemoveQuantity");
static_assert(sizeof(E_Hack_Pickup_Base_C_TryRemoveQuantity) == 0x000014, "Wrong size on E_Hack_Pickup_Base_C_TryRemoveQuantity");
static_assert(offsetof(E_Hack_Pickup_Base_C_TryRemoveQuantity, QuantityToRemove) == 0x000000, "Member 'E_Hack_Pickup_Base_C_TryRemoveQuantity::QuantityToRemove' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_TryRemoveQuantity, Success) == 0x000004, "Member 'E_Hack_Pickup_Base_C_TryRemoveQuantity::Success' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_TryRemoveQuantity, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000008, "Member 'E_Hack_Pickup_Base_C_TryRemoveQuantity::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_TryRemoveQuantity, CallFunc_TryRemoveItemFromSlot_ReturnValue) == 0x000010, "Member 'E_Hack_Pickup_Base_C_TryRemoveQuantity::CallFunc_TryRemoveItemFromSlot_ReturnValue' has a wrong offset!");

// Function E_Hack_Pickup_Base.E_Hack_Pickup_Base_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct E_Hack_Pickup_Base_C_UserConstructionScript final
{
public:
	class AR_Hack_Pickup_Renderer_Base_C*         K2Node_DynamicCast_AsR_Hack_Pickup_Renderer_Base;  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(E_Hack_Pickup_Base_C_UserConstructionScript) == 0x000008, "Wrong alignment on E_Hack_Pickup_Base_C_UserConstructionScript");
static_assert(sizeof(E_Hack_Pickup_Base_C_UserConstructionScript) == 0x000010, "Wrong size on E_Hack_Pickup_Base_C_UserConstructionScript");
static_assert(offsetof(E_Hack_Pickup_Base_C_UserConstructionScript, K2Node_DynamicCast_AsR_Hack_Pickup_Renderer_Base) == 0x000000, "Member 'E_Hack_Pickup_Base_C_UserConstructionScript::K2Node_DynamicCast_AsR_Hack_Pickup_Renderer_Base' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'E_Hack_Pickup_Base_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function E_Hack_Pickup_Base.E_Hack_Pickup_Base_C.GetInteractionPriority
// 0x0050 (0x0050 - 0x0000)
struct E_Hack_Pickup_Base_C_GetInteractionPriority final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaItemAsset*                       ExistingGearItem;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasGearInSlot;                                     // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           BootsCategory;                                     // 0x001C(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GlovesCategory;                                    // 0x0024(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ArmorCategory;                                     // 0x002C(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaItemAsset*                       LocalItem;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaInventoryComponent*              ProviderInventoryRef;                              // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EObjectRarity                                 CandidateItemRarity;                               // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(E_Hack_Pickup_Base_C_GetInteractionPriority) == 0x000008, "Wrong alignment on E_Hack_Pickup_Base_C_GetInteractionPriority");
static_assert(sizeof(E_Hack_Pickup_Base_C_GetInteractionPriority) == 0x000050, "Wrong size on E_Hack_Pickup_Base_C_GetInteractionPriority");
static_assert(offsetof(E_Hack_Pickup_Base_C_GetInteractionPriority, InteractingActor) == 0x000000, "Member 'E_Hack_Pickup_Base_C_GetInteractionPriority::InteractingActor' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_GetInteractionPriority, ReturnValue) == 0x000008, "Member 'E_Hack_Pickup_Base_C_GetInteractionPriority::ReturnValue' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_GetInteractionPriority, ExistingGearItem) == 0x000010, "Member 'E_Hack_Pickup_Base_C_GetInteractionPriority::ExistingGearItem' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_GetInteractionPriority, HasGearInSlot) == 0x000018, "Member 'E_Hack_Pickup_Base_C_GetInteractionPriority::HasGearInSlot' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_GetInteractionPriority, BootsCategory) == 0x00001C, "Member 'E_Hack_Pickup_Base_C_GetInteractionPriority::BootsCategory' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_GetInteractionPriority, GlovesCategory) == 0x000024, "Member 'E_Hack_Pickup_Base_C_GetInteractionPriority::GlovesCategory' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_GetInteractionPriority, ArmorCategory) == 0x00002C, "Member 'E_Hack_Pickup_Base_C_GetInteractionPriority::ArmorCategory' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_GetInteractionPriority, LocalItem) == 0x000038, "Member 'E_Hack_Pickup_Base_C_GetInteractionPriority::LocalItem' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_GetInteractionPriority, ProviderInventoryRef) == 0x000040, "Member 'E_Hack_Pickup_Base_C_GetInteractionPriority::ProviderInventoryRef' has a wrong offset!");
static_assert(offsetof(E_Hack_Pickup_Base_C_GetInteractionPriority, CandidateItemRarity) == 0x000048, "Member 'E_Hack_Pickup_Base_C_GetInteractionPriority::CandidateItemRarity' has a wrong offset!");

}

