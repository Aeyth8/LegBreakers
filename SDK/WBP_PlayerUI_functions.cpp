#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PlayerUI

#include "Basic.hpp"

#include "WBP_PlayerUI_classes.hpp"
#include "WBP_PlayerUI_parameters.hpp"


namespace SDK
{

// Function WBP_PlayerUI.WBP_PlayerUI_C.BindData
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UOdyUIData*                       NewUIData                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerUI_C::BindData(class UOdyUIData* NewUIData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "BindData");

	Params::WBP_PlayerUI_C_BindData Parms{};

	Parms.NewUIData = NewUIData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.CalculateNewMaxEnergyRatio
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MaxRatio                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerUI_C::CalculateNewMaxEnergyRatio(double* MaxRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "CalculateNewMaxEnergyRatio");

	Params::WBP_PlayerUI_C_CalculateNewMaxEnergyRatio Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxRatio != nullptr)
		*MaxRatio = Parms.MaxRatio;
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.CheckStockRemaining
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RemainingStock                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerUI_C::CheckStockRemaining(int32 RemainingStock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "CheckStockRemaining");

	Params::WBP_PlayerUI_C_CheckStockRemaining Parms{};

	Parms.RemainingStock = RemainingStock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.ExecuteUbergraph_WBP_PlayerUI
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerUI_C::ExecuteUbergraph_WBP_PlayerUI(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "ExecuteUbergraph_WBP_PlayerUI");

	Params::WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.GetColorForDamagePercent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DamagePercent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLocalPlayer_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor                      DamageColor                                            (Parm, OutParm)

void UWBP_PlayerUI_C::GetColorForDamagePercent(int32 DamagePercent, bool IsLocalPlayer_0, struct FSlateColor* DamageColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "GetColorForDamagePercent");

	Params::WBP_PlayerUI_C_GetColorForDamagePercent Parms{};

	Parms.DamagePercent = DamagePercent;
	Parms.IsLocalPlayer_0 = IsLocalPlayer_0;

	UObject::ProcessEvent(Func, &Parms);

	if (DamageColor != nullptr)
		*DamageColor = std::move(Parms.DamageColor);
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_PlayerUI_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.OnIsSpectatedChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OldValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerUI_C::OnIsSpectatedChanged(bool OldValue, bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "OnIsSpectatedChanged");

	Params::WBP_PlayerUI_C_OnIsSpectatedChanged Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.OnPlayerIndexChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   OldValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerUI_C::OnPlayerIndexChanged(int32 OldValue, int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "OnPlayerIndexChanged");

	Params::WBP_PlayerUI_C_OnPlayerIndexChanged Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.OnPlayerLivenessChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WasPlayerAlive                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlayerAlive                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerUI_C::OnPlayerLivenessChanged(bool WasPlayerAlive, bool IsPlayerAlive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "OnPlayerLivenessChanged");

	Params::WBP_PlayerUI_C_OnPlayerLivenessChanged Parms{};

	Parms.WasPlayerAlive = WasPlayerAlive;
	Parms.IsPlayerAlive = IsPlayerAlive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.OnTeamNumberChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PreviousTeamNumber                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentTeamNumber                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerUI_C::OnTeamNumberChanged(int32 PreviousTeamNumber, int32 CurrentTeamNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "OnTeamNumberChanged");

	Params::WBP_PlayerUI_C_OnTeamNumberChanged Parms{};

	Parms.PreviousTeamNumber = PreviousTeamNumber;
	Parms.CurrentTeamNumber = CurrentTeamNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerUI_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "PreConstruct");

	Params::WBP_PlayerUI_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.ResetUI
// (BlueprintCallable, BlueprintEvent)

void UWBP_PlayerUI_C::ResetUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "ResetUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.SetColorsForDamagePercent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PreviousDamagePercent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentDamagePercent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerUI_C::SetColorsForDamagePercent(int32 PreviousDamagePercent, int32 CurrentDamagePercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "SetColorsForDamagePercent");

	Params::WBP_PlayerUI_C_SetColorsForDamagePercent Parms{};

	Parms.PreviousDamagePercent = PreviousDamagePercent;
	Parms.CurrentDamagePercent = CurrentDamagePercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerUI_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "Tick");

	Params::WBP_PlayerUI_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.TrySetNewShieldColorUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MaxRatio                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerUI_C::TrySetNewShieldColorUI(double* MaxRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "TrySetNewShieldColorUI");

	Params::WBP_PlayerUI_C_TrySetNewShieldColorUI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxRatio != nullptr)
		*MaxRatio = Parms.MaxRatio;
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.TryUpdateEnergyChunks
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  CurrentEnergy                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerUI_C::TryUpdateEnergyChunks(double CurrentEnergy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "TryUpdateEnergyChunks");

	Params::WBP_PlayerUI_C_TryUpdateEnergyChunks Parms{};

	Parms.CurrentEnergy = CurrentEnergy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.UnbindData
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UOdyUIData*                       OldUIData                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerUI_C::UnbindData(class UOdyUIData* OldUIData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "UnbindData");

	Params::WBP_PlayerUI_C_UnbindData Parms{};

	Parms.OldUIData = OldUIData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.UpdateCurrentEnergy
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OldValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerUI_C::UpdateCurrentEnergy(float OldValue, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "UpdateCurrentEnergy");

	Params::WBP_PlayerUI_C_UpdateCurrentEnergy Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.UpdatedCurrentShieldAmount
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OldValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerUI_C::UpdatedCurrentShieldAmount(float OldValue, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "UpdatedCurrentShieldAmount");

	Params::WBP_PlayerUI_C_UpdatedCurrentShieldAmount Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.UpdateMaxEnergy
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OldValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerUI_C::UpdateMaxEnergy(float OldValue, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "UpdateMaxEnergy");

	Params::WBP_PlayerUI_C_UpdateMaxEnergy Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.UpdateMaxShieldAmount
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OldValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerUI_C::UpdateMaxShieldAmount(float OldValue, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "UpdateMaxShieldAmount");

	Params::WBP_PlayerUI_C_UpdateMaxShieldAmount Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.UpdateShieldAmount
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_PlayerUI_C::UpdateShieldAmount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "UpdateShieldAmount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PlayerUI.WBP_PlayerUI_C.UpdateShieldBarColorBasedOnMaxRatio
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_PlayerUI_C::UpdateShieldBarColorBasedOnMaxRatio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerUI_C", "UpdateShieldBarColorBasedOnMaxRatio");

	UObject::ProcessEvent(Func, nullptr);
}

}

