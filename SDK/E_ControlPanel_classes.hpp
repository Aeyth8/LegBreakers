#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: E_ControlPanel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SnapNet_structs.hpp"
#include "InteractiveEntity_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass E_ControlPanel.E_ControlPanel_C
// 0x0068 (0x0528 - 0x04C0)
class AE_ControlPanel_C final : public AInteractiveEntity_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_E_ControlPanel_C;                   // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Plane;                                             // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FSnapNetPropertyFloat                  OpenProgress;                                      // 0x04D8(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        TimeToOpenAndCloseSeconds;                         // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OpenHoldTimeSeconds;                               // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_E_ControlPanel(int32 EntryPoint);
	void HandleReset();
	void InteractionCompleted(class AActor* InteractingActor);
	void OnEnabledChanged(bool bOldEnabled, bool bNewEnabled);
	void ReceiveTick(float DeltaSeconds);
	void UpdateCollision();

	bool CanStartInteraction(class AActor* InteractingActor) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"E_ControlPanel_C">();
	}
	static class AE_ControlPanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AE_ControlPanel_C>();
	}
};
static_assert(alignof(AE_ControlPanel_C) == 0x000008, "Wrong alignment on AE_ControlPanel_C");
static_assert(sizeof(AE_ControlPanel_C) == 0x000528, "Wrong size on AE_ControlPanel_C");
static_assert(offsetof(AE_ControlPanel_C, UberGraphFrame_E_ControlPanel_C) == 0x0004C0, "Member 'AE_ControlPanel_C::UberGraphFrame_E_ControlPanel_C' has a wrong offset!");
static_assert(offsetof(AE_ControlPanel_C, Plane) == 0x0004C8, "Member 'AE_ControlPanel_C::Plane' has a wrong offset!");
static_assert(offsetof(AE_ControlPanel_C, StaticMesh1) == 0x0004D0, "Member 'AE_ControlPanel_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(AE_ControlPanel_C, OpenProgress) == 0x0004D8, "Member 'AE_ControlPanel_C::OpenProgress' has a wrong offset!");
static_assert(offsetof(AE_ControlPanel_C, TimeToOpenAndCloseSeconds) == 0x000518, "Member 'AE_ControlPanel_C::TimeToOpenAndCloseSeconds' has a wrong offset!");
static_assert(offsetof(AE_ControlPanel_C, OpenHoldTimeSeconds) == 0x000520, "Member 'AE_ControlPanel_C::OpenHoldTimeSeconds' has a wrong offset!");

}

