#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KO_Box

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_KOVolumeAlways_Base_classes.hpp"
#include "SnapNet_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass KO_Box.KO_Box_C
// 0x00A8 (0x04B0 - 0x0408)
class AKO_Box_C final : public AE_KOVolumeAlways_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0408(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Arrow;                                             // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   KO_BOX;                                            // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FSnapNetPropertyVector                 KOExtents;                                         // 0x0430(0x0080)(Edit, BlueprintVisible, Transient)

public:
	void ExecuteUbergraph_KO_Box(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"KO_Box_C">();
	}
	static class AKO_Box_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AKO_Box_C>();
	}
};
static_assert(alignof(AKO_Box_C) == 0x000008, "Wrong alignment on AKO_Box_C");
static_assert(sizeof(AKO_Box_C) == 0x0004B0, "Wrong size on AKO_Box_C");
static_assert(offsetof(AKO_Box_C, UberGraphFrame) == 0x000408, "Member 'AKO_Box_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AKO_Box_C, Arrow) == 0x000410, "Member 'AKO_Box_C::Arrow' has a wrong offset!");
static_assert(offsetof(AKO_Box_C, KO_BOX) == 0x000418, "Member 'AKO_Box_C::KO_BOX' has a wrong offset!");
static_assert(offsetof(AKO_Box_C, Cube) == 0x000420, "Member 'AKO_Box_C::Cube' has a wrong offset!");
static_assert(offsetof(AKO_Box_C, Box) == 0x000428, "Member 'AKO_Box_C::Box' has a wrong offset!");
static_assert(offsetof(AKO_Box_C, KOExtents) == 0x000430, "Member 'AKO_Box_C::KOExtents' has a wrong offset!");

}

