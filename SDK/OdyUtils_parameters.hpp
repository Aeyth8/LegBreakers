#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OdyUtils

#include "Basic.hpp"

#include "OdyUtils_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function OdyUtils.OdyUtilsStatics.FlushPressedKeys
// 0x0008 (0x0008 - 0x0000)
struct OdyUtilsStatics_FlushPressedKeys final
{
public:
	class APlayerController*                      InPlayerController;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUtilsStatics_FlushPressedKeys) == 0x000008, "Wrong alignment on OdyUtilsStatics_FlushPressedKeys");
static_assert(sizeof(OdyUtilsStatics_FlushPressedKeys) == 0x000008, "Wrong size on OdyUtilsStatics_FlushPressedKeys");
static_assert(offsetof(OdyUtilsStatics_FlushPressedKeys, InPlayerController) == 0x000000, "Member 'OdyUtilsStatics_FlushPressedKeys::InPlayerController' has a wrong offset!");

// Function OdyUtils.OdyUtilsStatics.GetBuildNumber
// 0x0008 (0x0008 - 0x0000)
struct OdyUtilsStatics_GetBuildNumber final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUtilsStatics_GetBuildNumber) == 0x000004, "Wrong alignment on OdyUtilsStatics_GetBuildNumber");
static_assert(sizeof(OdyUtilsStatics_GetBuildNumber) == 0x000008, "Wrong size on OdyUtilsStatics_GetBuildNumber");
static_assert(offsetof(OdyUtilsStatics_GetBuildNumber, ReturnValue) == 0x000000, "Member 'OdyUtilsStatics_GetBuildNumber::ReturnValue' has a wrong offset!");

// Function OdyUtils.OdyUtilsStatics.GetKeyName
// 0x0020 (0x0020 - 0x0000)
struct OdyUtilsStatics_GetKeyName final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUtilsStatics_GetKeyName) == 0x000008, "Wrong alignment on OdyUtilsStatics_GetKeyName");
static_assert(sizeof(OdyUtilsStatics_GetKeyName) == 0x000020, "Wrong size on OdyUtilsStatics_GetKeyName");
static_assert(offsetof(OdyUtilsStatics_GetKeyName, Key) == 0x000000, "Member 'OdyUtilsStatics_GetKeyName::Key' has a wrong offset!");
static_assert(offsetof(OdyUtilsStatics_GetKeyName, ReturnValue) == 0x000018, "Member 'OdyUtilsStatics_GetKeyName::ReturnValue' has a wrong offset!");

// Function OdyUtils.OdyUtilsStatics.GetPIEInstanceNumber
// 0x0010 (0x0010 - 0x0000)
struct OdyUtilsStatics_GetPIEInstanceNumber final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUtilsStatics_GetPIEInstanceNumber) == 0x000008, "Wrong alignment on OdyUtilsStatics_GetPIEInstanceNumber");
static_assert(sizeof(OdyUtilsStatics_GetPIEInstanceNumber) == 0x000010, "Wrong size on OdyUtilsStatics_GetPIEInstanceNumber");
static_assert(offsetof(OdyUtilsStatics_GetPIEInstanceNumber, WorldContextObject) == 0x000000, "Member 'OdyUtilsStatics_GetPIEInstanceNumber::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdyUtilsStatics_GetPIEInstanceNumber, ReturnValue) == 0x000008, "Member 'OdyUtilsStatics_GetPIEInstanceNumber::ReturnValue' has a wrong offset!");

// Function OdyUtils.OdyUtilsStatics.GetPlatformType
// 0x0001 (0x0001 - 0x0000)
struct OdyUtilsStatics_GetPlatformType final
{
public:
	EPlatformType                                 ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUtilsStatics_GetPlatformType) == 0x000001, "Wrong alignment on OdyUtilsStatics_GetPlatformType");
static_assert(sizeof(OdyUtilsStatics_GetPlatformType) == 0x000001, "Wrong size on OdyUtilsStatics_GetPlatformType");
static_assert(offsetof(OdyUtilsStatics_GetPlatformType, ReturnValue) == 0x000000, "Member 'OdyUtilsStatics_GetPlatformType::ReturnValue' has a wrong offset!");

// Function OdyUtils.OdyUtilsStatics.GetPlayerNickname
// 0x0018 (0x0018 - 0x0000)
struct OdyUtilsStatics_GetPlayerNickname final
{
public:
	class APlayerController*                      InPlayerController;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUtilsStatics_GetPlayerNickname) == 0x000008, "Wrong alignment on OdyUtilsStatics_GetPlayerNickname");
static_assert(sizeof(OdyUtilsStatics_GetPlayerNickname) == 0x000018, "Wrong size on OdyUtilsStatics_GetPlayerNickname");
static_assert(offsetof(OdyUtilsStatics_GetPlayerNickname, InPlayerController) == 0x000000, "Member 'OdyUtilsStatics_GetPlayerNickname::InPlayerController' has a wrong offset!");
static_assert(offsetof(OdyUtilsStatics_GetPlayerNickname, ReturnValue) == 0x000008, "Member 'OdyUtilsStatics_GetPlayerNickname::ReturnValue' has a wrong offset!");

// Function OdyUtils.OdyUtilsStatics.GetPlaystationProductId
// 0x0010 (0x0010 - 0x0000)
struct OdyUtilsStatics_GetPlaystationProductId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUtilsStatics_GetPlaystationProductId) == 0x000008, "Wrong alignment on OdyUtilsStatics_GetPlaystationProductId");
static_assert(sizeof(OdyUtilsStatics_GetPlaystationProductId) == 0x000010, "Wrong size on OdyUtilsStatics_GetPlaystationProductId");
static_assert(offsetof(OdyUtilsStatics_GetPlaystationProductId, ReturnValue) == 0x000000, "Member 'OdyUtilsStatics_GetPlaystationProductId::ReturnValue' has a wrong offset!");

// Function OdyUtils.OdyUtilsStatics.GetPlayStationRegion
// 0x0001 (0x0001 - 0x0000)
struct OdyUtilsStatics_GetPlayStationRegion final
{
public:
	EPlayStationRegion                            ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUtilsStatics_GetPlayStationRegion) == 0x000001, "Wrong alignment on OdyUtilsStatics_GetPlayStationRegion");
static_assert(sizeof(OdyUtilsStatics_GetPlayStationRegion) == 0x000001, "Wrong size on OdyUtilsStatics_GetPlayStationRegion");
static_assert(offsetof(OdyUtilsStatics_GetPlayStationRegion, ReturnValue) == 0x000000, "Member 'OdyUtilsStatics_GetPlayStationRegion::ReturnValue' has a wrong offset!");

// Function OdyUtils.OdyUtilsStatics.GetPlayStationType
// 0x0001 (0x0001 - 0x0000)
struct OdyUtilsStatics_GetPlayStationType final
{
public:
	EPlayStationType                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUtilsStatics_GetPlayStationType) == 0x000001, "Wrong alignment on OdyUtilsStatics_GetPlayStationType");
static_assert(sizeof(OdyUtilsStatics_GetPlayStationType) == 0x000001, "Wrong size on OdyUtilsStatics_GetPlayStationType");
static_assert(offsetof(OdyUtilsStatics_GetPlayStationType, ReturnValue) == 0x000000, "Member 'OdyUtilsStatics_GetPlayStationType::ReturnValue' has a wrong offset!");

// Function OdyUtils.OdyUtilsStatics.GetSuggestedResolutions
// 0x0010 (0x0010 - 0x0000)
struct OdyUtilsStatics_GetSuggestedResolutions final
{
public:
	TArray<struct FIntPoint>                      Resolutions;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUtilsStatics_GetSuggestedResolutions) == 0x000008, "Wrong alignment on OdyUtilsStatics_GetSuggestedResolutions");
static_assert(sizeof(OdyUtilsStatics_GetSuggestedResolutions) == 0x000010, "Wrong size on OdyUtilsStatics_GetSuggestedResolutions");
static_assert(offsetof(OdyUtilsStatics_GetSuggestedResolutions, Resolutions) == 0x000000, "Member 'OdyUtilsStatics_GetSuggestedResolutions::Resolutions' has a wrong offset!");

// Function OdyUtils.OdyUtilsStatics.IsAchievementsNecessaryPlatform
// 0x0001 (0x0001 - 0x0000)
struct OdyUtilsStatics_IsAchievementsNecessaryPlatform final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUtilsStatics_IsAchievementsNecessaryPlatform) == 0x000001, "Wrong alignment on OdyUtilsStatics_IsAchievementsNecessaryPlatform");
static_assert(sizeof(OdyUtilsStatics_IsAchievementsNecessaryPlatform) == 0x000001, "Wrong size on OdyUtilsStatics_IsAchievementsNecessaryPlatform");
static_assert(offsetof(OdyUtilsStatics_IsAchievementsNecessaryPlatform, ReturnValue) == 0x000000, "Member 'OdyUtilsStatics_IsAchievementsNecessaryPlatform::ReturnValue' has a wrong offset!");

// Function OdyUtils.OdyUtilsStatics.IsConsolePlatform
// 0x0001 (0x0001 - 0x0000)
struct OdyUtilsStatics_IsConsolePlatform final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUtilsStatics_IsConsolePlatform) == 0x000001, "Wrong alignment on OdyUtilsStatics_IsConsolePlatform");
static_assert(sizeof(OdyUtilsStatics_IsConsolePlatform) == 0x000001, "Wrong size on OdyUtilsStatics_IsConsolePlatform");
static_assert(offsetof(OdyUtilsStatics_IsConsolePlatform, ReturnValue) == 0x000000, "Member 'OdyUtilsStatics_IsConsolePlatform::ReturnValue' has a wrong offset!");

// Function OdyUtils.OdyUtilsStatics.IsMobilePlatform
// 0x0001 (0x0001 - 0x0000)
struct OdyUtilsStatics_IsMobilePlatform final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUtilsStatics_IsMobilePlatform) == 0x000001, "Wrong alignment on OdyUtilsStatics_IsMobilePlatform");
static_assert(sizeof(OdyUtilsStatics_IsMobilePlatform) == 0x000001, "Wrong size on OdyUtilsStatics_IsMobilePlatform");
static_assert(offsetof(OdyUtilsStatics_IsMobilePlatform, ReturnValue) == 0x000000, "Member 'OdyUtilsStatics_IsMobilePlatform::ReturnValue' has a wrong offset!");

// Function OdyUtils.OdyUtilsStatics.IsPCPlatform
// 0x0001 (0x0001 - 0x0000)
struct OdyUtilsStatics_IsPCPlatform final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUtilsStatics_IsPCPlatform) == 0x000001, "Wrong alignment on OdyUtilsStatics_IsPCPlatform");
static_assert(sizeof(OdyUtilsStatics_IsPCPlatform) == 0x000001, "Wrong size on OdyUtilsStatics_IsPCPlatform");
static_assert(offsetof(OdyUtilsStatics_IsPCPlatform, ReturnValue) == 0x000000, "Member 'OdyUtilsStatics_IsPCPlatform::ReturnValue' has a wrong offset!");

// Function OdyUtils.OdyUtilsStatics.PostToDiscordWebhook
// 0x0050 (0x0050 - 0x0000)
struct OdyUtilsStatics_PostToDiscordWebhook final
{
public:
	class FString                                 WebhookUrl;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Sender;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message;                                           // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         FilesToAttach;                                     // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         OptionalFileContentTypes;                          // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUtilsStatics_PostToDiscordWebhook) == 0x000008, "Wrong alignment on OdyUtilsStatics_PostToDiscordWebhook");
static_assert(sizeof(OdyUtilsStatics_PostToDiscordWebhook) == 0x000050, "Wrong size on OdyUtilsStatics_PostToDiscordWebhook");
static_assert(offsetof(OdyUtilsStatics_PostToDiscordWebhook, WebhookUrl) == 0x000000, "Member 'OdyUtilsStatics_PostToDiscordWebhook::WebhookUrl' has a wrong offset!");
static_assert(offsetof(OdyUtilsStatics_PostToDiscordWebhook, Sender) == 0x000010, "Member 'OdyUtilsStatics_PostToDiscordWebhook::Sender' has a wrong offset!");
static_assert(offsetof(OdyUtilsStatics_PostToDiscordWebhook, Message) == 0x000020, "Member 'OdyUtilsStatics_PostToDiscordWebhook::Message' has a wrong offset!");
static_assert(offsetof(OdyUtilsStatics_PostToDiscordWebhook, FilesToAttach) == 0x000030, "Member 'OdyUtilsStatics_PostToDiscordWebhook::FilesToAttach' has a wrong offset!");
static_assert(offsetof(OdyUtilsStatics_PostToDiscordWebhook, OptionalFileContentTypes) == 0x000040, "Member 'OdyUtilsStatics_PostToDiscordWebhook::OptionalFileContentTypes' has a wrong offset!");

}

