#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SpawnCeremony_HackTip

#include "Basic.hpp"

#include "Matcha_structs.hpp"
#include "Engine_structs.hpp"
#include "OdyUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_SpawnCeremony_HackTip.WBP_SpawnCeremony_HackTip_C
// 0x0060 (0x03F8 - 0x0398)
class UWBP_SpawnCeremony_HackTip_C final : public UOdyWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0398(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             DescriptionHack_Text;                              // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IconHack;                                          // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TitleHack_Text;                                    // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture*                               Icon;                                              // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Title_Text;                                        // 0x03C0(0x0010)(Edit, BlueprintVisible)
	class FText                                   Description_Text;                                  // 0x03D0(0x0010)(Edit, BlueprintVisible)
	bool                                          UseDataAsset;                                      // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaItemAsset*                       Data_Asset;                                        // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EHackType                                     HackType;                                          // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_SpawnCeremony_HackTip(int32 EntryPoint);
	void InitializeHackTip(class UTexture* Icon_0, const class FText& TitleText, const class FText& DescriptionText);
	void InitializeHackTipDataAsset(class UMatchaItemAsset* DataAsset);
	void OnLoaded_688791064CCAF1125B87459A83994ACD(class UObject* Loaded);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_SpawnCeremony_HackTip_C">();
	}
	static class UWBP_SpawnCeremony_HackTip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_SpawnCeremony_HackTip_C>();
	}
};
static_assert(alignof(UWBP_SpawnCeremony_HackTip_C) == 0x000008, "Wrong alignment on UWBP_SpawnCeremony_HackTip_C");
static_assert(sizeof(UWBP_SpawnCeremony_HackTip_C) == 0x0003F8, "Wrong size on UWBP_SpawnCeremony_HackTip_C");
static_assert(offsetof(UWBP_SpawnCeremony_HackTip_C, UberGraphFrame) == 0x000398, "Member 'UWBP_SpawnCeremony_HackTip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_SpawnCeremony_HackTip_C, DescriptionHack_Text) == 0x0003A0, "Member 'UWBP_SpawnCeremony_HackTip_C::DescriptionHack_Text' has a wrong offset!");
static_assert(offsetof(UWBP_SpawnCeremony_HackTip_C, IconHack) == 0x0003A8, "Member 'UWBP_SpawnCeremony_HackTip_C::IconHack' has a wrong offset!");
static_assert(offsetof(UWBP_SpawnCeremony_HackTip_C, TitleHack_Text) == 0x0003B0, "Member 'UWBP_SpawnCeremony_HackTip_C::TitleHack_Text' has a wrong offset!");
static_assert(offsetof(UWBP_SpawnCeremony_HackTip_C, Icon) == 0x0003B8, "Member 'UWBP_SpawnCeremony_HackTip_C::Icon' has a wrong offset!");
static_assert(offsetof(UWBP_SpawnCeremony_HackTip_C, Title_Text) == 0x0003C0, "Member 'UWBP_SpawnCeremony_HackTip_C::Title_Text' has a wrong offset!");
static_assert(offsetof(UWBP_SpawnCeremony_HackTip_C, Description_Text) == 0x0003D0, "Member 'UWBP_SpawnCeremony_HackTip_C::Description_Text' has a wrong offset!");
static_assert(offsetof(UWBP_SpawnCeremony_HackTip_C, UseDataAsset) == 0x0003E0, "Member 'UWBP_SpawnCeremony_HackTip_C::UseDataAsset' has a wrong offset!");
static_assert(offsetof(UWBP_SpawnCeremony_HackTip_C, Data_Asset) == 0x0003E8, "Member 'UWBP_SpawnCeremony_HackTip_C::Data_Asset' has a wrong offset!");
static_assert(offsetof(UWBP_SpawnCeremony_HackTip_C, HackType) == 0x0003F0, "Member 'UWBP_SpawnCeremony_HackTip_C::HackType' has a wrong offset!");

}

