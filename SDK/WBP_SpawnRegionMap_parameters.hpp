#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SpawnRegionMap

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Matcha_structs.hpp"


namespace SDK::Params
{

// Function WBP_SpawnRegionMap.WBP_SpawnRegionMap_C.BindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_SpawnRegionMap_C_BindData final
{
public:
	class UOdyUIData*                             NewUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnRegionMap_C_BindData) == 0x000008, "Wrong alignment on WBP_SpawnRegionMap_C_BindData");
static_assert(sizeof(WBP_SpawnRegionMap_C_BindData) == 0x000008, "Wrong size on WBP_SpawnRegionMap_C_BindData");
static_assert(offsetof(WBP_SpawnRegionMap_C_BindData, NewUIData) == 0x000000, "Member 'WBP_SpawnRegionMap_C_BindData::NewUIData' has a wrong offset!");

// Function WBP_SpawnRegionMap.WBP_SpawnRegionMap_C.Cache Available Spawn Region Widgets
// 0x0068 (0x0068 - 0x0000)
struct WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets final
{
public:
	TArray<ESpawnRegion>                          AvailableSpawnRegions;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UWBP_SpawnRegion_Mark_C*                SpawnRegionMark;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SpawnRegion_Mark_C*                K2Node_DynamicCast_AsWBP_Spawn_Region_Mark;        // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets) == 0x000008, "Wrong alignment on WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets");
static_assert(sizeof(WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets) == 0x000068, "Wrong size on WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets");
static_assert(offsetof(WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets, AvailableSpawnRegions) == 0x000000, "Member 'WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets::AvailableSpawnRegions' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets, SpawnRegionMark) == 0x000010, "Member 'WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets::SpawnRegionMark' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets, Temp_byte_Variable) == 0x000024, "Member 'WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets, Temp_byte_Variable_1) == 0x000025, "Member 'WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets, Temp_bool_Variable) == 0x000026, "Member 'WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets, CallFunc_Array_Contains_ReturnValue) == 0x000027, "Member 'WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets, K2Node_Select_Default) == 0x000028, "Member 'WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets, CallFunc_GetAllChildren_ReturnValue) == 0x000030, "Member 'WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets, K2Node_DynamicCast_AsWBP_Spawn_Region_Mark) == 0x000058, "Member 'WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets::K2Node_DynamicCast_AsWBP_Spawn_Region_Mark' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WBP_SpawnRegionMap_C_Cache_Available_Spawn_Region_Widgets::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_SpawnRegionMap.WBP_SpawnRegionMap_C.CacheHackLocationWidgets
// 0x0048 (0x0048 - 0x0000)
struct WBP_SpawnRegionMap_C_CacheHackLocationWidgets final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SpawnRegion_HackPlace_C*           K2Node_DynamicCast_AsWBP_Spawn_Region_Hack_Place;  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnRegionMap_C_CacheHackLocationWidgets) == 0x000008, "Wrong alignment on WBP_SpawnRegionMap_C_CacheHackLocationWidgets");
static_assert(sizeof(WBP_SpawnRegionMap_C_CacheHackLocationWidgets) == 0x000048, "Wrong size on WBP_SpawnRegionMap_C_CacheHackLocationWidgets");
static_assert(offsetof(WBP_SpawnRegionMap_C_CacheHackLocationWidgets, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_SpawnRegionMap_C_CacheHackLocationWidgets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_CacheHackLocationWidgets, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_SpawnRegionMap_C_CacheHackLocationWidgets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_CacheHackLocationWidgets, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_SpawnRegionMap_C_CacheHackLocationWidgets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_CacheHackLocationWidgets, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'WBP_SpawnRegionMap_C_CacheHackLocationWidgets::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_CacheHackLocationWidgets, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_SpawnRegionMap_C_CacheHackLocationWidgets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_CacheHackLocationWidgets, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_SpawnRegionMap_C_CacheHackLocationWidgets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_CacheHackLocationWidgets, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_SpawnRegionMap_C_CacheHackLocationWidgets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_CacheHackLocationWidgets, K2Node_DynamicCast_AsWBP_Spawn_Region_Hack_Place) == 0x000038, "Member 'WBP_SpawnRegionMap_C_CacheHackLocationWidgets::K2Node_DynamicCast_AsWBP_Spawn_Region_Hack_Place' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_CacheHackLocationWidgets, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_SpawnRegionMap_C_CacheHackLocationWidgets::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_SpawnRegionMap.WBP_SpawnRegionMap_C.ClearPlayers
// 0x0040 (0x0040 - 0x0000)
struct WBP_SpawnRegionMap_C_ClearPlayers final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SpawnRegion_Mark_C*                K2Node_DynamicCast_AsWBP_Spawn_Region_Mark;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnRegionMap_C_ClearPlayers) == 0x000008, "Wrong alignment on WBP_SpawnRegionMap_C_ClearPlayers");
static_assert(sizeof(WBP_SpawnRegionMap_C_ClearPlayers) == 0x000040, "Wrong size on WBP_SpawnRegionMap_C_ClearPlayers");
static_assert(offsetof(WBP_SpawnRegionMap_C_ClearPlayers, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_SpawnRegionMap_C_ClearPlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ClearPlayers, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_SpawnRegionMap_C_ClearPlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ClearPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_SpawnRegionMap_C_ClearPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ClearPlayers, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'WBP_SpawnRegionMap_C_ClearPlayers::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ClearPlayers, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_SpawnRegionMap_C_ClearPlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ClearPlayers, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_SpawnRegionMap_C_ClearPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ClearPlayers, K2Node_DynamicCast_AsWBP_Spawn_Region_Mark) == 0x000030, "Member 'WBP_SpawnRegionMap_C_ClearPlayers::K2Node_DynamicCast_AsWBP_Spawn_Region_Mark' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ClearPlayers, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_SpawnRegionMap_C_ClearPlayers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ClearPlayers, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'WBP_SpawnRegionMap_C_ClearPlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_SpawnRegionMap.WBP_SpawnRegionMap_C.ExecuteUbergraph_WBP_SpawnRegionMap
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             K2Node_Event_NewUIData_1;                          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaGameWorldUIData*                 K2Node_DynamicCast_AsMatcha_Game_World_UI_Data;    // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOdyWidget*                             K2Node_DynamicCast_AsOdy_Widget;                   // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SpawnRegion_Mark_C*                K2Node_DynamicCast_AsWBP_Spawn_Region_Mark;        // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0094(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             K2Node_Event_NewUIData;                            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaGameWorldUIData*                 K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_1;  // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             K2Node_Event_OldUIData;                            // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaGameWorldUIData*                 K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_2;  // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             CallFunc_GetUIData_ReturnValue;                    // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaGameWorldUIData*                 K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_3;  // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap) == 0x000008, "Wrong alignment on WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap");
static_assert(sizeof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap) == 0x0000F0, "Wrong size on WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, EntryPoint) == 0x000000, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, CallFunc_GetAllChildren_ReturnValue) == 0x000018, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, K2Node_Event_NewUIData_1) == 0x000030, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::K2Node_Event_NewUIData_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, K2Node_DynamicCast_AsMatcha_Game_World_UI_Data) == 0x000038, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::K2Node_DynamicCast_AsMatcha_Game_World_UI_Data' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, CallFunc_GetAllChildren_ReturnValue_1) == 0x000048, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, Temp_int_Array_Index_Variable_1) == 0x000058, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, CallFunc_Array_Get_Item) == 0x000060, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, K2Node_DynamicCast_AsOdy_Widget) == 0x000070, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::K2Node_DynamicCast_AsOdy_Widget' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, K2Node_DynamicCast_AsWBP_Spawn_Region_Mark) == 0x000080, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::K2Node_DynamicCast_AsWBP_Spawn_Region_Mark' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, CallFunc_Less_IntInt_ReturnValue_1) == 0x000090, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, K2Node_CreateDelegate_OutputDelegate) == 0x000094, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, K2Node_Event_IsDesignTime) == 0x0000A4, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, K2Node_Event_NewUIData) == 0x0000A8, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::K2Node_Event_NewUIData' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_1) == 0x0000B0, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, K2Node_DynamicCast_bSuccess_3) == 0x0000B8, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, K2Node_Event_OldUIData) == 0x0000C0, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::K2Node_Event_OldUIData' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_2) == 0x0000C8, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_2' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, K2Node_DynamicCast_bSuccess_4) == 0x0000D0, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, CallFunc_GetUIData_ReturnValue) == 0x0000D8, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::CallFunc_GetUIData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_3) == 0x0000E0, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_3' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap, K2Node_DynamicCast_bSuccess_5) == 0x0000E8, "Member 'WBP_SpawnRegionMap_C_ExecuteUbergraph_WBP_SpawnRegionMap::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");

// Function WBP_SpawnRegionMap.WBP_SpawnRegionMap_C.OnUIDataSet
// 0x0008 (0x0008 - 0x0000)
struct WBP_SpawnRegionMap_C_OnUIDataSet final
{
public:
	class UOdyUIData*                             NewUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnRegionMap_C_OnUIDataSet) == 0x000008, "Wrong alignment on WBP_SpawnRegionMap_C_OnUIDataSet");
static_assert(sizeof(WBP_SpawnRegionMap_C_OnUIDataSet) == 0x000008, "Wrong size on WBP_SpawnRegionMap_C_OnUIDataSet");
static_assert(offsetof(WBP_SpawnRegionMap_C_OnUIDataSet, NewUIData) == 0x000000, "Member 'WBP_SpawnRegionMap_C_OnUIDataSet::NewUIData' has a wrong offset!");

// Function WBP_SpawnRegionMap.WBP_SpawnRegionMap_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_SpawnRegionMap_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnRegionMap_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_SpawnRegionMap_C_PreConstruct");
static_assert(sizeof(WBP_SpawnRegionMap_C_PreConstruct) == 0x000001, "Wrong size on WBP_SpawnRegionMap_C_PreConstruct");
static_assert(offsetof(WBP_SpawnRegionMap_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_SpawnRegionMap_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_SpawnRegionMap.WBP_SpawnRegionMap_C.UnbindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_SpawnRegionMap_C_UnbindData final
{
public:
	class UOdyUIData*                             OldUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnRegionMap_C_UnbindData) == 0x000008, "Wrong alignment on WBP_SpawnRegionMap_C_UnbindData");
static_assert(sizeof(WBP_SpawnRegionMap_C_UnbindData) == 0x000008, "Wrong size on WBP_SpawnRegionMap_C_UnbindData");
static_assert(offsetof(WBP_SpawnRegionMap_C_UnbindData, OldUIData) == 0x000000, "Member 'WBP_SpawnRegionMap_C_UnbindData::OldUIData' has a wrong offset!");

// Function WBP_SpawnRegionMap.WBP_SpawnRegionMap_C.Update Available Hacks
// 0x0048 (0x0048 - 0x0000)
struct WBP_SpawnRegionMap_C_Update_Available_Hacks final
{
public:
	class UMatchaGameWorldUIData*                 WorldUIData;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EHackType>                             CallFunc_Map_Keys_Keys;                            // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHackType                                     CallFunc_Array_Get_Item;                           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SpawnRegion_HackPlace_C*           CallFunc_Map_Find_Value;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnRegionMap_C_Update_Available_Hacks) == 0x000008, "Wrong alignment on WBP_SpawnRegionMap_C_Update_Available_Hacks");
static_assert(sizeof(WBP_SpawnRegionMap_C_Update_Available_Hacks) == 0x000048, "Wrong size on WBP_SpawnRegionMap_C_Update_Available_Hacks");
static_assert(offsetof(WBP_SpawnRegionMap_C_Update_Available_Hacks, WorldUIData) == 0x000000, "Member 'WBP_SpawnRegionMap_C_Update_Available_Hacks::WorldUIData' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Update_Available_Hacks, Temp_byte_Variable) == 0x000008, "Member 'WBP_SpawnRegionMap_C_Update_Available_Hacks::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Update_Available_Hacks, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WBP_SpawnRegionMap_C_Update_Available_Hacks::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Update_Available_Hacks, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_SpawnRegionMap_C_Update_Available_Hacks::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Update_Available_Hacks, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_SpawnRegionMap_C_Update_Available_Hacks::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Update_Available_Hacks, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WBP_SpawnRegionMap_C_Update_Available_Hacks::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Update_Available_Hacks, Temp_byte_Variable_1) == 0x000018, "Member 'WBP_SpawnRegionMap_C_Update_Available_Hacks::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Update_Available_Hacks, Temp_bool_Variable) == 0x000019, "Member 'WBP_SpawnRegionMap_C_Update_Available_Hacks::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Update_Available_Hacks, CallFunc_Map_Keys_Keys) == 0x000020, "Member 'WBP_SpawnRegionMap_C_Update_Available_Hacks::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Update_Available_Hacks, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_SpawnRegionMap_C_Update_Available_Hacks::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Update_Available_Hacks, CallFunc_Array_Get_Item) == 0x000034, "Member 'WBP_SpawnRegionMap_C_Update_Available_Hacks::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Update_Available_Hacks, CallFunc_Less_IntInt_ReturnValue) == 0x000035, "Member 'WBP_SpawnRegionMap_C_Update_Available_Hacks::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Update_Available_Hacks, CallFunc_Set_Contains_ReturnValue) == 0x000036, "Member 'WBP_SpawnRegionMap_C_Update_Available_Hacks::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Update_Available_Hacks, CallFunc_Map_Find_Value) == 0x000038, "Member 'WBP_SpawnRegionMap_C_Update_Available_Hacks::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Update_Available_Hacks, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'WBP_SpawnRegionMap_C_Update_Available_Hacks::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnRegionMap_C_Update_Available_Hacks, K2Node_Select_Default) == 0x000041, "Member 'WBP_SpawnRegionMap_C_Update_Available_Hacks::K2Node_Select_Default' has a wrong offset!");

}

