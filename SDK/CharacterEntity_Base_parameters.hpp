#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterEntity_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function CharacterEntity_Base.CharacterEntity_Base_C.Check if Tempest Projectile from Gear Already Exists
// 0x00A0 (0x00A0 - 0x0000)
struct CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists final
{
public:
	bool                                          AlreadyMadeTempest;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FoundOwnProj;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APE_Boot_DashDanceProjectile_C*         K2Node_DynamicCast_AsPE_Boot_Dash_Dance_Projectile; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerEntity_ReturnValue;               // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists) == 0x000008, "Wrong alignment on CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists");
static_assert(sizeof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists) == 0x0000A0, "Wrong size on CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists");
static_assert(offsetof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists, AlreadyMadeTempest) == 0x000000, "Member 'CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists::AlreadyMadeTempest' has a wrong offset!");
static_assert(offsetof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists, FoundOwnProj) == 0x000001, "Member 'CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists::FoundOwnProj' has a wrong offset!");
static_assert(offsetof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists, ObjectTypes) == 0x000008, "Member 'CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists::ObjectTypes' has a wrong offset!");
static_assert(offsetof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists, K2Node_MakeArray_Array) == 0x000018, "Member 'CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists, Temp_int_Array_Index_Variable) == 0x000028, "Member 'CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists, Temp_object_Variable) == 0x000038, "Member 'CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists, CallFunc_SphereOverlapActors_OutActors) == 0x000060, "Member 'CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists, CallFunc_SphereOverlapActors_ReturnValue) == 0x000070, "Member 'CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists, CallFunc_Array_IsEmpty_ReturnValue) == 0x000071, "Member 'CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists, CallFunc_Array_Get_Item) == 0x000078, "Member 'CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists, K2Node_DynamicCast_AsPE_Boot_Dash_Dance_Projectile) == 0x000080, "Member 'CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists::K2Node_DynamicCast_AsPE_Boot_Dash_Dance_Projectile' has a wrong offset!");
static_assert(offsetof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists, CallFunc_GetOwnerEntity_ReturnValue) == 0x000090, "Member 'CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists::CallFunc_GetOwnerEntity_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000099, "Member 'CharacterEntity_Base_C_Check_if_Tempest_Projectile_from_Gear_Already_Exists::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

}

