#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Ingame_MatchTimer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_Ingame_MatchTimer.WBP_Ingame_MatchTimer_C.BindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_Ingame_MatchTimer_C_BindData final
{
public:
	class UOdyUIData*                             NewUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Ingame_MatchTimer_C_BindData) == 0x000008, "Wrong alignment on WBP_Ingame_MatchTimer_C_BindData");
static_assert(sizeof(WBP_Ingame_MatchTimer_C_BindData) == 0x000008, "Wrong size on WBP_Ingame_MatchTimer_C_BindData");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_BindData, NewUIData) == 0x000000, "Member 'WBP_Ingame_MatchTimer_C_BindData::NewUIData' has a wrong offset!");

// Function WBP_Ingame_MatchTimer.WBP_Ingame_MatchTimer_C.BindZoneUIData
// 0x0008 (0x0008 - 0x0000)
struct WBP_Ingame_MatchTimer_C_BindZoneUIData final
{
public:
	class UMatchaZoneUIData*                      NewZoneUIData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Ingame_MatchTimer_C_BindZoneUIData) == 0x000008, "Wrong alignment on WBP_Ingame_MatchTimer_C_BindZoneUIData");
static_assert(sizeof(WBP_Ingame_MatchTimer_C_BindZoneUIData) == 0x000008, "Wrong size on WBP_Ingame_MatchTimer_C_BindZoneUIData");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_BindZoneUIData, NewZoneUIData) == 0x000000, "Member 'WBP_Ingame_MatchTimer_C_BindZoneUIData::NewZoneUIData' has a wrong offset!");

// Function WBP_Ingame_MatchTimer.WBP_Ingame_MatchTimer_C.ExecuteUbergraph_WBP_Ingame_MatchTimer
// 0x0120 (0x0120 - 0x0000)
struct WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FTimespan& OldValue, const struct FTimespan& NewValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float OldValue, float NewValue)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool OldValue, bool NewValue)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 OldValue, int32 NewValue)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             K2Node_Event_NewUIData;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOdyUIData*                             K2Node_Event_OldUIData;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaGameWorldUIData*                 K2Node_DynamicCast_AsMatcha_Game_World_UI_Data;    // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaGameWorldUIData*                 K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_1;  // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaZoneUIData*                      K2Node_CustomEvent_NewZoneUIData;                  // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaZoneUIData*                      K2Node_CustomEvent_ZoneUIData;                     // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_OldValue_4;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue_4;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OldValue_3;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue_3;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_OldValue_2;                     // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue_2;                     // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaUIDataModelBase*                 CallFunc_GetUIDataModel_ReturnValue;               // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float OldValue, float NewValue)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OldValue_1;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewValue_1;                     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              K2Node_CustomEvent_OldValue;                       // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_NewValue;                       // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FTimespan& OldValue, const struct FTimespan& NewValue)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0100(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetTimerVisual_CurrentTimerTime_ImplicitCast; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetTimerVisual_CurrentTimerTime_ImplicitCast_1; // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer) == 0x000008, "Wrong alignment on WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer");
static_assert(sizeof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer) == 0x000120, "Wrong size on WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, EntryPoint) == 0x000000, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_Event_NewUIData) == 0x000048, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_Event_NewUIData' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_Event_OldUIData) == 0x000050, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_Event_OldUIData' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_DynamicCast_AsMatcha_Game_World_UI_Data) == 0x000058, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_DynamicCast_AsMatcha_Game_World_UI_Data' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_1) == 0x000068, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_1' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_CustomEvent_NewZoneUIData) == 0x000078, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_CustomEvent_NewZoneUIData' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000080, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, CallFunc_IsValid_ReturnValue) == 0x000081, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_CustomEvent_ZoneUIData) == 0x000088, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_CustomEvent_ZoneUIData' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, CallFunc_IsValid_ReturnValue_1) == 0x000090, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_CustomEvent_OldValue_4) == 0x000094, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_CustomEvent_OldValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_CustomEvent_NewValue_4) == 0x000098, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_CustomEvent_NewValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_CustomEvent_OldValue_3) == 0x00009C, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_CustomEvent_OldValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_CustomEvent_NewValue_3) == 0x0000A0, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_CustomEvent_NewValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_CustomEvent_OldValue_2) == 0x0000A4, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_CustomEvent_OldValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_CustomEvent_NewValue_2) == 0x0000A5, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_CustomEvent_NewValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, CallFunc_GetUIDataModel_ReturnValue) == 0x0000A8, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::CallFunc_GetUIDataModel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000B0, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_CustomEvent_OldValue_1) == 0x0000C0, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_CustomEvent_OldValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_CustomEvent_NewValue_1) == 0x0000C4, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_CustomEvent_NewValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, CallFunc_Conv_IntToByte_ReturnValue) == 0x0000C8, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, CallFunc_GetValidValue_ReturnValue) == 0x0000C9, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_CustomEvent_OldValue) == 0x0000D0, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_CustomEvent_NewValue) == 0x0000D8, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, CallFunc_BreakTimespan_Days) == 0x0000E0, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, CallFunc_BreakTimespan_Hours) == 0x0000E4, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, CallFunc_BreakTimespan_Minutes) == 0x0000E8, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, CallFunc_BreakTimespan_Seconds) == 0x0000EC, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, CallFunc_BreakTimespan_Milliseconds) == 0x0000F0, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000F4, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000F8, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, K2Node_CreateDelegate_OutputDelegate_5) == 0x000100, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, CallFunc_SetTimerVisual_CurrentTimerTime_ImplicitCast) == 0x000110, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::CallFunc_SetTimerVisual_CurrentTimerTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer, CallFunc_SetTimerVisual_CurrentTimerTime_ImplicitCast_1) == 0x000118, "Member 'WBP_Ingame_MatchTimer_C_ExecuteUbergraph_WBP_Ingame_MatchTimer::CallFunc_SetTimerVisual_CurrentTimerTime_ImplicitCast_1' has a wrong offset!");

// Function WBP_Ingame_MatchTimer.WBP_Ingame_MatchTimer_C.GetTimerTextValue
// 0x0238 (0x0238 - 0x0000)
struct WBP_Ingame_MatchTimer_C_GetTimerTextValue final
{
public:
	double                                        CurrentTimerTime;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0010)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0110(0x0010)()
	class FText                                   Temp_text_Variable;                                // 0x0120(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0130(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0140(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0188(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01D0(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01F0(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0200(0x0010)()
	bool                                          Temp_bool_Variable_2;                              // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0218(0x0010)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0228(0x0010)()
};
static_assert(alignof(WBP_Ingame_MatchTimer_C_GetTimerTextValue) == 0x000008, "Wrong alignment on WBP_Ingame_MatchTimer_C_GetTimerTextValue");
static_assert(sizeof(WBP_Ingame_MatchTimer_C_GetTimerTextValue) == 0x000238, "Wrong size on WBP_Ingame_MatchTimer_C_GetTimerTextValue");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, CurrentTimerTime) == 0x000000, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::CurrentTimerTime' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, ReturnValue) == 0x000008, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, Temp_bool_Variable) == 0x000018, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, CallFunc_FTrunc_ReturnValue) == 0x00002C, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000038, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, CallFunc_FFloor_ReturnValue) == 0x000040, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, CallFunc_Percent_IntInt_ReturnValue) == 0x000090, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, Temp_bool_Variable_1) == 0x000094, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000098, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, K2Node_MakeArray_Array) == 0x0000F0, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, CallFunc_Format_ReturnValue) == 0x000100, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, CallFunc_Conv_IntToText_ReturnValue) == 0x000110, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, Temp_text_Variable) == 0x000120, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, K2Node_Select_Default) == 0x000130, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, K2Node_MakeStruct_FormatArgumentData_2) == 0x000140, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, K2Node_MakeStruct_FormatArgumentData_3) == 0x000188, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, K2Node_MakeArray_Array_1) == 0x0001D0, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, K2Node_MakeArray_Array_2) == 0x0001E0, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, CallFunc_Format_ReturnValue_1) == 0x0001F0, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, CallFunc_Format_ReturnValue_2) == 0x000200, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, Temp_bool_Variable_2) == 0x000210, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, K2Node_Select_Default_1) == 0x000218, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_GetTimerTextValue, K2Node_Select_Default_2) == 0x000228, "Member 'WBP_Ingame_MatchTimer_C_GetTimerTextValue::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_Ingame_MatchTimer.WBP_Ingame_MatchTimer_C.OnIsShrinkingChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_Ingame_MatchTimer_C_OnIsShrinkingChanged final
{
public:
	bool                                          OldValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewValue;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Ingame_MatchTimer_C_OnIsShrinkingChanged) == 0x000001, "Wrong alignment on WBP_Ingame_MatchTimer_C_OnIsShrinkingChanged");
static_assert(sizeof(WBP_Ingame_MatchTimer_C_OnIsShrinkingChanged) == 0x000002, "Wrong size on WBP_Ingame_MatchTimer_C_OnIsShrinkingChanged");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_OnIsShrinkingChanged, OldValue) == 0x000000, "Member 'WBP_Ingame_MatchTimer_C_OnIsShrinkingChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_OnIsShrinkingChanged, NewValue) == 0x000001, "Member 'WBP_Ingame_MatchTimer_C_OnIsShrinkingChanged::NewValue' has a wrong offset!");

// Function WBP_Ingame_MatchTimer.WBP_Ingame_MatchTimer_C.OnMatchPhaseChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_Ingame_MatchTimer_C_OnMatchPhaseChanged final
{
public:
	int32                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Ingame_MatchTimer_C_OnMatchPhaseChanged) == 0x000004, "Wrong alignment on WBP_Ingame_MatchTimer_C_OnMatchPhaseChanged");
static_assert(sizeof(WBP_Ingame_MatchTimer_C_OnMatchPhaseChanged) == 0x000008, "Wrong size on WBP_Ingame_MatchTimer_C_OnMatchPhaseChanged");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_OnMatchPhaseChanged, OldValue) == 0x000000, "Member 'WBP_Ingame_MatchTimer_C_OnMatchPhaseChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_OnMatchPhaseChanged, NewValue) == 0x000004, "Member 'WBP_Ingame_MatchTimer_C_OnMatchPhaseChanged::NewValue' has a wrong offset!");

// Function WBP_Ingame_MatchTimer.WBP_Ingame_MatchTimer_C.OnMatchStartTimerChanged
// 0x0010 (0x0010 - 0x0000)
struct WBP_Ingame_MatchTimer_C_OnMatchStartTimerChanged final
{
public:
	struct FTimespan                              OldValue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              NewValue;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Ingame_MatchTimer_C_OnMatchStartTimerChanged) == 0x000008, "Wrong alignment on WBP_Ingame_MatchTimer_C_OnMatchStartTimerChanged");
static_assert(sizeof(WBP_Ingame_MatchTimer_C_OnMatchStartTimerChanged) == 0x000010, "Wrong size on WBP_Ingame_MatchTimer_C_OnMatchStartTimerChanged");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_OnMatchStartTimerChanged, OldValue) == 0x000000, "Member 'WBP_Ingame_MatchTimer_C_OnMatchStartTimerChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_OnMatchStartTimerChanged, NewValue) == 0x000008, "Member 'WBP_Ingame_MatchTimer_C_OnMatchStartTimerChanged::NewValue' has a wrong offset!");

// Function WBP_Ingame_MatchTimer.WBP_Ingame_MatchTimer_C.OnSecondsUntilShrinkComplete
// 0x0008 (0x0008 - 0x0000)
struct WBP_Ingame_MatchTimer_C_OnSecondsUntilShrinkComplete final
{
public:
	float                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Ingame_MatchTimer_C_OnSecondsUntilShrinkComplete) == 0x000004, "Wrong alignment on WBP_Ingame_MatchTimer_C_OnSecondsUntilShrinkComplete");
static_assert(sizeof(WBP_Ingame_MatchTimer_C_OnSecondsUntilShrinkComplete) == 0x000008, "Wrong size on WBP_Ingame_MatchTimer_C_OnSecondsUntilShrinkComplete");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_OnSecondsUntilShrinkComplete, OldValue) == 0x000000, "Member 'WBP_Ingame_MatchTimer_C_OnSecondsUntilShrinkComplete::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_OnSecondsUntilShrinkComplete, NewValue) == 0x000004, "Member 'WBP_Ingame_MatchTimer_C_OnSecondsUntilShrinkComplete::NewValue' has a wrong offset!");

// Function WBP_Ingame_MatchTimer.WBP_Ingame_MatchTimer_C.OnSecondUntilShrinkChange
// 0x0008 (0x0008 - 0x0000)
struct WBP_Ingame_MatchTimer_C_OnSecondUntilShrinkChange final
{
public:
	float                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Ingame_MatchTimer_C_OnSecondUntilShrinkChange) == 0x000004, "Wrong alignment on WBP_Ingame_MatchTimer_C_OnSecondUntilShrinkChange");
static_assert(sizeof(WBP_Ingame_MatchTimer_C_OnSecondUntilShrinkChange) == 0x000008, "Wrong size on WBP_Ingame_MatchTimer_C_OnSecondUntilShrinkChange");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_OnSecondUntilShrinkChange, OldValue) == 0x000000, "Member 'WBP_Ingame_MatchTimer_C_OnSecondUntilShrinkChange::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_OnSecondUntilShrinkChange, NewValue) == 0x000004, "Member 'WBP_Ingame_MatchTimer_C_OnSecondUntilShrinkChange::NewValue' has a wrong offset!");

// Function WBP_Ingame_MatchTimer.WBP_Ingame_MatchTimer_C.SetTimerVisual
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_Ingame_MatchTimer_C_SetTimerVisual final
{
public:
	double                                        CurrentTimerTime;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentTime;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTimerTextValue_ReturnValue;            // 0x0038(0x0010)()
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Ingame_MatchTimer_C_SetTimerVisual) == 0x000008, "Wrong alignment on WBP_Ingame_MatchTimer_C_SetTimerVisual");
static_assert(sizeof(WBP_Ingame_MatchTimer_C_SetTimerVisual) == 0x0000A0, "Wrong size on WBP_Ingame_MatchTimer_C_SetTimerVisual");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_SetTimerVisual, CurrentTimerTime) == 0x000000, "Member 'WBP_Ingame_MatchTimer_C_SetTimerVisual::CurrentTimerTime' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_SetTimerVisual, CurrentTime) == 0x000008, "Member 'WBP_Ingame_MatchTimer_C_SetTimerVisual::CurrentTime' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_SetTimerVisual, Temp_bool_Variable) == 0x000010, "Member 'WBP_Ingame_MatchTimer_C_SetTimerVisual::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_SetTimerVisual, Temp_struct_Variable) == 0x000014, "Member 'WBP_Ingame_MatchTimer_C_SetTimerVisual::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_SetTimerVisual, Temp_struct_Variable_1) == 0x000024, "Member 'WBP_Ingame_MatchTimer_C_SetTimerVisual::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_SetTimerVisual, Temp_bool_Variable_1) == 0x000034, "Member 'WBP_Ingame_MatchTimer_C_SetTimerVisual::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_SetTimerVisual, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000035, "Member 'WBP_Ingame_MatchTimer_C_SetTimerVisual::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_SetTimerVisual, CallFunc_GetTimerTextValue_ReturnValue) == 0x000038, "Member 'WBP_Ingame_MatchTimer_C_SetTimerVisual::CallFunc_GetTimerTextValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_SetTimerVisual, K2Node_Select_Default) == 0x000048, "Member 'WBP_Ingame_MatchTimer_C_SetTimerVisual::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_SetTimerVisual, Temp_struct_Variable_2) == 0x000058, "Member 'WBP_Ingame_MatchTimer_C_SetTimerVisual::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_SetTimerVisual, Temp_struct_Variable_3) == 0x000068, "Member 'WBP_Ingame_MatchTimer_C_SetTimerVisual::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_SetTimerVisual, Temp_bool_Variable_2) == 0x000078, "Member 'WBP_Ingame_MatchTimer_C_SetTimerVisual::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_SetTimerVisual, K2Node_Select_Default_1) == 0x00007C, "Member 'WBP_Ingame_MatchTimer_C_SetTimerVisual::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_SetTimerVisual, K2Node_Select_Default_2) == 0x00008C, "Member 'WBP_Ingame_MatchTimer_C_SetTimerVisual::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_Ingame_MatchTimer.WBP_Ingame_MatchTimer_C.UnbindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_Ingame_MatchTimer_C_UnbindData final
{
public:
	class UOdyUIData*                             OldUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Ingame_MatchTimer_C_UnbindData) == 0x000008, "Wrong alignment on WBP_Ingame_MatchTimer_C_UnbindData");
static_assert(sizeof(WBP_Ingame_MatchTimer_C_UnbindData) == 0x000008, "Wrong size on WBP_Ingame_MatchTimer_C_UnbindData");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_UnbindData, OldUIData) == 0x000000, "Member 'WBP_Ingame_MatchTimer_C_UnbindData::OldUIData' has a wrong offset!");

// Function WBP_Ingame_MatchTimer.WBP_Ingame_MatchTimer_C.UnbindZoneUIData
// 0x0008 (0x0008 - 0x0000)
struct WBP_Ingame_MatchTimer_C_UnbindZoneUIData final
{
public:
	class UMatchaZoneUIData*                      ZoneUIData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Ingame_MatchTimer_C_UnbindZoneUIData) == 0x000008, "Wrong alignment on WBP_Ingame_MatchTimer_C_UnbindZoneUIData");
static_assert(sizeof(WBP_Ingame_MatchTimer_C_UnbindZoneUIData) == 0x000008, "Wrong size on WBP_Ingame_MatchTimer_C_UnbindZoneUIData");
static_assert(offsetof(WBP_Ingame_MatchTimer_C_UnbindZoneUIData, ZoneUIData) == 0x000000, "Member 'WBP_Ingame_MatchTimer_C_UnbindZoneUIData::ZoneUIData' has a wrong offset!");

}

