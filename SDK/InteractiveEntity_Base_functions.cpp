#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InteractiveEntity_Base

#include "Basic.hpp"

#include "InteractiveEntity_Base_classes.hpp"
#include "InteractiveEntity_Base_parameters.hpp"


namespace SDK
{

// Function InteractiveEntity_Base.InteractiveEntity_Base_C.AfterInteractionCancelledOrCompleted
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInteractiveEntity_Base_C::AfterInteractionCancelledOrCompleted(class AActor* InteractingActor, bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractiveEntity_Base_C", "AfterInteractionCancelledOrCompleted");

	Params::InteractiveEntity_Base_C_AfterInteractionCancelledOrCompleted Parms{};

	Parms.InteractingActor = InteractingActor;
	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InteractiveEntity_Base.InteractiveEntity_Base_C.AfterInteractionStarted
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AInteractiveEntity_Base_C::AfterInteractionStarted(class AActor* InteractingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractiveEntity_Base_C", "AfterInteractionStarted");

	Params::InteractiveEntity_Base_C_AfterInteractionStarted Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InteractiveEntity_Base.InteractiveEntity_Base_C.ExecuteUbergraph_InteractiveEntity_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInteractiveEntity_Base_C::ExecuteUbergraph_InteractiveEntity_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractiveEntity_Base_C", "ExecuteUbergraph_InteractiveEntity_Base");

	Params::InteractiveEntity_Base_C_ExecuteUbergraph_InteractiveEntity_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InteractiveEntity_Base.InteractiveEntity_Base_C.GetBroadcastChannel
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FGameplayTag AInteractiveEntity_Base_C::GetBroadcastChannel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractiveEntity_Base_C", "GetBroadcastChannel");

	Params::InteractiveEntity_Base_C_GetBroadcastChannel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InteractiveEntity_Base.InteractiveEntity_Base_C.InteractionProgressed
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   InteractionProgressTimeSeconds                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInteractiveEntity_Base_C::InteractionProgressed(class AActor* InteractingActor, float InteractionProgressTimeSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractiveEntity_Base_C", "InteractionProgressed");

	Params::InteractiveEntity_Base_C_InteractionProgressed Parms{};

	Parms.InteractingActor = InteractingActor;
	Parms.InteractionProgressTimeSeconds = InteractionProgressTimeSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InteractiveEntity_Base.InteractiveEntity_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AInteractiveEntity_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractiveEntity_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InteractiveEntity_Base.InteractiveEntity_Base_C.Try Broadcast Interaction Complete Event
// (Public, BlueprintCallable, BlueprintEvent)

void AInteractiveEntity_Base_C::Try_Broadcast_Interaction_Complete_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractiveEntity_Base_C", "Try Broadcast Interaction Complete Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InteractiveEntity_Base.InteractiveEntity_Base_C.CanStartInteraction
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AInteractiveEntity_Base_C::CanStartInteraction(class AActor* InteractingActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractiveEntity_Base_C", "CanStartInteraction");

	Params::InteractiveEntity_Base_C_CanStartInteraction Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InteractiveEntity_Base.InteractiveEntity_Base_C.GetInteractionPriority
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 AInteractiveEntity_Base_C::GetInteractionPriority(class AActor* InteractingActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractiveEntity_Base_C", "GetInteractionPriority");

	Params::InteractiveEntity_Base_C_GetInteractionPriority Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InteractiveEntity_Base.InteractiveEntity_Base_C.GetRemainingCooldownTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// double                                  RemainingCooldownSeconds                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInteractiveEntity_Base_C::GetRemainingCooldownTime(double* RemainingCooldownSeconds) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractiveEntity_Base_C", "GetRemainingCooldownTime");

	Params::InteractiveEntity_Base_C_GetRemainingCooldownTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RemainingCooldownSeconds != nullptr)
		*RemainingCooldownSeconds = Parms.RemainingCooldownSeconds;
}

}

