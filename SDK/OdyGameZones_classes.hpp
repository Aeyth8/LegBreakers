#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OdyGameZones

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Class OdyGameZones.OdyGameZone
// 0x0010 (0x02A0 - 0x0290)
class AOdyGameZone final : public AActor
{
public:
	class UOdyGameZoneDefinition*                 ZoneDefinition;                                    // 0x0290(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                          ZoneBounds;                                        // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnZoneDefinitionChanged(class UOdyGameZoneDefinition* InZoneDefinition);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OdyGameZone">();
	}
	static class AOdyGameZone* GetDefaultObj()
	{
		return GetDefaultObjImpl<AOdyGameZone>();
	}
};
static_assert(alignof(AOdyGameZone) == 0x000008, "Wrong alignment on AOdyGameZone");
static_assert(sizeof(AOdyGameZone) == 0x0002A0, "Wrong size on AOdyGameZone");
static_assert(offsetof(AOdyGameZone, ZoneDefinition) == 0x000290, "Member 'AOdyGameZone::ZoneDefinition' has a wrong offset!");
static_assert(offsetof(AOdyGameZone, ZoneBounds) == 0x000298, "Member 'AOdyGameZone::ZoneBounds' has a wrong offset!");

// Class OdyGameZones.OdyGameZoneDefinition
// 0x0018 (0x0048 - 0x0030)
class UOdyGameZoneDefinition final : public UPrimaryDataAsset
{
public:
	class FText                                   Name_0;                                            // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FColor                                 Tint;                                              // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OdyGameZoneDefinition">();
	}
	static class UOdyGameZoneDefinition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOdyGameZoneDefinition>();
	}
};
static_assert(alignof(UOdyGameZoneDefinition) == 0x000008, "Wrong alignment on UOdyGameZoneDefinition");
static_assert(sizeof(UOdyGameZoneDefinition) == 0x000048, "Wrong size on UOdyGameZoneDefinition");
static_assert(offsetof(UOdyGameZoneDefinition, Name_0) == 0x000030, "Member 'UOdyGameZoneDefinition::Name_0' has a wrong offset!");
static_assert(offsetof(UOdyGameZoneDefinition, Tint) == 0x000040, "Member 'UOdyGameZoneDefinition::Tint' has a wrong offset!");

// Class OdyGameZones.OdyGameZonePOI
// 0x0010 (0x02A0 - 0x0290)
class AOdyGameZonePOI : public AActor
{
public:
	class UBoxComponent*                          RelevanceBounds;                                   // 0x0290(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   DisplayName;                                       // 0x0298(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class FName GetDisplayName() const;
	struct FBox GetRelevanceBounds() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OdyGameZonePOI">();
	}
	static class AOdyGameZonePOI* GetDefaultObj()
	{
		return GetDefaultObjImpl<AOdyGameZonePOI>();
	}
};
static_assert(alignof(AOdyGameZonePOI) == 0x000008, "Wrong alignment on AOdyGameZonePOI");
static_assert(sizeof(AOdyGameZonePOI) == 0x0002A0, "Wrong size on AOdyGameZonePOI");
static_assert(offsetof(AOdyGameZonePOI, RelevanceBounds) == 0x000290, "Member 'AOdyGameZonePOI::RelevanceBounds' has a wrong offset!");
static_assert(offsetof(AOdyGameZonePOI, DisplayName) == 0x000298, "Member 'AOdyGameZonePOI::DisplayName' has a wrong offset!");

}

