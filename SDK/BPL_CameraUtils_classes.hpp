#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_CameraUtils

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPL_CameraUtils.BPL_CameraUtils_C
// 0x0000 (0x0028 - 0x0028)
class UBPL_CameraUtils_C final : public UBlueprintFunctionLibrary
{
public:
	static void AddExtraCameraActors(TArray<class AActor*>& Actors, class AActor* CameraActor, class UObject* __WorldContext);
	static void ComputeBaseHeightOffset(double CameraPitch, double CameraYLocation, class UObject* __WorldContext, double* HeightOffset);
	static void CheckGround(class AActor* CameraTarget, class UObject* __WorldContext, bool* Ground);
	static void ComputeViewParamsForPointsOfInterest(TArray<class AActor*>& PointsOfInterest, const struct FVector& MinimumVisibleAreaExtents, const struct FVector& MaximumVisibleAreaExtents, const struct FVector& ViewTargetOrigin, class UObject* __WorldContext, struct FVector* ViewExtents);
	static void CollectPointsOfInterest(class AActor* CameraTarget, const struct FVector& TargetLocationOffset, const struct FVector& MaxSearchRange, bool CombatMode, class UObject* __WorldContext, TArray<class AActor*>* PointsOfInterest);
	static void GetNextCameraTarget(class APlayerController_MatchaSnapNet_C* LocalPlayerController, class UObject* __WorldContext, class AActor** CameraTarget);
	static void GetCameraLocation(class AActor* Target, double Alpha, class AActor* Camera, class UObject* __WorldContext, struct FVector* Location);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPL_CameraUtils_C">();
	}
	static class UBPL_CameraUtils_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPL_CameraUtils_C>();
	}
};
static_assert(alignof(UBPL_CameraUtils_C) == 0x000008, "Wrong alignment on UBPL_CameraUtils_C");
static_assert(sizeof(UBPL_CameraUtils_C) == 0x000028, "Wrong size on UBPL_CameraUtils_C");

}

