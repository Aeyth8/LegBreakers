#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MinimapIndicator_Player

#include "Basic.hpp"

#include "WBP_MinimapIndicator_Player_classes.hpp"
#include "WBP_MinimapIndicator_Player_parameters.hpp"


namespace SDK
{

// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.BindData
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UOdyUIData*                       NewUIData                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_MinimapIndicator_Player_C::BindData(class UOdyUIData* NewUIData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinimapIndicator_Player_C", "BindData");

	Params::WBP_MinimapIndicator_Player_C_BindData Parms{};

	Parms.NewUIData = NewUIData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_MinimapIndicator_Player_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinimapIndicator_Player_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.ExecuteUbergraph_WBP_MinimapIndicator_Player
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MinimapIndicator_Player_C::ExecuteUbergraph_WBP_MinimapIndicator_Player(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinimapIndicator_Player_C", "ExecuteUbergraph_WBP_MinimapIndicator_Player");

	Params::WBP_MinimapIndicator_Player_C_ExecuteUbergraph_WBP_MinimapIndicator_Player Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.OnAliveStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OldValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MinimapIndicator_Player_C::OnAliveStateChanged(bool OldValue, bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinimapIndicator_Player_C", "OnAliveStateChanged");

	Params::WBP_MinimapIndicator_Player_C_OnAliveStateChanged Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_MinimapIndicator_Player_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinimapIndicator_Player_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.OnSpectatedPlayerChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMatchaPlayerUIData*              LocalPlayerUIData                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_MinimapIndicator_Player_C::OnSpectatedPlayerChanged(class UMatchaPlayerUIData* LocalPlayerUIData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinimapIndicator_Player_C", "OnSpectatedPlayerChanged");

	Params::WBP_MinimapIndicator_Player_C_OnSpectatedPlayerChanged Parms{};

	Parms.LocalPlayerUIData = LocalPlayerUIData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.OnTeamNumberChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   OldValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MinimapIndicator_Player_C::OnTeamNumberChanged(int32 OldValue, int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinimapIndicator_Player_C", "OnTeamNumberChanged");

	Params::WBP_MinimapIndicator_Player_C_OnTeamNumberChanged Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MinimapIndicator_Player_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinimapIndicator_Player_C", "PreConstruct");

	Params::WBP_MinimapIndicator_Player_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MinimapIndicator_Player_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinimapIndicator_Player_C", "Tick");

	Params::WBP_MinimapIndicator_Player_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.UnbindData
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UOdyUIData*                       OldUIData                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_MinimapIndicator_Player_C::UnbindData(class UOdyUIData* OldUIData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinimapIndicator_Player_C", "UnbindData");

	Params::WBP_MinimapIndicator_Player_C_UnbindData Parms{};

	Parms.OldUIData = OldUIData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.UpdateEnemyDmgPercent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   OldValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MinimapIndicator_Player_C::UpdateEnemyDmgPercent(int32 OldValue, int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinimapIndicator_Player_C", "UpdateEnemyDmgPercent");

	Params::WBP_MinimapIndicator_Player_C_UpdateEnemyDmgPercent Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.UpdateTeamColor
// (BlueprintCallable, BlueprintEvent)

void UWBP_MinimapIndicator_Player_C::UpdateTeamColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinimapIndicator_Player_C", "UpdateTeamColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MinimapIndicator_Player.WBP_MinimapIndicator_Player_C.UpdateZoneIndicator
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_MinimapIndicator_Player_C::UpdateZoneIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MinimapIndicator_Player_C", "UpdateZoneIndicator");

	UObject::ProcessEvent(Func, nullptr);
}

}

