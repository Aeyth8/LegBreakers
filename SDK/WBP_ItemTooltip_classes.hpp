#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemTooltip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "OdyUI_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Matcha_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ItemTooltip.WBP_ItemTooltip_C
// 0x00E8 (0x0480 - 0x0398)
class UWBP_ItemTooltip_C final : public UOdyWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0398(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             ItemDescription;                                   // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ItemName;                                          // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         ItemType;                                          // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                ItemTypeColor;                                     // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemTypeIcon;                                      // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ItemTypeText;                                      // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             OverloadedDescription;                             // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             OverloadedHeader;                                  // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OverloadedIcon;                                    // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           OverloadedPanel;                                   // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TooltipDecoratorLeft;                              // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TooltipDecoratorRight;                             // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventorySlot_C*                   WBP_InventorySlot;                                 // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           ItemTypeColorThrowable;                            // 0x0408(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ItemTypeColorInstant;                              // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            OverloadedActiveFontColor;                         // 0x0428(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            OverloadedInactiveFontColor;                       // 0x043C(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMatchaInventoryItemUIData*             InventoryItemUIData;                               // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OverloadedActiveIconOpacity;                       // 0x0458(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OverloadedInactiveIconOpacity;                     // 0x0468(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugIsOverloaded;                                // 0x0478(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BindData(class UOdyUIData* NewUIData);
	void BndEvt__WBP_ItemTooltip_WBP_InventorySlot_K2Node_ComponentBoundEvent_0_OnGearSlotBecameEnergized__DelegateSignature(bool NewEnergizedState);
	void ConsumeOnHold(bool OldValue, bool NewValue);
	void ExecuteUbergraph_WBP_ItemTooltip(int32 EntryPoint);
	void OnEnergizedChanged(bool OldValue, bool NewValue);
	void OnOverloadedItemTooltipChanged(const class FText& OldValue, const class FText& NewValue);
	void OnRarityChanged(int32 OldValue, int32 NewValue);
	void OnThrowableOnlyChanged(bool OldValue, bool NewValue);
	void OnUIDataSet(class UOdyUIData* NewUIData);
	void PreConstruct(bool IsDesignTime);
	void Set_Styling_Consumed(bool IsConsumed);
	void Set_Styling_Throwable(bool IsThrowable);
	void SetOverloadedStyling(bool bIsOverloaded);
	void SetRarityColors(const struct FLinearColor& RarityColor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ItemTooltip_C">();
	}
	static class UWBP_ItemTooltip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ItemTooltip_C>();
	}
};
static_assert(alignof(UWBP_ItemTooltip_C) == 0x000008, "Wrong alignment on UWBP_ItemTooltip_C");
static_assert(sizeof(UWBP_ItemTooltip_C) == 0x000480, "Wrong size on UWBP_ItemTooltip_C");
static_assert(offsetof(UWBP_ItemTooltip_C, UberGraphFrame) == 0x000398, "Member 'UWBP_ItemTooltip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, ItemDescription) == 0x0003A0, "Member 'UWBP_ItemTooltip_C::ItemDescription' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, ItemName) == 0x0003A8, "Member 'UWBP_ItemTooltip_C::ItemName' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, ItemType) == 0x0003B0, "Member 'UWBP_ItemTooltip_C::ItemType' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, ItemTypeColor) == 0x0003B8, "Member 'UWBP_ItemTooltip_C::ItemTypeColor' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, ItemTypeIcon) == 0x0003C0, "Member 'UWBP_ItemTooltip_C::ItemTypeIcon' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, ItemTypeText) == 0x0003C8, "Member 'UWBP_ItemTooltip_C::ItemTypeText' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, OverloadedDescription) == 0x0003D0, "Member 'UWBP_ItemTooltip_C::OverloadedDescription' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, OverloadedHeader) == 0x0003D8, "Member 'UWBP_ItemTooltip_C::OverloadedHeader' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, OverloadedIcon) == 0x0003E0, "Member 'UWBP_ItemTooltip_C::OverloadedIcon' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, OverloadedPanel) == 0x0003E8, "Member 'UWBP_ItemTooltip_C::OverloadedPanel' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, TooltipDecoratorLeft) == 0x0003F0, "Member 'UWBP_ItemTooltip_C::TooltipDecoratorLeft' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, TooltipDecoratorRight) == 0x0003F8, "Member 'UWBP_ItemTooltip_C::TooltipDecoratorRight' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, WBP_InventorySlot) == 0x000400, "Member 'UWBP_ItemTooltip_C::WBP_InventorySlot' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, ItemTypeColorThrowable) == 0x000408, "Member 'UWBP_ItemTooltip_C::ItemTypeColorThrowable' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, ItemTypeColorInstant) == 0x000418, "Member 'UWBP_ItemTooltip_C::ItemTypeColorInstant' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, OverloadedActiveFontColor) == 0x000428, "Member 'UWBP_ItemTooltip_C::OverloadedActiveFontColor' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, OverloadedInactiveFontColor) == 0x00043C, "Member 'UWBP_ItemTooltip_C::OverloadedInactiveFontColor' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, InventoryItemUIData) == 0x000450, "Member 'UWBP_ItemTooltip_C::InventoryItemUIData' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, OverloadedActiveIconOpacity) == 0x000458, "Member 'UWBP_ItemTooltip_C::OverloadedActiveIconOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, OverloadedInactiveIconOpacity) == 0x000468, "Member 'UWBP_ItemTooltip_C::OverloadedInactiveIconOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_ItemTooltip_C, bDebugIsOverloaded) == 0x000478, "Member 'UWBP_ItemTooltip_C::bDebugIsOverloaded' has a wrong offset!");

}

