#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_FloatingIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OdyUI_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_FloatingIndicator.WBP_FloatingIndicator_C
// 0x00C8 (0x0460 - 0x0398)
class UWBP_FloatingIndicator_C final : public UOdyWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0398(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       EnemyDamageIncreased;                              // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Compass;                                           // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             EnemyDmgPercent;                                   // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LethalIcon;                                        // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         LethalIconBox;                                     // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Portrait;                                          // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         PoolIndex;                                         // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Time;                                              // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ThisPlayerState;                                   // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TeamColor;                                         // 0x03F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InUse;                                             // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                LastCharacterPawn;                                 // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PawnPositionOnScreen;                              // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EnemyColor;                                        // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   PlayerName;                                        // 0x0438(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Player_Index;                                      // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaPlayerUIData*                    EnemyPlayerUIData;                                 // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   AllyUIDataContextName;                             // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AllyAliveStateChangedBindingEvent(bool OldValue, bool NewValue);
	void ExecuteUbergraph_WBP_FloatingIndicator(int32 EntryPoint);
	void ReleaseIndicator();
	void SetAllyIndicator(class UMatchaPlayerUIData* Player);
	void SetEnemyIndicator(class UMatchaPlayerUIData* PlayerUIData);
	void SetHidden();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void TickIndicator(const struct FVector& Position);
	void UpdateCompass();
	void UpdateEnemyDmgPercent(int32 OldValue, int32 NewValue);
	void UpdatePortrait();
	void UpdatePosition();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_FloatingIndicator_C">();
	}
	static class UWBP_FloatingIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_FloatingIndicator_C>();
	}
};
static_assert(alignof(UWBP_FloatingIndicator_C) == 0x000008, "Wrong alignment on UWBP_FloatingIndicator_C");
static_assert(sizeof(UWBP_FloatingIndicator_C) == 0x000460, "Wrong size on UWBP_FloatingIndicator_C");
static_assert(offsetof(UWBP_FloatingIndicator_C, UberGraphFrame) == 0x000398, "Member 'UWBP_FloatingIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_FloatingIndicator_C, EnemyDamageIncreased) == 0x0003A0, "Member 'UWBP_FloatingIndicator_C::EnemyDamageIncreased' has a wrong offset!");
static_assert(offsetof(UWBP_FloatingIndicator_C, Compass) == 0x0003A8, "Member 'UWBP_FloatingIndicator_C::Compass' has a wrong offset!");
static_assert(offsetof(UWBP_FloatingIndicator_C, EnemyDmgPercent) == 0x0003B0, "Member 'UWBP_FloatingIndicator_C::EnemyDmgPercent' has a wrong offset!");
static_assert(offsetof(UWBP_FloatingIndicator_C, Icon) == 0x0003B8, "Member 'UWBP_FloatingIndicator_C::Icon' has a wrong offset!");
static_assert(offsetof(UWBP_FloatingIndicator_C, LethalIcon) == 0x0003C0, "Member 'UWBP_FloatingIndicator_C::LethalIcon' has a wrong offset!");
static_assert(offsetof(UWBP_FloatingIndicator_C, LethalIconBox) == 0x0003C8, "Member 'UWBP_FloatingIndicator_C::LethalIconBox' has a wrong offset!");
static_assert(offsetof(UWBP_FloatingIndicator_C, Portrait) == 0x0003D0, "Member 'UWBP_FloatingIndicator_C::Portrait' has a wrong offset!");
static_assert(offsetof(UWBP_FloatingIndicator_C, SizeBox) == 0x0003D8, "Member 'UWBP_FloatingIndicator_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_FloatingIndicator_C, PoolIndex) == 0x0003E0, "Member 'UWBP_FloatingIndicator_C::PoolIndex' has a wrong offset!");
static_assert(offsetof(UWBP_FloatingIndicator_C, Time) == 0x0003E8, "Member 'UWBP_FloatingIndicator_C::Time' has a wrong offset!");
static_assert(offsetof(UWBP_FloatingIndicator_C, ThisPlayerState) == 0x0003F0, "Member 'UWBP_FloatingIndicator_C::ThisPlayerState' has a wrong offset!");
static_assert(offsetof(UWBP_FloatingIndicator_C, TeamColor) == 0x0003F8, "Member 'UWBP_FloatingIndicator_C::TeamColor' has a wrong offset!");
static_assert(offsetof(UWBP_FloatingIndicator_C, InUse) == 0x000408, "Member 'UWBP_FloatingIndicator_C::InUse' has a wrong offset!");
static_assert(offsetof(UWBP_FloatingIndicator_C, LastCharacterPawn) == 0x000410, "Member 'UWBP_FloatingIndicator_C::LastCharacterPawn' has a wrong offset!");
static_assert(offsetof(UWBP_FloatingIndicator_C, PawnPositionOnScreen) == 0x000418, "Member 'UWBP_FloatingIndicator_C::PawnPositionOnScreen' has a wrong offset!");
static_assert(offsetof(UWBP_FloatingIndicator_C, EnemyColor) == 0x000428, "Member 'UWBP_FloatingIndicator_C::EnemyColor' has a wrong offset!");
static_assert(offsetof(UWBP_FloatingIndicator_C, PlayerName) == 0x000438, "Member 'UWBP_FloatingIndicator_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UWBP_FloatingIndicator_C, Player_Index) == 0x000448, "Member 'UWBP_FloatingIndicator_C::Player_Index' has a wrong offset!");
static_assert(offsetof(UWBP_FloatingIndicator_C, EnemyPlayerUIData) == 0x000450, "Member 'UWBP_FloatingIndicator_C::EnemyPlayerUIData' has a wrong offset!");
static_assert(offsetof(UWBP_FloatingIndicator_C, AllyUIDataContextName) == 0x000458, "Member 'UWBP_FloatingIndicator_C::AllyUIDataContextName' has a wrong offset!");

}

