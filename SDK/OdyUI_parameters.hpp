#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OdyUI

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "OdyUtils_structs.hpp"
#include "OdyUI_structs.hpp"
#include "InputCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_structs.hpp"
#include "StructUtils_structs.hpp"
#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function OdyUI.OdyWidget.AddDataBindingContext
// 0x0008 (0x0008 - 0x0000)
struct OdyWidget_AddDataBindingContext final
{
public:
	class FName                                   ContextName;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWidget_AddDataBindingContext) == 0x000004, "Wrong alignment on OdyWidget_AddDataBindingContext");
static_assert(sizeof(OdyWidget_AddDataBindingContext) == 0x000008, "Wrong size on OdyWidget_AddDataBindingContext");
static_assert(offsetof(OdyWidget_AddDataBindingContext, ContextName) == 0x000000, "Member 'OdyWidget_AddDataBindingContext::ContextName' has a wrong offset!");

// Function OdyUI.OdyWidget.AddInputMappingContext
// 0x0008 (0x0008 - 0x0000)
struct OdyWidget_AddInputMappingContext final
{
public:
	class UInputMappingContext*                   InputContext;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWidget_AddInputMappingContext) == 0x000008, "Wrong alignment on OdyWidget_AddInputMappingContext");
static_assert(sizeof(OdyWidget_AddInputMappingContext) == 0x000008, "Wrong size on OdyWidget_AddInputMappingContext");
static_assert(offsetof(OdyWidget_AddInputMappingContext, InputContext) == 0x000000, "Member 'OdyWidget_AddInputMappingContext::InputContext' has a wrong offset!");

// Function OdyUI.OdyWidget.BindData
// 0x0008 (0x0008 - 0x0000)
struct OdyWidget_BindData final
{
public:
	class UOdyUIData*                             NewUIData;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWidget_BindData) == 0x000008, "Wrong alignment on OdyWidget_BindData");
static_assert(sizeof(OdyWidget_BindData) == 0x000008, "Wrong size on OdyWidget_BindData");
static_assert(offsetof(OdyWidget_BindData, NewUIData) == 0x000000, "Member 'OdyWidget_BindData::NewUIData' has a wrong offset!");

// Function OdyUI.OdyWidget.ClearBindingsWithContext
// 0x0008 (0x0008 - 0x0000)
struct OdyWidget_ClearBindingsWithContext final
{
public:
	class FName                                   BindingContext;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWidget_ClearBindingsWithContext) == 0x000004, "Wrong alignment on OdyWidget_ClearBindingsWithContext");
static_assert(sizeof(OdyWidget_ClearBindingsWithContext) == 0x000008, "Wrong size on OdyWidget_ClearBindingsWithContext");
static_assert(offsetof(OdyWidget_ClearBindingsWithContext, BindingContext) == 0x000000, "Member 'OdyWidget_ClearBindingsWithContext::BindingContext' has a wrong offset!");

// Function OdyUI.OdyWidget.GetWidgetToFocus
// 0x0008 (0x0008 - 0x0000)
struct OdyWidget_GetWidgetToFocus final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWidget_GetWidgetToFocus) == 0x000008, "Wrong alignment on OdyWidget_GetWidgetToFocus");
static_assert(sizeof(OdyWidget_GetWidgetToFocus) == 0x000008, "Wrong size on OdyWidget_GetWidgetToFocus");
static_assert(offsetof(OdyWidget_GetWidgetToFocus, ReturnValue) == 0x000000, "Member 'OdyWidget_GetWidgetToFocus::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyWidget.OnLocalBasePlayerStateAndGameStateReady
// 0x0010 (0x0010 - 0x0000)
struct OdyWidget_OnLocalBasePlayerStateAndGameStateReady final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGameStateBase*                         GameState;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWidget_OnLocalBasePlayerStateAndGameStateReady) == 0x000008, "Wrong alignment on OdyWidget_OnLocalBasePlayerStateAndGameStateReady");
static_assert(sizeof(OdyWidget_OnLocalBasePlayerStateAndGameStateReady) == 0x000010, "Wrong size on OdyWidget_OnLocalBasePlayerStateAndGameStateReady");
static_assert(offsetof(OdyWidget_OnLocalBasePlayerStateAndGameStateReady, PlayerState) == 0x000000, "Member 'OdyWidget_OnLocalBasePlayerStateAndGameStateReady::PlayerState' has a wrong offset!");
static_assert(offsetof(OdyWidget_OnLocalBasePlayerStateAndGameStateReady, GameState) == 0x000008, "Member 'OdyWidget_OnLocalBasePlayerStateAndGameStateReady::GameState' has a wrong offset!");

// Function OdyUI.OdyWidget.OnNetOwnerBasePlayerStateSet
// 0x0008 (0x0008 - 0x0000)
struct OdyWidget_OnNetOwnerBasePlayerStateSet final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWidget_OnNetOwnerBasePlayerStateSet) == 0x000008, "Wrong alignment on OdyWidget_OnNetOwnerBasePlayerStateSet");
static_assert(sizeof(OdyWidget_OnNetOwnerBasePlayerStateSet) == 0x000008, "Wrong size on OdyWidget_OnNetOwnerBasePlayerStateSet");
static_assert(offsetof(OdyWidget_OnNetOwnerBasePlayerStateSet, PlayerState) == 0x000000, "Member 'OdyWidget_OnNetOwnerBasePlayerStateSet::PlayerState' has a wrong offset!");

// Function OdyUI.OdyWidget.OnUIDataSet
// 0x0008 (0x0008 - 0x0000)
struct OdyWidget_OnUIDataSet final
{
public:
	class UOdyUIData*                             NewUIData;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWidget_OnUIDataSet) == 0x000008, "Wrong alignment on OdyWidget_OnUIDataSet");
static_assert(sizeof(OdyWidget_OnUIDataSet) == 0x000008, "Wrong size on OdyWidget_OnUIDataSet");
static_assert(offsetof(OdyWidget_OnUIDataSet, NewUIData) == 0x000000, "Member 'OdyWidget_OnUIDataSet::NewUIData' has a wrong offset!");

// Function OdyUI.OdyWidget.RemoveInputMappingContext
// 0x0008 (0x0008 - 0x0000)
struct OdyWidget_RemoveInputMappingContext final
{
public:
	class UInputMappingContext*                   InputContext;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWidget_RemoveInputMappingContext) == 0x000008, "Wrong alignment on OdyWidget_RemoveInputMappingContext");
static_assert(sizeof(OdyWidget_RemoveInputMappingContext) == 0x000008, "Wrong size on OdyWidget_RemoveInputMappingContext");
static_assert(offsetof(OdyWidget_RemoveInputMappingContext, InputContext) == 0x000000, "Member 'OdyWidget_RemoveInputMappingContext::InputContext' has a wrong offset!");

// Function OdyUI.OdyWidget.RemoveLatestDataBindingContext
// 0x0008 (0x0008 - 0x0000)
struct OdyWidget_RemoveLatestDataBindingContext final
{
public:
	class FName                                   ContextName;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWidget_RemoveLatestDataBindingContext) == 0x000004, "Wrong alignment on OdyWidget_RemoveLatestDataBindingContext");
static_assert(sizeof(OdyWidget_RemoveLatestDataBindingContext) == 0x000008, "Wrong size on OdyWidget_RemoveLatestDataBindingContext");
static_assert(offsetof(OdyWidget_RemoveLatestDataBindingContext, ContextName) == 0x000000, "Member 'OdyWidget_RemoveLatestDataBindingContext::ContextName' has a wrong offset!");

// Function OdyUI.OdyWidget.SetInputContextPriority
// 0x0001 (0x0001 - 0x0000)
struct OdyWidget_SetInputContextPriority final
{
public:
	EOdyInputContextPriority                      InInputContextPriority;                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWidget_SetInputContextPriority) == 0x000001, "Wrong alignment on OdyWidget_SetInputContextPriority");
static_assert(sizeof(OdyWidget_SetInputContextPriority) == 0x000001, "Wrong size on OdyWidget_SetInputContextPriority");
static_assert(offsetof(OdyWidget_SetInputContextPriority, InInputContextPriority) == 0x000000, "Member 'OdyWidget_SetInputContextPriority::InInputContextPriority' has a wrong offset!");

// Function OdyUI.OdyWidget.SetNetOwnerPlayerState
// 0x0008 (0x0008 - 0x0000)
struct OdyWidget_SetNetOwnerPlayerState final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWidget_SetNetOwnerPlayerState) == 0x000008, "Wrong alignment on OdyWidget_SetNetOwnerPlayerState");
static_assert(sizeof(OdyWidget_SetNetOwnerPlayerState) == 0x000008, "Wrong size on OdyWidget_SetNetOwnerPlayerState");
static_assert(offsetof(OdyWidget_SetNetOwnerPlayerState, PlayerState) == 0x000000, "Member 'OdyWidget_SetNetOwnerPlayerState::PlayerState' has a wrong offset!");

// Function OdyUI.OdyWidget.SetTickWhenOffscreen
// 0x0001 (0x0001 - 0x0000)
struct OdyWidget_SetTickWhenOffscreen final
{
public:
	bool                                          bInTickWhenOffscreen;                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWidget_SetTickWhenOffscreen) == 0x000001, "Wrong alignment on OdyWidget_SetTickWhenOffscreen");
static_assert(sizeof(OdyWidget_SetTickWhenOffscreen) == 0x000001, "Wrong size on OdyWidget_SetTickWhenOffscreen");
static_assert(offsetof(OdyWidget_SetTickWhenOffscreen, bInTickWhenOffscreen) == 0x000000, "Member 'OdyWidget_SetTickWhenOffscreen::bInTickWhenOffscreen' has a wrong offset!");

// Function OdyUI.OdyWidget.SetUIData
// 0x0008 (0x0008 - 0x0000)
struct OdyWidget_SetUIData final
{
public:
	class UOdyUIData*                             InUIData;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWidget_SetUIData) == 0x000008, "Wrong alignment on OdyWidget_SetUIData");
static_assert(sizeof(OdyWidget_SetUIData) == 0x000008, "Wrong size on OdyWidget_SetUIData");
static_assert(offsetof(OdyWidget_SetUIData, InUIData) == 0x000000, "Member 'OdyWidget_SetUIData::InUIData' has a wrong offset!");

// Function OdyUI.OdyWidget.UnbindData
// 0x0008 (0x0008 - 0x0000)
struct OdyWidget_UnbindData final
{
public:
	class UOdyUIData*                             OldUIData;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWidget_UnbindData) == 0x000008, "Wrong alignment on OdyWidget_UnbindData");
static_assert(sizeof(OdyWidget_UnbindData) == 0x000008, "Wrong size on OdyWidget_UnbindData");
static_assert(offsetof(OdyWidget_UnbindData, OldUIData) == 0x000000, "Member 'OdyWidget_UnbindData::OldUIData' has a wrong offset!");

// Function OdyUI.OdyWidget.GetCurrentDataBindingContext
// 0x0008 (0x0008 - 0x0000)
struct OdyWidget_GetCurrentDataBindingContext final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWidget_GetCurrentDataBindingContext) == 0x000004, "Wrong alignment on OdyWidget_GetCurrentDataBindingContext");
static_assert(sizeof(OdyWidget_GetCurrentDataBindingContext) == 0x000008, "Wrong size on OdyWidget_GetCurrentDataBindingContext");
static_assert(offsetof(OdyWidget_GetCurrentDataBindingContext, ReturnValue) == 0x000000, "Member 'OdyWidget_GetCurrentDataBindingContext::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyWidget.GetNetOwnerBasePlayerState
// 0x0008 (0x0008 - 0x0000)
struct OdyWidget_GetNetOwnerBasePlayerState final
{
public:
	class APlayerState*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWidget_GetNetOwnerBasePlayerState) == 0x000008, "Wrong alignment on OdyWidget_GetNetOwnerBasePlayerState");
static_assert(sizeof(OdyWidget_GetNetOwnerBasePlayerState) == 0x000008, "Wrong size on OdyWidget_GetNetOwnerBasePlayerState");
static_assert(offsetof(OdyWidget_GetNetOwnerBasePlayerState, ReturnValue) == 0x000000, "Member 'OdyWidget_GetNetOwnerBasePlayerState::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyWidget.GetUIData
// 0x0008 (0x0008 - 0x0000)
struct OdyWidget_GetUIData final
{
public:
	class UOdyUIData*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWidget_GetUIData) == 0x000008, "Wrong alignment on OdyWidget_GetUIData");
static_assert(sizeof(OdyWidget_GetUIData) == 0x000008, "Wrong size on OdyWidget_GetUIData");
static_assert(offsetof(OdyWidget_GetUIData, ReturnValue) == 0x000000, "Member 'OdyWidget_GetUIData::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyWidget.GetWidgetToFocusNames
// 0x0010 (0x0010 - 0x0000)
struct OdyWidget_GetWidgetToFocusNames final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWidget_GetWidgetToFocusNames) == 0x000008, "Wrong alignment on OdyWidget_GetWidgetToFocusNames");
static_assert(sizeof(OdyWidget_GetWidgetToFocusNames) == 0x000010, "Wrong size on OdyWidget_GetWidgetToFocusNames");
static_assert(offsetof(OdyWidget_GetWidgetToFocusNames, ReturnValue) == 0x000000, "Member 'OdyWidget_GetWidgetToFocusNames::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyWidget.HasOwnerFocus
// 0x0002 (0x0002 - 0x0000)
struct OdyWidget_HasOwnerFocus final
{
public:
	bool                                          bIncludingDescendants;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWidget_HasOwnerFocus) == 0x000001, "Wrong alignment on OdyWidget_HasOwnerFocus");
static_assert(sizeof(OdyWidget_HasOwnerFocus) == 0x000002, "Wrong size on OdyWidget_HasOwnerFocus");
static_assert(offsetof(OdyWidget_HasOwnerFocus, bIncludingDescendants) == 0x000000, "Member 'OdyWidget_HasOwnerFocus::bIncludingDescendants' has a wrong offset!");
static_assert(offsetof(OdyWidget_HasOwnerFocus, ReturnValue) == 0x000001, "Member 'OdyWidget_HasOwnerFocus::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyMenu.HideOtherModalUntilClosed
// 0x0008 (0x0008 - 0x0000)
struct OdyMenu_HideOtherModalUntilClosed final
{
public:
	class UOdyMenu*                               OtherMenu;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyMenu_HideOtherModalUntilClosed) == 0x000008, "Wrong alignment on OdyMenu_HideOtherModalUntilClosed");
static_assert(sizeof(OdyMenu_HideOtherModalUntilClosed) == 0x000008, "Wrong size on OdyMenu_HideOtherModalUntilClosed");
static_assert(offsetof(OdyMenu_HideOtherModalUntilClosed, OtherMenu) == 0x000000, "Member 'OdyMenu_HideOtherModalUntilClosed::OtherMenu' has a wrong offset!");

// Function OdyUI.OdyMenu.OnNavigatedAway
// 0x0001 (0x0001 - 0x0000)
struct OdyMenu_OnNavigatedAway final
{
public:
	EOdyNavigationDirection                       NavDirection;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyMenu_OnNavigatedAway) == 0x000001, "Wrong alignment on OdyMenu_OnNavigatedAway");
static_assert(sizeof(OdyMenu_OnNavigatedAway) == 0x000001, "Wrong size on OdyMenu_OnNavigatedAway");
static_assert(offsetof(OdyMenu_OnNavigatedAway, NavDirection) == 0x000000, "Member 'OdyMenu_OnNavigatedAway::NavDirection' has a wrong offset!");

// Function OdyUI.OdyMenu.OnNavigatedTo
// 0x0068 (0x0068 - 0x0000)
struct OdyMenu_OnNavigatedTo final
{
public:
	TMap<class FString, class FString>            Args;                                              // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Action;                                            // 0x0050(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOdyNavigationDirection                       NavDirection;                                      // 0x0060(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyMenu_OnNavigatedTo) == 0x000008, "Wrong alignment on OdyMenu_OnNavigatedTo");
static_assert(sizeof(OdyMenu_OnNavigatedTo) == 0x000068, "Wrong size on OdyMenu_OnNavigatedTo");
static_assert(offsetof(OdyMenu_OnNavigatedTo, Args) == 0x000000, "Member 'OdyMenu_OnNavigatedTo::Args' has a wrong offset!");
static_assert(offsetof(OdyMenu_OnNavigatedTo, Action) == 0x000050, "Member 'OdyMenu_OnNavigatedTo::Action' has a wrong offset!");
static_assert(offsetof(OdyMenu_OnNavigatedTo, NavDirection) == 0x000060, "Member 'OdyMenu_OnNavigatedTo::NavDirection' has a wrong offset!");

// Function OdyUI.OdyMenu.SetInputModeOverride
// 0x0001 (0x0001 - 0x0000)
struct OdyMenu_SetInputModeOverride final
{
public:
	EMenuInputMode                                InputMode;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyMenu_SetInputModeOverride) == 0x000001, "Wrong alignment on OdyMenu_SetInputModeOverride");
static_assert(sizeof(OdyMenu_SetInputModeOverride) == 0x000001, "Wrong size on OdyMenu_SetInputModeOverride");
static_assert(offsetof(OdyMenu_SetInputModeOverride, InputMode) == 0x000000, "Member 'OdyMenu_SetInputModeOverride::InputMode' has a wrong offset!");

// Function OdyUI.OdyMenu.SetModalPriorityOverride
// 0x0001 (0x0001 - 0x0000)
struct OdyMenu_SetModalPriorityOverride final
{
public:
	EOdyModalPriority                             ModalPri;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyMenu_SetModalPriorityOverride) == 0x000001, "Wrong alignment on OdyMenu_SetModalPriorityOverride");
static_assert(sizeof(OdyMenu_SetModalPriorityOverride) == 0x000001, "Wrong size on OdyMenu_SetModalPriorityOverride");
static_assert(offsetof(OdyMenu_SetModalPriorityOverride, ModalPri) == 0x000000, "Member 'OdyMenu_SetModalPriorityOverride::ModalPri' has a wrong offset!");

// Function OdyUI.OdyMenu.SetNeverWantsInput
// 0x0001 (0x0001 - 0x0000)
struct OdyMenu_SetNeverWantsInput final
{
public:
	bool                                          bNeverWantsInput;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyMenu_SetNeverWantsInput) == 0x000001, "Wrong alignment on OdyMenu_SetNeverWantsInput");
static_assert(sizeof(OdyMenu_SetNeverWantsInput) == 0x000001, "Wrong size on OdyMenu_SetNeverWantsInput");
static_assert(offsetof(OdyMenu_SetNeverWantsInput, bNeverWantsInput) == 0x000000, "Member 'OdyMenu_SetNeverWantsInput::bNeverWantsInput' has a wrong offset!");

// Function OdyUI.OdyMenu.SetWantsAnalogCursor
// 0x0001 (0x0001 - 0x0000)
struct OdyMenu_SetWantsAnalogCursor final
{
public:
	EOdyAnalogCursorSetting                       InWantsAnalogCursor;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyMenu_SetWantsAnalogCursor) == 0x000001, "Wrong alignment on OdyMenu_SetWantsAnalogCursor");
static_assert(sizeof(OdyMenu_SetWantsAnalogCursor) == 0x000001, "Wrong size on OdyMenu_SetWantsAnalogCursor");
static_assert(offsetof(OdyMenu_SetWantsAnalogCursor, InWantsAnalogCursor) == 0x000000, "Member 'OdyMenu_SetWantsAnalogCursor::InWantsAnalogCursor' has a wrong offset!");

// Function OdyUI.OdyMenu.SetWantsAnalogCursorHidden
// 0x0001 (0x0001 - 0x0000)
struct OdyMenu_SetWantsAnalogCursorHidden final
{
public:
	EOdyAnalogCursorSetting                       InWantsAnalogCursorHidden;                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyMenu_SetWantsAnalogCursorHidden) == 0x000001, "Wrong alignment on OdyMenu_SetWantsAnalogCursorHidden");
static_assert(sizeof(OdyMenu_SetWantsAnalogCursorHidden) == 0x000001, "Wrong size on OdyMenu_SetWantsAnalogCursorHidden");
static_assert(offsetof(OdyMenu_SetWantsAnalogCursorHidden, InWantsAnalogCursorHidden) == 0x000000, "Member 'OdyMenu_SetWantsAnalogCursorHidden::InWantsAnalogCursorHidden' has a wrong offset!");

// Function OdyUI.OdyMenu.SetWantsAnalogCursorLocked
// 0x0001 (0x0001 - 0x0000)
struct OdyMenu_SetWantsAnalogCursorLocked final
{
public:
	EOdyAnalogCursorSetting                       InWantsAnalogCursorLocked;                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyMenu_SetWantsAnalogCursorLocked) == 0x000001, "Wrong alignment on OdyMenu_SetWantsAnalogCursorLocked");
static_assert(sizeof(OdyMenu_SetWantsAnalogCursorLocked) == 0x000001, "Wrong size on OdyMenu_SetWantsAnalogCursorLocked");
static_assert(offsetof(OdyMenu_SetWantsAnalogCursorLocked, InWantsAnalogCursorLocked) == 0x000000, "Member 'OdyMenu_SetWantsAnalogCursorLocked::InWantsAnalogCursorLocked' has a wrong offset!");

// Function OdyUI.OdyMenu.GetInputMode
// 0x0001 (0x0001 - 0x0000)
struct OdyMenu_GetInputMode final
{
public:
	EMenuInputMode                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyMenu_GetInputMode) == 0x000001, "Wrong alignment on OdyMenu_GetInputMode");
static_assert(sizeof(OdyMenu_GetInputMode) == 0x000001, "Wrong size on OdyMenu_GetInputMode");
static_assert(offsetof(OdyMenu_GetInputMode, ReturnValue) == 0x000000, "Member 'OdyMenu_GetInputMode::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyMenu.GetModalPriority
// 0x0001 (0x0001 - 0x0000)
struct OdyMenu_GetModalPriority final
{
public:
	EOdyModalPriority                             ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyMenu_GetModalPriority) == 0x000001, "Wrong alignment on OdyMenu_GetModalPriority");
static_assert(sizeof(OdyMenu_GetModalPriority) == 0x000001, "Wrong size on OdyMenu_GetModalPriority");
static_assert(offsetof(OdyMenu_GetModalPriority, ReturnValue) == 0x000000, "Member 'OdyMenu_GetModalPriority::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyDeferredPainter.SetEnableDeferPaint
// 0x0001 (0x0001 - 0x0000)
struct OdyDeferredPainter_SetEnableDeferPaint final
{
public:
	bool                                          bInEnableDeferPaint;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyDeferredPainter_SetEnableDeferPaint) == 0x000001, "Wrong alignment on OdyDeferredPainter_SetEnableDeferPaint");
static_assert(sizeof(OdyDeferredPainter_SetEnableDeferPaint) == 0x000001, "Wrong size on OdyDeferredPainter_SetEnableDeferPaint");
static_assert(offsetof(OdyDeferredPainter_SetEnableDeferPaint, bInEnableDeferPaint) == 0x000000, "Member 'OdyDeferredPainter_SetEnableDeferPaint::bInEnableDeferPaint' has a wrong offset!");

// Function OdyUI.OdyDeferredPainter.GetEnableDeferPaint
// 0x0001 (0x0001 - 0x0000)
struct OdyDeferredPainter_GetEnableDeferPaint final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyDeferredPainter_GetEnableDeferPaint) == 0x000001, "Wrong alignment on OdyDeferredPainter_GetEnableDeferPaint");
static_assert(sizeof(OdyDeferredPainter_GetEnableDeferPaint) == 0x000001, "Wrong size on OdyDeferredPainter_GetEnableDeferPaint");
static_assert(offsetof(OdyDeferredPainter_GetEnableDeferPaint, ReturnValue) == 0x000000, "Member 'OdyDeferredPainter_GetEnableDeferPaint::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyEnhancedInputPlatformData.UpdateMappingContextRedirects
// 0x0001 (0x0001 - 0x0000)
struct OdyEnhancedInputPlatformData_UpdateMappingContextRedirects final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyEnhancedInputPlatformData_UpdateMappingContextRedirects) == 0x000001, "Wrong alignment on OdyEnhancedInputPlatformData_UpdateMappingContextRedirects");
static_assert(sizeof(OdyEnhancedInputPlatformData_UpdateMappingContextRedirects) == 0x000001, "Wrong size on OdyEnhancedInputPlatformData_UpdateMappingContextRedirects");
static_assert(offsetof(OdyEnhancedInputPlatformData_UpdateMappingContextRedirects, bEnable) == 0x000000, "Member 'OdyEnhancedInputPlatformData_UpdateMappingContextRedirects::bEnable' has a wrong offset!");

// Function OdyUI.OdyHUD.GetUIRouter
// 0x0008 (0x0008 - 0x0000)
struct OdyHUD_GetUIRouter final
{
public:
	class UOdyUIRouter*                           ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyHUD_GetUIRouter) == 0x000008, "Wrong alignment on OdyHUD_GetUIRouter");
static_assert(sizeof(OdyHUD_GetUIRouter) == 0x000008, "Wrong size on OdyHUD_GetUIRouter");
static_assert(offsetof(OdyHUD_GetUIRouter, ReturnValue) == 0x000000, "Member 'OdyHUD_GetUIRouter::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyInputRichTextBlockDecorator.OnInputDeviceChanged
// 0x0008 (0x0008 - 0x0000)
struct OdyInputRichTextBlockDecorator_OnInputDeviceChanged final
{
public:
	struct FGameplayTag                           InputDeviceTag;                                    // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyInputRichTextBlockDecorator_OnInputDeviceChanged) == 0x000004, "Wrong alignment on OdyInputRichTextBlockDecorator_OnInputDeviceChanged");
static_assert(sizeof(OdyInputRichTextBlockDecorator_OnInputDeviceChanged) == 0x000008, "Wrong size on OdyInputRichTextBlockDecorator_OnInputDeviceChanged");
static_assert(offsetof(OdyInputRichTextBlockDecorator_OnInputDeviceChanged, InputDeviceTag) == 0x000000, "Member 'OdyInputRichTextBlockDecorator_OnInputDeviceChanged::InputDeviceTag' has a wrong offset!");

// Function OdyUI.OdyListView.SetEntryWidgetClass
// 0x0008 (0x0008 - 0x0000)
struct OdyListView_SetEntryWidgetClass final
{
public:
	TSubclassOf<class UUserWidget>                InEntryWidgetClass;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyListView_SetEntryWidgetClass) == 0x000008, "Wrong alignment on OdyListView_SetEntryWidgetClass");
static_assert(sizeof(OdyListView_SetEntryWidgetClass) == 0x000008, "Wrong size on OdyListView_SetEntryWidgetClass");
static_assert(offsetof(OdyListView_SetEntryWidgetClass, InEntryWidgetClass) == 0x000000, "Member 'OdyListView_SetEntryWidgetClass::InEntryWidgetClass' has a wrong offset!");

// Function OdyUI.OdyMenuData.GetMenuClass
// 0x0030 (0x0030 - 0x0000)
struct OdyMenuData_GetMenuClass final
{
public:
	EPlatformType                                 Platform;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyMenuData_GetMenuClass) == 0x000008, "Wrong alignment on OdyMenuData_GetMenuClass");
static_assert(sizeof(OdyMenuData_GetMenuClass) == 0x000030, "Wrong size on OdyMenuData_GetMenuClass");
static_assert(offsetof(OdyMenuData_GetMenuClass, Platform) == 0x000000, "Member 'OdyMenuData_GetMenuClass::Platform' has a wrong offset!");
static_assert(offsetof(OdyMenuData_GetMenuClass, ReturnValue) == 0x000008, "Member 'OdyMenuData_GetMenuClass::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyNavCheckbox.SetGroupId
// 0x0008 (0x0008 - 0x0000)
struct OdyNavCheckbox_SetGroupId final
{
public:
	class FName                                   InGroupId;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyNavCheckbox_SetGroupId) == 0x000004, "Wrong alignment on OdyNavCheckbox_SetGroupId");
static_assert(sizeof(OdyNavCheckbox_SetGroupId) == 0x000008, "Wrong size on OdyNavCheckbox_SetGroupId");
static_assert(offsetof(OdyNavCheckbox_SetGroupId, InGroupId) == 0x000000, "Member 'OdyNavCheckbox_SetGroupId::InGroupId' has a wrong offset!");

// Function OdyUI.OdyNavCheckbox.SetIsCheckedWithCallback
// 0x0002 (0x0002 - 0x0000)
struct OdyNavCheckbox_SetIsCheckedWithCallback final
{
public:
	bool                                          InIsChecked;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowNavigate;                                    // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyNavCheckbox_SetIsCheckedWithCallback) == 0x000001, "Wrong alignment on OdyNavCheckbox_SetIsCheckedWithCallback");
static_assert(sizeof(OdyNavCheckbox_SetIsCheckedWithCallback) == 0x000002, "Wrong size on OdyNavCheckbox_SetIsCheckedWithCallback");
static_assert(offsetof(OdyNavCheckbox_SetIsCheckedWithCallback, InIsChecked) == 0x000000, "Member 'OdyNavCheckbox_SetIsCheckedWithCallback::InIsChecked' has a wrong offset!");
static_assert(offsetof(OdyNavCheckbox_SetIsCheckedWithCallback, bAllowNavigate) == 0x000001, "Member 'OdyNavCheckbox_SetIsCheckedWithCallback::bAllowNavigate' has a wrong offset!");

// Function OdyUI.OdySpringStatics.AdvanceSpringFloat
// 0x0040 (0x0040 - 0x0000)
struct OdySpringStatics_AdvanceSpringFloat final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FOdySpringConfiguration                SpringConfiguration;                               // 0x0004(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FOdySpringStateFloat                   SpringState;                                       // 0x001C(0x0018)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         From;                                              // 0x0034(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         To;                                                // 0x0038(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdySpringStatics_AdvanceSpringFloat) == 0x000004, "Wrong alignment on OdySpringStatics_AdvanceSpringFloat");
static_assert(sizeof(OdySpringStatics_AdvanceSpringFloat) == 0x000040, "Wrong size on OdySpringStatics_AdvanceSpringFloat");
static_assert(offsetof(OdySpringStatics_AdvanceSpringFloat, DeltaTime) == 0x000000, "Member 'OdySpringStatics_AdvanceSpringFloat::DeltaTime' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringFloat, SpringConfiguration) == 0x000004, "Member 'OdySpringStatics_AdvanceSpringFloat::SpringConfiguration' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringFloat, SpringState) == 0x00001C, "Member 'OdySpringStatics_AdvanceSpringFloat::SpringState' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringFloat, From) == 0x000034, "Member 'OdySpringStatics_AdvanceSpringFloat::From' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringFloat, To) == 0x000038, "Member 'OdySpringStatics_AdvanceSpringFloat::To' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringFloat, ReturnValue) == 0x00003C, "Member 'OdySpringStatics_AdvanceSpringFloat::ReturnValue' has a wrong offset!");

// Function OdyUI.OdySpringStatics.AdvanceSpringFloatAngle
// 0x0040 (0x0040 - 0x0000)
struct OdySpringStatics_AdvanceSpringFloatAngle final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FOdySpringConfiguration                SpringConfiguration;                               // 0x0004(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FOdySpringStateFloat                   SpringState;                                       // 0x001C(0x0018)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         From;                                              // 0x0034(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         To;                                                // 0x0038(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdySpringStatics_AdvanceSpringFloatAngle) == 0x000004, "Wrong alignment on OdySpringStatics_AdvanceSpringFloatAngle");
static_assert(sizeof(OdySpringStatics_AdvanceSpringFloatAngle) == 0x000040, "Wrong size on OdySpringStatics_AdvanceSpringFloatAngle");
static_assert(offsetof(OdySpringStatics_AdvanceSpringFloatAngle, DeltaTime) == 0x000000, "Member 'OdySpringStatics_AdvanceSpringFloatAngle::DeltaTime' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringFloatAngle, SpringConfiguration) == 0x000004, "Member 'OdySpringStatics_AdvanceSpringFloatAngle::SpringConfiguration' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringFloatAngle, SpringState) == 0x00001C, "Member 'OdySpringStatics_AdvanceSpringFloatAngle::SpringState' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringFloatAngle, From) == 0x000034, "Member 'OdySpringStatics_AdvanceSpringFloatAngle::From' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringFloatAngle, To) == 0x000038, "Member 'OdySpringStatics_AdvanceSpringFloatAngle::To' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringFloatAngle, ReturnValue) == 0x00003C, "Member 'OdySpringStatics_AdvanceSpringFloatAngle::ReturnValue' has a wrong offset!");

// Function OdyUI.OdySpringStatics.AdvanceSpringRotator
// 0x00B0 (0x00B0 - 0x0000)
struct OdySpringStatics_AdvanceSpringRotator final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FOdySpringConfiguration                SpringConfiguration;                               // 0x0004(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FOdySpringStateRotator                 SpringState;                                       // 0x001C(0x0048)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               From;                                              // 0x0068(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               To;                                                // 0x0080(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               ReturnValue;                                       // 0x0098(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdySpringStatics_AdvanceSpringRotator) == 0x000008, "Wrong alignment on OdySpringStatics_AdvanceSpringRotator");
static_assert(sizeof(OdySpringStatics_AdvanceSpringRotator) == 0x0000B0, "Wrong size on OdySpringStatics_AdvanceSpringRotator");
static_assert(offsetof(OdySpringStatics_AdvanceSpringRotator, DeltaTime) == 0x000000, "Member 'OdySpringStatics_AdvanceSpringRotator::DeltaTime' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringRotator, SpringConfiguration) == 0x000004, "Member 'OdySpringStatics_AdvanceSpringRotator::SpringConfiguration' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringRotator, SpringState) == 0x00001C, "Member 'OdySpringStatics_AdvanceSpringRotator::SpringState' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringRotator, From) == 0x000068, "Member 'OdySpringStatics_AdvanceSpringRotator::From' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringRotator, To) == 0x000080, "Member 'OdySpringStatics_AdvanceSpringRotator::To' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringRotator, ReturnValue) == 0x000098, "Member 'OdySpringStatics_AdvanceSpringRotator::ReturnValue' has a wrong offset!");

// Function OdyUI.OdySpringStatics.AdvanceSpringVector
// 0x00B0 (0x00B0 - 0x0000)
struct OdySpringStatics_AdvanceSpringVector final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FOdySpringConfiguration                SpringConfiguration;                               // 0x0004(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FOdySpringStateVector                  SpringState;                                       // 0x001C(0x0048)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                From;                                              // 0x0068(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                To;                                                // 0x0080(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ReturnValue;                                       // 0x0098(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdySpringStatics_AdvanceSpringVector) == 0x000008, "Wrong alignment on OdySpringStatics_AdvanceSpringVector");
static_assert(sizeof(OdySpringStatics_AdvanceSpringVector) == 0x0000B0, "Wrong size on OdySpringStatics_AdvanceSpringVector");
static_assert(offsetof(OdySpringStatics_AdvanceSpringVector, DeltaTime) == 0x000000, "Member 'OdySpringStatics_AdvanceSpringVector::DeltaTime' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringVector, SpringConfiguration) == 0x000004, "Member 'OdySpringStatics_AdvanceSpringVector::SpringConfiguration' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringVector, SpringState) == 0x00001C, "Member 'OdySpringStatics_AdvanceSpringVector::SpringState' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringVector, From) == 0x000068, "Member 'OdySpringStatics_AdvanceSpringVector::From' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringVector, To) == 0x000080, "Member 'OdySpringStatics_AdvanceSpringVector::To' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringVector, ReturnValue) == 0x000098, "Member 'OdySpringStatics_AdvanceSpringVector::ReturnValue' has a wrong offset!");

// Function OdyUI.OdySpringStatics.AdvanceSpringVector2D
// 0x0080 (0x0080 - 0x0000)
struct OdySpringStatics_AdvanceSpringVector2D final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FOdySpringConfiguration                SpringConfiguration;                               // 0x0004(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FOdySpringStateVector2D                SpringState;                                       // 0x001C(0x0030)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              From;                                              // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              To;                                                // 0x0060(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ReturnValue;                                       // 0x0070(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdySpringStatics_AdvanceSpringVector2D) == 0x000008, "Wrong alignment on OdySpringStatics_AdvanceSpringVector2D");
static_assert(sizeof(OdySpringStatics_AdvanceSpringVector2D) == 0x000080, "Wrong size on OdySpringStatics_AdvanceSpringVector2D");
static_assert(offsetof(OdySpringStatics_AdvanceSpringVector2D, DeltaTime) == 0x000000, "Member 'OdySpringStatics_AdvanceSpringVector2D::DeltaTime' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringVector2D, SpringConfiguration) == 0x000004, "Member 'OdySpringStatics_AdvanceSpringVector2D::SpringConfiguration' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringVector2D, SpringState) == 0x00001C, "Member 'OdySpringStatics_AdvanceSpringVector2D::SpringState' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringVector2D, From) == 0x000050, "Member 'OdySpringStatics_AdvanceSpringVector2D::From' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringVector2D, To) == 0x000060, "Member 'OdySpringStatics_AdvanceSpringVector2D::To' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_AdvanceSpringVector2D, ReturnValue) == 0x000070, "Member 'OdySpringStatics_AdvanceSpringVector2D::ReturnValue' has a wrong offset!");

// Function OdyUI.OdySpringStatics.GetSpringPreset
// 0x001C (0x001C - 0x0000)
struct OdySpringStatics_GetSpringPreset final
{
public:
	EOdySpringPreset                              Preset;                                            // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOdySpringConfiguration                ReturnValue;                                       // 0x0004(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdySpringStatics_GetSpringPreset) == 0x000004, "Wrong alignment on OdySpringStatics_GetSpringPreset");
static_assert(sizeof(OdySpringStatics_GetSpringPreset) == 0x00001C, "Wrong size on OdySpringStatics_GetSpringPreset");
static_assert(offsetof(OdySpringStatics_GetSpringPreset, Preset) == 0x000000, "Member 'OdySpringStatics_GetSpringPreset::Preset' has a wrong offset!");
static_assert(offsetof(OdySpringStatics_GetSpringPreset, ReturnValue) == 0x000004, "Member 'OdySpringStatics_GetSpringPreset::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyTextBlock.SetWrapTextAt
// 0x0004 (0x0004 - 0x0000)
struct OdyTextBlock_SetWrapTextAt final
{
public:
	float                                         InWrapTextAt;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyTextBlock_SetWrapTextAt) == 0x000004, "Wrong alignment on OdyTextBlock_SetWrapTextAt");
static_assert(sizeof(OdyTextBlock_SetWrapTextAt) == 0x000004, "Wrong size on OdyTextBlock_SetWrapTextAt");
static_assert(offsetof(OdyTextBlock_SetWrapTextAt, InWrapTextAt) == 0x000000, "Member 'OdyTextBlock_SetWrapTextAt::InWrapTextAt' has a wrong offset!");

// Function OdyUI.OdyTileView.SetEntryWidgetClass
// 0x0008 (0x0008 - 0x0000)
struct OdyTileView_SetEntryWidgetClass final
{
public:
	TSubclassOf<class UUserWidget>                InEntryWidgetClass;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyTileView_SetEntryWidgetClass) == 0x000008, "Wrong alignment on OdyTileView_SetEntryWidgetClass");
static_assert(sizeof(OdyTileView_SetEntryWidgetClass) == 0x000008, "Wrong size on OdyTileView_SetEntryWidgetClass");
static_assert(offsetof(OdyTileView_SetEntryWidgetClass, InEntryWidgetClass) == 0x000000, "Member 'OdyTileView_SetEntryWidgetClass::InEntryWidgetClass' has a wrong offset!");

// Function OdyUI.OdyUIBoolBindingFunctionLibrary.BoolBinding_AddDelegate
// 0x0038 (0x0038 - 0x0000)
struct OdyUIBoolBindingFunctionLibrary_BoolBinding_AddDelegate final
{
public:
	struct FOdyUIBoolBinding                      BoolBinding;                                       // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool OldValue, bool NewValue)> Delegate;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExecuteNow;                                       // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIBoolBindingFunctionLibrary_BoolBinding_AddDelegate) == 0x000008, "Wrong alignment on OdyUIBoolBindingFunctionLibrary_BoolBinding_AddDelegate");
static_assert(sizeof(OdyUIBoolBindingFunctionLibrary_BoolBinding_AddDelegate) == 0x000038, "Wrong size on OdyUIBoolBindingFunctionLibrary_BoolBinding_AddDelegate");
static_assert(offsetof(OdyUIBoolBindingFunctionLibrary_BoolBinding_AddDelegate, BoolBinding) == 0x000000, "Member 'OdyUIBoolBindingFunctionLibrary_BoolBinding_AddDelegate::BoolBinding' has a wrong offset!");
static_assert(offsetof(OdyUIBoolBindingFunctionLibrary_BoolBinding_AddDelegate, Delegate) == 0x000020, "Member 'OdyUIBoolBindingFunctionLibrary_BoolBinding_AddDelegate::Delegate' has a wrong offset!");
static_assert(offsetof(OdyUIBoolBindingFunctionLibrary_BoolBinding_AddDelegate, bExecuteNow) == 0x000030, "Member 'OdyUIBoolBindingFunctionLibrary_BoolBinding_AddDelegate::bExecuteNow' has a wrong offset!");

// Function OdyUI.OdyUIBoolBindingFunctionLibrary.BoolBinding_BindWidgetIsEnabled
// 0x0030 (0x0030 - 0x0000)
struct OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetIsEnabled final
{
public:
	struct FOdyUIBoolBinding                      BoolBinding;                                       // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UWidget*                                Widget;                                            // 0x0020(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvert;                                           // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetIsEnabled) == 0x000008, "Wrong alignment on OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetIsEnabled");
static_assert(sizeof(OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetIsEnabled) == 0x000030, "Wrong size on OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetIsEnabled");
static_assert(offsetof(OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetIsEnabled, BoolBinding) == 0x000000, "Member 'OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetIsEnabled::BoolBinding' has a wrong offset!");
static_assert(offsetof(OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetIsEnabled, Widget) == 0x000020, "Member 'OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetIsEnabled::Widget' has a wrong offset!");
static_assert(offsetof(OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetIsEnabled, bInvert) == 0x000028, "Member 'OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetIsEnabled::bInvert' has a wrong offset!");

// Function OdyUI.OdyUIBoolBindingFunctionLibrary.BoolBinding_BindWidgetVisibility
// 0x0030 (0x0030 - 0x0000)
struct OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetVisibility final
{
public:
	struct FOdyUIBoolBinding                      BoolBinding;                                       // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UWidget*                                Widget;                                            // 0x0020(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateVisibility                              FalseVisibility;                                   // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateVisibility                              TrueVisibility;                                    // 0x0029(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetVisibility) == 0x000008, "Wrong alignment on OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetVisibility");
static_assert(sizeof(OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetVisibility) == 0x000030, "Wrong size on OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetVisibility");
static_assert(offsetof(OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetVisibility, BoolBinding) == 0x000000, "Member 'OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetVisibility::BoolBinding' has a wrong offset!");
static_assert(offsetof(OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetVisibility, Widget) == 0x000020, "Member 'OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetVisibility::Widget' has a wrong offset!");
static_assert(offsetof(OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetVisibility, FalseVisibility) == 0x000028, "Member 'OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetVisibility::FalseVisibility' has a wrong offset!");
static_assert(offsetof(OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetVisibility, TrueVisibility) == 0x000029, "Member 'OdyUIBoolBindingFunctionLibrary_BoolBinding_BindWidgetVisibility::TrueVisibility' has a wrong offset!");

// Function OdyUI.OdyUIBoolBindingFunctionLibrary.BoolBinding_GetValue
// 0x0028 (0x0028 - 0x0000)
struct OdyUIBoolBindingFunctionLibrary_BoolBinding_GetValue final
{
public:
	struct FOdyUIBoolBinding                      BoolBinding;                                       // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIBoolBindingFunctionLibrary_BoolBinding_GetValue) == 0x000008, "Wrong alignment on OdyUIBoolBindingFunctionLibrary_BoolBinding_GetValue");
static_assert(sizeof(OdyUIBoolBindingFunctionLibrary_BoolBinding_GetValue) == 0x000028, "Wrong size on OdyUIBoolBindingFunctionLibrary_BoolBinding_GetValue");
static_assert(offsetof(OdyUIBoolBindingFunctionLibrary_BoolBinding_GetValue, BoolBinding) == 0x000000, "Member 'OdyUIBoolBindingFunctionLibrary_BoolBinding_GetValue::BoolBinding' has a wrong offset!");
static_assert(offsetof(OdyUIBoolBindingFunctionLibrary_BoolBinding_GetValue, ReturnValue) == 0x000020, "Member 'OdyUIBoolBindingFunctionLibrary_BoolBinding_GetValue::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIBoolBindingFunctionLibrary.BoolBinding_RemoveDelegate
// 0x0030 (0x0030 - 0x0000)
struct OdyUIBoolBindingFunctionLibrary_BoolBinding_RemoveDelegate final
{
public:
	struct FOdyUIBoolBinding                      BoolBinding;                                       // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(bool OldValue, bool NewValue)> Delegate;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIBoolBindingFunctionLibrary_BoolBinding_RemoveDelegate) == 0x000008, "Wrong alignment on OdyUIBoolBindingFunctionLibrary_BoolBinding_RemoveDelegate");
static_assert(sizeof(OdyUIBoolBindingFunctionLibrary_BoolBinding_RemoveDelegate) == 0x000030, "Wrong size on OdyUIBoolBindingFunctionLibrary_BoolBinding_RemoveDelegate");
static_assert(offsetof(OdyUIBoolBindingFunctionLibrary_BoolBinding_RemoveDelegate, BoolBinding) == 0x000000, "Member 'OdyUIBoolBindingFunctionLibrary_BoolBinding_RemoveDelegate::BoolBinding' has a wrong offset!");
static_assert(offsetof(OdyUIBoolBindingFunctionLibrary_BoolBinding_RemoveDelegate, Delegate) == 0x000020, "Member 'OdyUIBoolBindingFunctionLibrary_BoolBinding_RemoveDelegate::Delegate' has a wrong offset!");

// Function OdyUI.OdyUIBoolBindingFunctionLibrary.BoolBinding_SetValue
// 0x0028 (0x0028 - 0x0000)
struct OdyUIBoolBindingFunctionLibrary_BoolBinding_SetValue final
{
public:
	struct FOdyUIBoolBinding                      BoolBinding;                                       // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          Bool;                                              // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIBoolBindingFunctionLibrary_BoolBinding_SetValue) == 0x000008, "Wrong alignment on OdyUIBoolBindingFunctionLibrary_BoolBinding_SetValue");
static_assert(sizeof(OdyUIBoolBindingFunctionLibrary_BoolBinding_SetValue) == 0x000028, "Wrong size on OdyUIBoolBindingFunctionLibrary_BoolBinding_SetValue");
static_assert(offsetof(OdyUIBoolBindingFunctionLibrary_BoolBinding_SetValue, BoolBinding) == 0x000000, "Member 'OdyUIBoolBindingFunctionLibrary_BoolBinding_SetValue::BoolBinding' has a wrong offset!");
static_assert(offsetof(OdyUIBoolBindingFunctionLibrary_BoolBinding_SetValue, Bool) == 0x000020, "Member 'OdyUIBoolBindingFunctionLibrary_BoolBinding_SetValue::Bool' has a wrong offset!");

// Function OdyUI.OdyUIBoolBindingFunctionLibrary.BoolBinding_Unbind
// 0x0028 (0x0028 - 0x0000)
struct OdyUIBoolBindingFunctionLibrary_BoolBinding_Unbind final
{
public:
	struct FOdyUIBoolBinding                      BoolBinding;                                       // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0020(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIBoolBindingFunctionLibrary_BoolBinding_Unbind) == 0x000008, "Wrong alignment on OdyUIBoolBindingFunctionLibrary_BoolBinding_Unbind");
static_assert(sizeof(OdyUIBoolBindingFunctionLibrary_BoolBinding_Unbind) == 0x000028, "Wrong size on OdyUIBoolBindingFunctionLibrary_BoolBinding_Unbind");
static_assert(offsetof(OdyUIBoolBindingFunctionLibrary_BoolBinding_Unbind, BoolBinding) == 0x000000, "Member 'OdyUIBoolBindingFunctionLibrary_BoolBinding_Unbind::BoolBinding' has a wrong offset!");
static_assert(offsetof(OdyUIBoolBindingFunctionLibrary_BoolBinding_Unbind, Object) == 0x000020, "Member 'OdyUIBoolBindingFunctionLibrary_BoolBinding_Unbind::Object' has a wrong offset!");

// Function OdyUI.OdyUIColorBindingFunctionLibrary.ColorBinding_AddDelegate
// 0x0040 (0x0040 - 0x0000)
struct OdyUIColorBindingFunctionLibrary_ColorBinding_AddDelegate final
{
public:
	struct FOdyUIColorBinding                     ColorBinding;                                      // 0x0000(0x0028)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FLinearColor& OldValue, const struct FLinearColor& NewValue)> Delegate;                                          // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExecuteNow;                                       // 0x0038(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIColorBindingFunctionLibrary_ColorBinding_AddDelegate) == 0x000008, "Wrong alignment on OdyUIColorBindingFunctionLibrary_ColorBinding_AddDelegate");
static_assert(sizeof(OdyUIColorBindingFunctionLibrary_ColorBinding_AddDelegate) == 0x000040, "Wrong size on OdyUIColorBindingFunctionLibrary_ColorBinding_AddDelegate");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_AddDelegate, ColorBinding) == 0x000000, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_AddDelegate::ColorBinding' has a wrong offset!");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_AddDelegate, Delegate) == 0x000028, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_AddDelegate::Delegate' has a wrong offset!");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_AddDelegate, bExecuteNow) == 0x000038, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_AddDelegate::bExecuteNow' has a wrong offset!");

// Function OdyUI.OdyUIColorBindingFunctionLibrary.ColorBinding_BindBorderBrushColorAndOpacity
// 0x0030 (0x0030 - 0x0000)
struct OdyUIColorBindingFunctionLibrary_ColorBinding_BindBorderBrushColorAndOpacity final
{
public:
	struct FOdyUIColorBinding                     ColorBinding;                                      // 0x0000(0x0028)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UBorder*                                Border;                                            // 0x0028(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindBorderBrushColorAndOpacity) == 0x000008, "Wrong alignment on OdyUIColorBindingFunctionLibrary_ColorBinding_BindBorderBrushColorAndOpacity");
static_assert(sizeof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindBorderBrushColorAndOpacity) == 0x000030, "Wrong size on OdyUIColorBindingFunctionLibrary_ColorBinding_BindBorderBrushColorAndOpacity");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindBorderBrushColorAndOpacity, ColorBinding) == 0x000000, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_BindBorderBrushColorAndOpacity::ColorBinding' has a wrong offset!");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindBorderBrushColorAndOpacity, Border) == 0x000028, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_BindBorderBrushColorAndOpacity::Border' has a wrong offset!");

// Function OdyUI.OdyUIColorBindingFunctionLibrary.ColorBinding_BindBorderContentColorAndOpacity
// 0x0030 (0x0030 - 0x0000)
struct OdyUIColorBindingFunctionLibrary_ColorBinding_BindBorderContentColorAndOpacity final
{
public:
	struct FOdyUIColorBinding                     ColorBinding;                                      // 0x0000(0x0028)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UBorder*                                Border;                                            // 0x0028(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindBorderContentColorAndOpacity) == 0x000008, "Wrong alignment on OdyUIColorBindingFunctionLibrary_ColorBinding_BindBorderContentColorAndOpacity");
static_assert(sizeof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindBorderContentColorAndOpacity) == 0x000030, "Wrong size on OdyUIColorBindingFunctionLibrary_ColorBinding_BindBorderContentColorAndOpacity");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindBorderContentColorAndOpacity, ColorBinding) == 0x000000, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_BindBorderContentColorAndOpacity::ColorBinding' has a wrong offset!");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindBorderContentColorAndOpacity, Border) == 0x000028, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_BindBorderContentColorAndOpacity::Border' has a wrong offset!");

// Function OdyUI.OdyUIColorBindingFunctionLibrary.ColorBinding_BindButtonColorAndOpacity
// 0x0030 (0x0030 - 0x0000)
struct OdyUIColorBindingFunctionLibrary_ColorBinding_BindButtonColorAndOpacity final
{
public:
	struct FOdyUIColorBinding                     ColorBinding;                                      // 0x0000(0x0028)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UButton*                                Button;                                            // 0x0028(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindButtonColorAndOpacity) == 0x000008, "Wrong alignment on OdyUIColorBindingFunctionLibrary_ColorBinding_BindButtonColorAndOpacity");
static_assert(sizeof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindButtonColorAndOpacity) == 0x000030, "Wrong size on OdyUIColorBindingFunctionLibrary_ColorBinding_BindButtonColorAndOpacity");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindButtonColorAndOpacity, ColorBinding) == 0x000000, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_BindButtonColorAndOpacity::ColorBinding' has a wrong offset!");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindButtonColorAndOpacity, Button) == 0x000028, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_BindButtonColorAndOpacity::Button' has a wrong offset!");

// Function OdyUI.OdyUIColorBindingFunctionLibrary.ColorBinding_BindImageColorAndOpacity
// 0x0030 (0x0030 - 0x0000)
struct OdyUIColorBindingFunctionLibrary_ColorBinding_BindImageColorAndOpacity final
{
public:
	struct FOdyUIColorBinding                     ColorBinding;                                      // 0x0000(0x0028)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UImage*                                 Image;                                             // 0x0028(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindImageColorAndOpacity) == 0x000008, "Wrong alignment on OdyUIColorBindingFunctionLibrary_ColorBinding_BindImageColorAndOpacity");
static_assert(sizeof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindImageColorAndOpacity) == 0x000030, "Wrong size on OdyUIColorBindingFunctionLibrary_ColorBinding_BindImageColorAndOpacity");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindImageColorAndOpacity, ColorBinding) == 0x000000, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_BindImageColorAndOpacity::ColorBinding' has a wrong offset!");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindImageColorAndOpacity, Image) == 0x000028, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_BindImageColorAndOpacity::Image' has a wrong offset!");

// Function OdyUI.OdyUIColorBindingFunctionLibrary.ColorBinding_BindTextBlockColorAndOpacity
// 0x0030 (0x0030 - 0x0000)
struct OdyUIColorBindingFunctionLibrary_ColorBinding_BindTextBlockColorAndOpacity final
{
public:
	struct FOdyUIColorBinding                     ColorBinding;                                      // 0x0000(0x0028)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UTextBlock*                             TextBlock;                                         // 0x0028(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindTextBlockColorAndOpacity) == 0x000008, "Wrong alignment on OdyUIColorBindingFunctionLibrary_ColorBinding_BindTextBlockColorAndOpacity");
static_assert(sizeof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindTextBlockColorAndOpacity) == 0x000030, "Wrong size on OdyUIColorBindingFunctionLibrary_ColorBinding_BindTextBlockColorAndOpacity");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindTextBlockColorAndOpacity, ColorBinding) == 0x000000, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_BindTextBlockColorAndOpacity::ColorBinding' has a wrong offset!");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindTextBlockColorAndOpacity, TextBlock) == 0x000028, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_BindTextBlockColorAndOpacity::TextBlock' has a wrong offset!");

// Function OdyUI.OdyUIColorBindingFunctionLibrary.ColorBinding_BindUserWidgetColorAndOpacity
// 0x0030 (0x0030 - 0x0000)
struct OdyUIColorBindingFunctionLibrary_ColorBinding_BindUserWidgetColorAndOpacity final
{
public:
	struct FOdyUIColorBinding                     ColorBinding;                                      // 0x0000(0x0028)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UUserWidget*                            Widget;                                            // 0x0028(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindUserWidgetColorAndOpacity) == 0x000008, "Wrong alignment on OdyUIColorBindingFunctionLibrary_ColorBinding_BindUserWidgetColorAndOpacity");
static_assert(sizeof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindUserWidgetColorAndOpacity) == 0x000030, "Wrong size on OdyUIColorBindingFunctionLibrary_ColorBinding_BindUserWidgetColorAndOpacity");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindUserWidgetColorAndOpacity, ColorBinding) == 0x000000, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_BindUserWidgetColorAndOpacity::ColorBinding' has a wrong offset!");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_BindUserWidgetColorAndOpacity, Widget) == 0x000028, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_BindUserWidgetColorAndOpacity::Widget' has a wrong offset!");

// Function OdyUI.OdyUIColorBindingFunctionLibrary.ColorBinding_GetValue
// 0x0038 (0x0038 - 0x0000)
struct OdyUIColorBindingFunctionLibrary_ColorBinding_GetValue final
{
public:
	struct FOdyUIColorBinding                     ColorBinding;                                      // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FLinearColor                           ReturnValue;                                       // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIColorBindingFunctionLibrary_ColorBinding_GetValue) == 0x000008, "Wrong alignment on OdyUIColorBindingFunctionLibrary_ColorBinding_GetValue");
static_assert(sizeof(OdyUIColorBindingFunctionLibrary_ColorBinding_GetValue) == 0x000038, "Wrong size on OdyUIColorBindingFunctionLibrary_ColorBinding_GetValue");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_GetValue, ColorBinding) == 0x000000, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_GetValue::ColorBinding' has a wrong offset!");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_GetValue, ReturnValue) == 0x000028, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_GetValue::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIColorBindingFunctionLibrary.ColorBinding_RemoveDelegate
// 0x0038 (0x0038 - 0x0000)
struct OdyUIColorBindingFunctionLibrary_ColorBinding_RemoveDelegate final
{
public:
	struct FOdyUIColorBinding                     ColorBinding;                                      // 0x0000(0x0028)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FLinearColor& OldValue, const struct FLinearColor& NewValue)> Delegate;                                          // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIColorBindingFunctionLibrary_ColorBinding_RemoveDelegate) == 0x000008, "Wrong alignment on OdyUIColorBindingFunctionLibrary_ColorBinding_RemoveDelegate");
static_assert(sizeof(OdyUIColorBindingFunctionLibrary_ColorBinding_RemoveDelegate) == 0x000038, "Wrong size on OdyUIColorBindingFunctionLibrary_ColorBinding_RemoveDelegate");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_RemoveDelegate, ColorBinding) == 0x000000, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_RemoveDelegate::ColorBinding' has a wrong offset!");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_RemoveDelegate, Delegate) == 0x000028, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_RemoveDelegate::Delegate' has a wrong offset!");

// Function OdyUI.OdyUIColorBindingFunctionLibrary.ColorBinding_SetValue
// 0x0038 (0x0038 - 0x0000)
struct OdyUIColorBindingFunctionLibrary_ColorBinding_SetValue final
{
public:
	struct FOdyUIColorBinding                     ColorBinding;                                      // 0x0000(0x0028)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x0028(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIColorBindingFunctionLibrary_ColorBinding_SetValue) == 0x000008, "Wrong alignment on OdyUIColorBindingFunctionLibrary_ColorBinding_SetValue");
static_assert(sizeof(OdyUIColorBindingFunctionLibrary_ColorBinding_SetValue) == 0x000038, "Wrong size on OdyUIColorBindingFunctionLibrary_ColorBinding_SetValue");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_SetValue, ColorBinding) == 0x000000, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_SetValue::ColorBinding' has a wrong offset!");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_SetValue, Color) == 0x000028, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_SetValue::Color' has a wrong offset!");

// Function OdyUI.OdyUIColorBindingFunctionLibrary.ColorBinding_Unbind
// 0x0030 (0x0030 - 0x0000)
struct OdyUIColorBindingFunctionLibrary_ColorBinding_Unbind final
{
public:
	struct FOdyUIColorBinding                     ColorBinding;                                      // 0x0000(0x0028)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIColorBindingFunctionLibrary_ColorBinding_Unbind) == 0x000008, "Wrong alignment on OdyUIColorBindingFunctionLibrary_ColorBinding_Unbind");
static_assert(sizeof(OdyUIColorBindingFunctionLibrary_ColorBinding_Unbind) == 0x000030, "Wrong size on OdyUIColorBindingFunctionLibrary_ColorBinding_Unbind");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_Unbind, ColorBinding) == 0x000000, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_Unbind::ColorBinding' has a wrong offset!");
static_assert(offsetof(OdyUIColorBindingFunctionLibrary_ColorBinding_Unbind, Object) == 0x000028, "Member 'OdyUIColorBindingFunctionLibrary_ColorBinding_Unbind::Object' has a wrong offset!");

// Function OdyUI.OdyUIData.Init
// 0x0010 (0x0010 - 0x0000)
struct OdyUIData_Init final
{
public:
	struct FInstancedStruct                       InitParams;                                        // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIData_Init) == 0x000008, "Wrong alignment on OdyUIData_Init");
static_assert(sizeof(OdyUIData_Init) == 0x000010, "Wrong size on OdyUIData_Init");
static_assert(offsetof(OdyUIData_Init, InitParams) == 0x000000, "Member 'OdyUIData_Init::InitParams' has a wrong offset!");

// Function OdyUI.OdyUIData.OnInit
// 0x0010 (0x0010 - 0x0000)
struct OdyUIData_OnInit final
{
public:
	struct FInstancedStruct                       InitParams;                                        // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIData_OnInit) == 0x000008, "Wrong alignment on OdyUIData_OnInit");
static_assert(sizeof(OdyUIData_OnInit) == 0x000010, "Wrong size on OdyUIData_OnInit");
static_assert(offsetof(OdyUIData_OnInit, InitParams) == 0x000000, "Member 'OdyUIData_OnInit::InitParams' has a wrong offset!");

// Function OdyUI.OdyUIData.OnUpdateData
// 0x0010 (0x0010 - 0x0000)
struct OdyUIData_OnUpdateData final
{
public:
	struct FInstancedStruct                       UpdateParams;                                      // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIData_OnUpdateData) == 0x000008, "Wrong alignment on OdyUIData_OnUpdateData");
static_assert(sizeof(OdyUIData_OnUpdateData) == 0x000010, "Wrong size on OdyUIData_OnUpdateData");
static_assert(offsetof(OdyUIData_OnUpdateData, UpdateParams) == 0x000000, "Member 'OdyUIData_OnUpdateData::UpdateParams' has a wrong offset!");

// Function OdyUI.OdyUIData.UpdateData
// 0x0010 (0x0010 - 0x0000)
struct OdyUIData_UpdateData final
{
public:
	struct FInstancedStruct                       UpdateParams;                                      // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIData_UpdateData) == 0x000008, "Wrong alignment on OdyUIData_UpdateData");
static_assert(sizeof(OdyUIData_UpdateData) == 0x000010, "Wrong size on OdyUIData_UpdateData");
static_assert(offsetof(OdyUIData_UpdateData, UpdateParams) == 0x000000, "Member 'OdyUIData_UpdateData::UpdateParams' has a wrong offset!");

// Function OdyUI.OdyUIDateTimeBindingFunctionLibrary.DateTimeBinding_AddDelegate
// 0x0038 (0x0038 - 0x0000)
struct OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_AddDelegate final
{
public:
	struct FOdyUIDateTimeBinding                  DateTimeBinding;                                   // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FDateTime& OldValue, const struct FDateTime& NewValue)> Delegate;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExecuteNow;                                       // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_AddDelegate) == 0x000008, "Wrong alignment on OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_AddDelegate");
static_assert(sizeof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_AddDelegate) == 0x000038, "Wrong size on OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_AddDelegate");
static_assert(offsetof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_AddDelegate, DateTimeBinding) == 0x000000, "Member 'OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_AddDelegate::DateTimeBinding' has a wrong offset!");
static_assert(offsetof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_AddDelegate, Delegate) == 0x000020, "Member 'OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_AddDelegate::Delegate' has a wrong offset!");
static_assert(offsetof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_AddDelegate, bExecuteNow) == 0x000030, "Member 'OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_AddDelegate::bExecuteNow' has a wrong offset!");

// Function OdyUI.OdyUIDateTimeBindingFunctionLibrary.DateTimeBinding_GetValue
// 0x0028 (0x0028 - 0x0000)
struct OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_GetValue final
{
public:
	struct FOdyUIDateTimeBinding                  DateTimeBinding;                                   // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FDateTime                              ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_GetValue) == 0x000008, "Wrong alignment on OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_GetValue");
static_assert(sizeof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_GetValue) == 0x000028, "Wrong size on OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_GetValue");
static_assert(offsetof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_GetValue, DateTimeBinding) == 0x000000, "Member 'OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_GetValue::DateTimeBinding' has a wrong offset!");
static_assert(offsetof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_GetValue, ReturnValue) == 0x000020, "Member 'OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_GetValue::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIDateTimeBindingFunctionLibrary.DateTimeBinding_RemoveDelegate
// 0x0030 (0x0030 - 0x0000)
struct OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_RemoveDelegate final
{
public:
	struct FOdyUIDateTimeBinding                  DateTimeBinding;                                   // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FDateTime& OldValue, const struct FDateTime& NewValue)> Delegate;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_RemoveDelegate) == 0x000008, "Wrong alignment on OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_RemoveDelegate");
static_assert(sizeof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_RemoveDelegate) == 0x000030, "Wrong size on OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_RemoveDelegate");
static_assert(offsetof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_RemoveDelegate, DateTimeBinding) == 0x000000, "Member 'OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_RemoveDelegate::DateTimeBinding' has a wrong offset!");
static_assert(offsetof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_RemoveDelegate, Delegate) == 0x000020, "Member 'OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_RemoveDelegate::Delegate' has a wrong offset!");

// Function OdyUI.OdyUIDateTimeBindingFunctionLibrary.DateTimeBinding_SetValue
// 0x0028 (0x0028 - 0x0000)
struct OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_SetValue final
{
public:
	struct FOdyUIDateTimeBinding                  DateTimeBinding;                                   // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FDateTime                              DateTime;                                          // 0x0020(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_SetValue) == 0x000008, "Wrong alignment on OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_SetValue");
static_assert(sizeof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_SetValue) == 0x000028, "Wrong size on OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_SetValue");
static_assert(offsetof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_SetValue, DateTimeBinding) == 0x000000, "Member 'OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_SetValue::DateTimeBinding' has a wrong offset!");
static_assert(offsetof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_SetValue, DateTime) == 0x000020, "Member 'OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_SetValue::DateTime' has a wrong offset!");

// Function OdyUI.OdyUIDateTimeBindingFunctionLibrary.DateTimeBinding_Unbind
// 0x0028 (0x0028 - 0x0000)
struct OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_Unbind final
{
public:
	struct FOdyUIDateTimeBinding                  DateTimeBinding;                                   // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0020(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_Unbind) == 0x000008, "Wrong alignment on OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_Unbind");
static_assert(sizeof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_Unbind) == 0x000028, "Wrong size on OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_Unbind");
static_assert(offsetof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_Unbind, DateTimeBinding) == 0x000000, "Member 'OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_Unbind::DateTimeBinding' has a wrong offset!");
static_assert(offsetof(OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_Unbind, Object) == 0x000020, "Member 'OdyUIDateTimeBindingFunctionLibrary_DateTimeBinding_Unbind::Object' has a wrong offset!");

// Function OdyUI.OdyUIFloatBindingFunctionLibrary.FloatBinding_AddDelegate
// 0x0038 (0x0038 - 0x0000)
struct OdyUIFloatBindingFunctionLibrary_FloatBinding_AddDelegate final
{
public:
	struct FOdyUIFloatBinding                     FloatBinding;                                      // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(float OldValue, float NewValue)> Delegate;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExecuteNow;                                       // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIFloatBindingFunctionLibrary_FloatBinding_AddDelegate) == 0x000008, "Wrong alignment on OdyUIFloatBindingFunctionLibrary_FloatBinding_AddDelegate");
static_assert(sizeof(OdyUIFloatBindingFunctionLibrary_FloatBinding_AddDelegate) == 0x000038, "Wrong size on OdyUIFloatBindingFunctionLibrary_FloatBinding_AddDelegate");
static_assert(offsetof(OdyUIFloatBindingFunctionLibrary_FloatBinding_AddDelegate, FloatBinding) == 0x000000, "Member 'OdyUIFloatBindingFunctionLibrary_FloatBinding_AddDelegate::FloatBinding' has a wrong offset!");
static_assert(offsetof(OdyUIFloatBindingFunctionLibrary_FloatBinding_AddDelegate, Delegate) == 0x000020, "Member 'OdyUIFloatBindingFunctionLibrary_FloatBinding_AddDelegate::Delegate' has a wrong offset!");
static_assert(offsetof(OdyUIFloatBindingFunctionLibrary_FloatBinding_AddDelegate, bExecuteNow) == 0x000030, "Member 'OdyUIFloatBindingFunctionLibrary_FloatBinding_AddDelegate::bExecuteNow' has a wrong offset!");

// Function OdyUI.OdyUIFloatBindingFunctionLibrary.FloatBinding_BindImageMaterialScalarParam
// 0x0030 (0x0030 - 0x0000)
struct OdyUIFloatBindingFunctionLibrary_FloatBinding_BindImageMaterialScalarParam final
{
public:
	struct FOdyUIFloatBinding                     FloatBinding;                                      // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UImage*                                 Image;                                             // 0x0020(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParamName;                                         // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIFloatBindingFunctionLibrary_FloatBinding_BindImageMaterialScalarParam) == 0x000008, "Wrong alignment on OdyUIFloatBindingFunctionLibrary_FloatBinding_BindImageMaterialScalarParam");
static_assert(sizeof(OdyUIFloatBindingFunctionLibrary_FloatBinding_BindImageMaterialScalarParam) == 0x000030, "Wrong size on OdyUIFloatBindingFunctionLibrary_FloatBinding_BindImageMaterialScalarParam");
static_assert(offsetof(OdyUIFloatBindingFunctionLibrary_FloatBinding_BindImageMaterialScalarParam, FloatBinding) == 0x000000, "Member 'OdyUIFloatBindingFunctionLibrary_FloatBinding_BindImageMaterialScalarParam::FloatBinding' has a wrong offset!");
static_assert(offsetof(OdyUIFloatBindingFunctionLibrary_FloatBinding_BindImageMaterialScalarParam, Image) == 0x000020, "Member 'OdyUIFloatBindingFunctionLibrary_FloatBinding_BindImageMaterialScalarParam::Image' has a wrong offset!");
static_assert(offsetof(OdyUIFloatBindingFunctionLibrary_FloatBinding_BindImageMaterialScalarParam, ParamName) == 0x000028, "Member 'OdyUIFloatBindingFunctionLibrary_FloatBinding_BindImageMaterialScalarParam::ParamName' has a wrong offset!");

// Function OdyUI.OdyUIFloatBindingFunctionLibrary.FloatBinding_BindMaterialScalarParam
// 0x0030 (0x0030 - 0x0000)
struct OdyUIFloatBindingFunctionLibrary_FloatBinding_BindMaterialScalarParam final
{
public:
	struct FOdyUIFloatBinding                     FloatBinding;                                      // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0020(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParamName;                                         // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIFloatBindingFunctionLibrary_FloatBinding_BindMaterialScalarParam) == 0x000008, "Wrong alignment on OdyUIFloatBindingFunctionLibrary_FloatBinding_BindMaterialScalarParam");
static_assert(sizeof(OdyUIFloatBindingFunctionLibrary_FloatBinding_BindMaterialScalarParam) == 0x000030, "Wrong size on OdyUIFloatBindingFunctionLibrary_FloatBinding_BindMaterialScalarParam");
static_assert(offsetof(OdyUIFloatBindingFunctionLibrary_FloatBinding_BindMaterialScalarParam, FloatBinding) == 0x000000, "Member 'OdyUIFloatBindingFunctionLibrary_FloatBinding_BindMaterialScalarParam::FloatBinding' has a wrong offset!");
static_assert(offsetof(OdyUIFloatBindingFunctionLibrary_FloatBinding_BindMaterialScalarParam, Mid) == 0x000020, "Member 'OdyUIFloatBindingFunctionLibrary_FloatBinding_BindMaterialScalarParam::Mid' has a wrong offset!");
static_assert(offsetof(OdyUIFloatBindingFunctionLibrary_FloatBinding_BindMaterialScalarParam, ParamName) == 0x000028, "Member 'OdyUIFloatBindingFunctionLibrary_FloatBinding_BindMaterialScalarParam::ParamName' has a wrong offset!");

// Function OdyUI.OdyUIFloatBindingFunctionLibrary.FloatBinding_GetValue
// 0x0028 (0x0028 - 0x0000)
struct OdyUIFloatBindingFunctionLibrary_FloatBinding_GetValue final
{
public:
	struct FOdyUIFloatBinding                     FloatBinding;                                      // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIFloatBindingFunctionLibrary_FloatBinding_GetValue) == 0x000008, "Wrong alignment on OdyUIFloatBindingFunctionLibrary_FloatBinding_GetValue");
static_assert(sizeof(OdyUIFloatBindingFunctionLibrary_FloatBinding_GetValue) == 0x000028, "Wrong size on OdyUIFloatBindingFunctionLibrary_FloatBinding_GetValue");
static_assert(offsetof(OdyUIFloatBindingFunctionLibrary_FloatBinding_GetValue, FloatBinding) == 0x000000, "Member 'OdyUIFloatBindingFunctionLibrary_FloatBinding_GetValue::FloatBinding' has a wrong offset!");
static_assert(offsetof(OdyUIFloatBindingFunctionLibrary_FloatBinding_GetValue, ReturnValue) == 0x000020, "Member 'OdyUIFloatBindingFunctionLibrary_FloatBinding_GetValue::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIFloatBindingFunctionLibrary.FloatBinding_RemoveDelegate
// 0x0030 (0x0030 - 0x0000)
struct OdyUIFloatBindingFunctionLibrary_FloatBinding_RemoveDelegate final
{
public:
	struct FOdyUIFloatBinding                     FloatBinding;                                      // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(float OldValue, float NewValue)> Delegate;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIFloatBindingFunctionLibrary_FloatBinding_RemoveDelegate) == 0x000008, "Wrong alignment on OdyUIFloatBindingFunctionLibrary_FloatBinding_RemoveDelegate");
static_assert(sizeof(OdyUIFloatBindingFunctionLibrary_FloatBinding_RemoveDelegate) == 0x000030, "Wrong size on OdyUIFloatBindingFunctionLibrary_FloatBinding_RemoveDelegate");
static_assert(offsetof(OdyUIFloatBindingFunctionLibrary_FloatBinding_RemoveDelegate, FloatBinding) == 0x000000, "Member 'OdyUIFloatBindingFunctionLibrary_FloatBinding_RemoveDelegate::FloatBinding' has a wrong offset!");
static_assert(offsetof(OdyUIFloatBindingFunctionLibrary_FloatBinding_RemoveDelegate, Delegate) == 0x000020, "Member 'OdyUIFloatBindingFunctionLibrary_FloatBinding_RemoveDelegate::Delegate' has a wrong offset!");

// Function OdyUI.OdyUIFloatBindingFunctionLibrary.FloatBinding_SetValue
// 0x0028 (0x0028 - 0x0000)
struct OdyUIFloatBindingFunctionLibrary_FloatBinding_SetValue final
{
public:
	struct FOdyUIFloatBinding                     FloatBinding;                                      // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Float;                                             // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIFloatBindingFunctionLibrary_FloatBinding_SetValue) == 0x000008, "Wrong alignment on OdyUIFloatBindingFunctionLibrary_FloatBinding_SetValue");
static_assert(sizeof(OdyUIFloatBindingFunctionLibrary_FloatBinding_SetValue) == 0x000028, "Wrong size on OdyUIFloatBindingFunctionLibrary_FloatBinding_SetValue");
static_assert(offsetof(OdyUIFloatBindingFunctionLibrary_FloatBinding_SetValue, FloatBinding) == 0x000000, "Member 'OdyUIFloatBindingFunctionLibrary_FloatBinding_SetValue::FloatBinding' has a wrong offset!");
static_assert(offsetof(OdyUIFloatBindingFunctionLibrary_FloatBinding_SetValue, Float) == 0x000020, "Member 'OdyUIFloatBindingFunctionLibrary_FloatBinding_SetValue::Float' has a wrong offset!");

// Function OdyUI.OdyUIFloatBindingFunctionLibrary.FloatBinding_Unbind
// 0x0028 (0x0028 - 0x0000)
struct OdyUIFloatBindingFunctionLibrary_FloatBinding_Unbind final
{
public:
	struct FOdyUIFloatBinding                     FloatBinding;                                      // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0020(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIFloatBindingFunctionLibrary_FloatBinding_Unbind) == 0x000008, "Wrong alignment on OdyUIFloatBindingFunctionLibrary_FloatBinding_Unbind");
static_assert(sizeof(OdyUIFloatBindingFunctionLibrary_FloatBinding_Unbind) == 0x000028, "Wrong size on OdyUIFloatBindingFunctionLibrary_FloatBinding_Unbind");
static_assert(offsetof(OdyUIFloatBindingFunctionLibrary_FloatBinding_Unbind, FloatBinding) == 0x000000, "Member 'OdyUIFloatBindingFunctionLibrary_FloatBinding_Unbind::FloatBinding' has a wrong offset!");
static_assert(offsetof(OdyUIFloatBindingFunctionLibrary_FloatBinding_Unbind, Object) == 0x000020, "Member 'OdyUIFloatBindingFunctionLibrary_FloatBinding_Unbind::Object' has a wrong offset!");

// Function OdyUI.OdyUIGameplayTagBindingFunctionLibrary.GameplayTagBinding_AddDelegate
// 0x0038 (0x0038 - 0x0000)
struct OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_AddDelegate final
{
public:
	struct FOdyUIGameplayTagBinding               GameplayTagBinding;                                // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGameplayTag& OldValue, const struct FGameplayTag& NewValue)> Delegate;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExecuteNow;                                       // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_AddDelegate) == 0x000008, "Wrong alignment on OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_AddDelegate");
static_assert(sizeof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_AddDelegate) == 0x000038, "Wrong size on OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_AddDelegate");
static_assert(offsetof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_AddDelegate, GameplayTagBinding) == 0x000000, "Member 'OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_AddDelegate::GameplayTagBinding' has a wrong offset!");
static_assert(offsetof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_AddDelegate, Delegate) == 0x000020, "Member 'OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_AddDelegate::Delegate' has a wrong offset!");
static_assert(offsetof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_AddDelegate, bExecuteNow) == 0x000030, "Member 'OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_AddDelegate::bExecuteNow' has a wrong offset!");

// Function OdyUI.OdyUIGameplayTagBindingFunctionLibrary.GameplayTagBinding_GetValue
// 0x0028 (0x0028 - 0x0000)
struct OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_GetValue final
{
public:
	struct FOdyUIGameplayTagBinding               GameplayTagBinding;                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_GetValue) == 0x000008, "Wrong alignment on OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_GetValue");
static_assert(sizeof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_GetValue) == 0x000028, "Wrong size on OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_GetValue");
static_assert(offsetof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_GetValue, GameplayTagBinding) == 0x000000, "Member 'OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_GetValue::GameplayTagBinding' has a wrong offset!");
static_assert(offsetof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_GetValue, ReturnValue) == 0x000020, "Member 'OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_GetValue::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIGameplayTagBindingFunctionLibrary.GameplayTagBinding_RemoveDelegate
// 0x0030 (0x0030 - 0x0000)
struct OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_RemoveDelegate final
{
public:
	struct FOdyUIGameplayTagBinding               GameplayTagBinding;                                // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGameplayTag& OldValue, const struct FGameplayTag& NewValue)> Delegate;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_RemoveDelegate) == 0x000008, "Wrong alignment on OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_RemoveDelegate");
static_assert(sizeof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_RemoveDelegate) == 0x000030, "Wrong size on OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_RemoveDelegate");
static_assert(offsetof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_RemoveDelegate, GameplayTagBinding) == 0x000000, "Member 'OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_RemoveDelegate::GameplayTagBinding' has a wrong offset!");
static_assert(offsetof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_RemoveDelegate, Delegate) == 0x000020, "Member 'OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_RemoveDelegate::Delegate' has a wrong offset!");

// Function OdyUI.OdyUIGameplayTagBindingFunctionLibrary.GameplayTagBinding_SetValue
// 0x0028 (0x0028 - 0x0000)
struct OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_SetValue final
{
public:
	struct FOdyUIGameplayTagBinding               GameplayTagBinding;                                // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FGameplayTag                           GameplayTag;                                       // 0x0020(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_SetValue) == 0x000008, "Wrong alignment on OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_SetValue");
static_assert(sizeof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_SetValue) == 0x000028, "Wrong size on OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_SetValue");
static_assert(offsetof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_SetValue, GameplayTagBinding) == 0x000000, "Member 'OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_SetValue::GameplayTagBinding' has a wrong offset!");
static_assert(offsetof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_SetValue, GameplayTag) == 0x000020, "Member 'OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_SetValue::GameplayTag' has a wrong offset!");

// Function OdyUI.OdyUIGameplayTagBindingFunctionLibrary.GameplayTagBinding_Unbind
// 0x0028 (0x0028 - 0x0000)
struct OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_Unbind final
{
public:
	struct FOdyUIGameplayTagBinding               GameplayTagBinding;                                // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0020(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_Unbind) == 0x000008, "Wrong alignment on OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_Unbind");
static_assert(sizeof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_Unbind) == 0x000028, "Wrong size on OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_Unbind");
static_assert(offsetof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_Unbind, GameplayTagBinding) == 0x000000, "Member 'OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_Unbind::GameplayTagBinding' has a wrong offset!");
static_assert(offsetof(OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_Unbind, Object) == 0x000020, "Member 'OdyUIGameplayTagBindingFunctionLibrary_GameplayTagBinding_Unbind::Object' has a wrong offset!");

// Function OdyUI.OdyUIIntBindingFunctionLibrary.IntBinding_AddDelegate
// 0x0038 (0x0038 - 0x0000)
struct OdyUIIntBindingFunctionLibrary_IntBinding_AddDelegate final
{
public:
	struct FOdyUIIntBinding                       IntBinding;                                        // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(int32 OldValue, int32 NewValue)> Delegate;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExecuteNow;                                       // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIIntBindingFunctionLibrary_IntBinding_AddDelegate) == 0x000008, "Wrong alignment on OdyUIIntBindingFunctionLibrary_IntBinding_AddDelegate");
static_assert(sizeof(OdyUIIntBindingFunctionLibrary_IntBinding_AddDelegate) == 0x000038, "Wrong size on OdyUIIntBindingFunctionLibrary_IntBinding_AddDelegate");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_AddDelegate, IntBinding) == 0x000000, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_AddDelegate::IntBinding' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_AddDelegate, Delegate) == 0x000020, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_AddDelegate::Delegate' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_AddDelegate, bExecuteNow) == 0x000030, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_AddDelegate::bExecuteNow' has a wrong offset!");

// Function OdyUI.OdyUIIntBindingFunctionLibrary.IntBinding_BindTextBlockFontSize
// 0x0028 (0x0028 - 0x0000)
struct OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockFontSize final
{
public:
	struct FOdyUIIntBinding                       IntBinding;                                        // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UTextBlock*                             TextBlock;                                         // 0x0020(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockFontSize) == 0x000008, "Wrong alignment on OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockFontSize");
static_assert(sizeof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockFontSize) == 0x000028, "Wrong size on OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockFontSize");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockFontSize, IntBinding) == 0x000000, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockFontSize::IntBinding' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockFontSize, TextBlock) == 0x000020, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockFontSize::TextBlock' has a wrong offset!");

// Function OdyUI.OdyUIIntBindingFunctionLibrary.IntBinding_BindTextBlockText
// 0x0038 (0x0038 - 0x0000)
struct OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockText final
{
public:
	struct FOdyUIIntBinding                       IntBinding;                                        // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UTextBlock*                             TextBlock;                                         // 0x0020(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAlwaysSign;                                       // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseGrouping;                                      // 0x0029(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MinimumIntegralDigits;                             // 0x002C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaximumIntegralDigits;                             // 0x0030(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockText) == 0x000008, "Wrong alignment on OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockText");
static_assert(sizeof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockText) == 0x000038, "Wrong size on OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockText");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockText, IntBinding) == 0x000000, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockText::IntBinding' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockText, TextBlock) == 0x000020, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockText::TextBlock' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockText, bAlwaysSign) == 0x000028, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockText::bAlwaysSign' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockText, bUseGrouping) == 0x000029, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockText::bUseGrouping' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockText, MinimumIntegralDigits) == 0x00002C, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockText::MinimumIntegralDigits' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockText, MaximumIntegralDigits) == 0x000030, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockText::MaximumIntegralDigits' has a wrong offset!");

// Function OdyUI.OdyUIIntBindingFunctionLibrary.IntBinding_BindTextBlockTextToFormat
// 0x0048 (0x0048 - 0x0000)
struct OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockTextToFormat final
{
public:
	struct FOdyUIIntBinding                       IntBinding;                                        // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   Pattern;                                           // 0x0020(0x0010)(Parm, NativeAccessSpecifierPublic)
	class UTextBlock*                             TextBlock;                                         // 0x0030(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAlwaysSign;                                       // 0x0038(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseGrouping;                                      // 0x0039(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MinimumIntegralDigits;                             // 0x003C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaximumIntegralDigits;                             // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockTextToFormat) == 0x000008, "Wrong alignment on OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockTextToFormat");
static_assert(sizeof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockTextToFormat) == 0x000048, "Wrong size on OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockTextToFormat");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockTextToFormat, IntBinding) == 0x000000, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockTextToFormat::IntBinding' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockTextToFormat, Pattern) == 0x000020, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockTextToFormat::Pattern' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockTextToFormat, TextBlock) == 0x000030, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockTextToFormat::TextBlock' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockTextToFormat, bAlwaysSign) == 0x000038, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockTextToFormat::bAlwaysSign' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockTextToFormat, bUseGrouping) == 0x000039, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockTextToFormat::bUseGrouping' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockTextToFormat, MinimumIntegralDigits) == 0x00003C, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockTextToFormat::MinimumIntegralDigits' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockTextToFormat, MaximumIntegralDigits) == 0x000040, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindTextBlockTextToFormat::MaximumIntegralDigits' has a wrong offset!");

// Function OdyUI.OdyUIIntBindingFunctionLibrary.IntBinding_BindWidgetVisibility
// 0x0030 (0x0030 - 0x0000)
struct OdyUIIntBindingFunctionLibrary_IntBinding_BindWidgetVisibility final
{
public:
	struct FOdyUIIntBinding                       IntBinding;                                        // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UWidget*                                Widget;                                            // 0x0020(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ComparisonValue;                                   // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateVisibility                              WhenGreater;                                       // 0x002C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateVisibility                              WhenEqual;                                         // 0x002D(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateVisibility                              WhenLess;                                          // 0x002E(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIIntBindingFunctionLibrary_IntBinding_BindWidgetVisibility) == 0x000008, "Wrong alignment on OdyUIIntBindingFunctionLibrary_IntBinding_BindWidgetVisibility");
static_assert(sizeof(OdyUIIntBindingFunctionLibrary_IntBinding_BindWidgetVisibility) == 0x000030, "Wrong size on OdyUIIntBindingFunctionLibrary_IntBinding_BindWidgetVisibility");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindWidgetVisibility, IntBinding) == 0x000000, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindWidgetVisibility::IntBinding' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindWidgetVisibility, Widget) == 0x000020, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindWidgetVisibility::Widget' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindWidgetVisibility, ComparisonValue) == 0x000028, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindWidgetVisibility::ComparisonValue' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindWidgetVisibility, WhenGreater) == 0x00002C, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindWidgetVisibility::WhenGreater' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindWidgetVisibility, WhenEqual) == 0x00002D, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindWidgetVisibility::WhenEqual' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_BindWidgetVisibility, WhenLess) == 0x00002E, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_BindWidgetVisibility::WhenLess' has a wrong offset!");

// Function OdyUI.OdyUIIntBindingFunctionLibrary.IntBinding_GetValue
// 0x0028 (0x0028 - 0x0000)
struct OdyUIIntBindingFunctionLibrary_IntBinding_GetValue final
{
public:
	struct FOdyUIIntBinding                       IntBinding;                                        // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIIntBindingFunctionLibrary_IntBinding_GetValue) == 0x000008, "Wrong alignment on OdyUIIntBindingFunctionLibrary_IntBinding_GetValue");
static_assert(sizeof(OdyUIIntBindingFunctionLibrary_IntBinding_GetValue) == 0x000028, "Wrong size on OdyUIIntBindingFunctionLibrary_IntBinding_GetValue");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_GetValue, IntBinding) == 0x000000, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_GetValue::IntBinding' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_GetValue, ReturnValue) == 0x000020, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_GetValue::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIIntBindingFunctionLibrary.IntBinding_RemoveDelegate
// 0x0030 (0x0030 - 0x0000)
struct OdyUIIntBindingFunctionLibrary_IntBinding_RemoveDelegate final
{
public:
	struct FOdyUIIntBinding                       IntBinding;                                        // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(int32 OldValue, int32 NewValue)> Delegate;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIIntBindingFunctionLibrary_IntBinding_RemoveDelegate) == 0x000008, "Wrong alignment on OdyUIIntBindingFunctionLibrary_IntBinding_RemoveDelegate");
static_assert(sizeof(OdyUIIntBindingFunctionLibrary_IntBinding_RemoveDelegate) == 0x000030, "Wrong size on OdyUIIntBindingFunctionLibrary_IntBinding_RemoveDelegate");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_RemoveDelegate, IntBinding) == 0x000000, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_RemoveDelegate::IntBinding' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_RemoveDelegate, Delegate) == 0x000020, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_RemoveDelegate::Delegate' has a wrong offset!");

// Function OdyUI.OdyUIIntBindingFunctionLibrary.IntBinding_SetValue
// 0x0028 (0x0028 - 0x0000)
struct OdyUIIntBindingFunctionLibrary_IntBinding_SetValue final
{
public:
	struct FOdyUIIntBinding                       IntBinding;                                        // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         Int;                                               // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIIntBindingFunctionLibrary_IntBinding_SetValue) == 0x000008, "Wrong alignment on OdyUIIntBindingFunctionLibrary_IntBinding_SetValue");
static_assert(sizeof(OdyUIIntBindingFunctionLibrary_IntBinding_SetValue) == 0x000028, "Wrong size on OdyUIIntBindingFunctionLibrary_IntBinding_SetValue");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_SetValue, IntBinding) == 0x000000, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_SetValue::IntBinding' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_SetValue, Int) == 0x000020, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_SetValue::Int' has a wrong offset!");

// Function OdyUI.OdyUIIntBindingFunctionLibrary.IntBinding_Unbind
// 0x0028 (0x0028 - 0x0000)
struct OdyUIIntBindingFunctionLibrary_IntBinding_Unbind final
{
public:
	struct FOdyUIIntBinding                       IntBinding;                                        // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0020(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIIntBindingFunctionLibrary_IntBinding_Unbind) == 0x000008, "Wrong alignment on OdyUIIntBindingFunctionLibrary_IntBinding_Unbind");
static_assert(sizeof(OdyUIIntBindingFunctionLibrary_IntBinding_Unbind) == 0x000028, "Wrong size on OdyUIIntBindingFunctionLibrary_IntBinding_Unbind");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_Unbind, IntBinding) == 0x000000, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_Unbind::IntBinding' has a wrong offset!");
static_assert(offsetof(OdyUIIntBindingFunctionLibrary_IntBinding_Unbind, Object) == 0x000020, "Member 'OdyUIIntBindingFunctionLibrary_IntBinding_Unbind::Object' has a wrong offset!");

// Function OdyUI.OdyUIMaterialBindingFunctionLibrary.MaterialBinding_AddDelegate
// 0x0068 (0x0068 - 0x0000)
struct OdyUIMaterialBindingFunctionLibrary_MaterialBinding_AddDelegate final
{
public:
	struct FOdyUIMaterialBinding                  MaterialBinding;                                   // 0x0000(0x0050)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(class UMaterialInterface* OldValue, class UMaterialInterface* NewValue)> Delegate;                                          // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExecuteNow;                                       // 0x0060(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_AddDelegate) == 0x000008, "Wrong alignment on OdyUIMaterialBindingFunctionLibrary_MaterialBinding_AddDelegate");
static_assert(sizeof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_AddDelegate) == 0x000068, "Wrong size on OdyUIMaterialBindingFunctionLibrary_MaterialBinding_AddDelegate");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_AddDelegate, MaterialBinding) == 0x000000, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_AddDelegate::MaterialBinding' has a wrong offset!");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_AddDelegate, Delegate) == 0x000050, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_AddDelegate::Delegate' has a wrong offset!");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_AddDelegate, bExecuteNow) == 0x000060, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_AddDelegate::bExecuteNow' has a wrong offset!");

// Function OdyUI.OdyUIMaterialBindingFunctionLibrary.MaterialBinding_BindImage
// 0x0060 (0x0060 - 0x0000)
struct OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImage final
{
public:
	struct FOdyUIMaterialBinding                  MaterialBinding;                                   // 0x0000(0x0050)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UImage*                                 Image;                                             // 0x0050(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBindVisibility;                                   // 0x0058(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImage) == 0x000008, "Wrong alignment on OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImage");
static_assert(sizeof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImage) == 0x000060, "Wrong size on OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImage");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImage, MaterialBinding) == 0x000000, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImage::MaterialBinding' has a wrong offset!");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImage, Image) == 0x000050, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImage::Image' has a wrong offset!");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImage, bBindVisibility) == 0x000058, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImage::bBindVisibility' has a wrong offset!");

// Function OdyUI.OdyUIMaterialBindingFunctionLibrary.MaterialBinding_BindImageWithFallback
// 0x0060 (0x0060 - 0x0000)
struct OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImageWithFallback final
{
public:
	struct FOdyUIMaterialBinding                  MaterialBinding;                                   // 0x0000(0x0050)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UImage*                                 Image;                                             // 0x0050(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     FallbackMaterial;                                  // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImageWithFallback) == 0x000008, "Wrong alignment on OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImageWithFallback");
static_assert(sizeof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImageWithFallback) == 0x000060, "Wrong size on OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImageWithFallback");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImageWithFallback, MaterialBinding) == 0x000000, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImageWithFallback::MaterialBinding' has a wrong offset!");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImageWithFallback, Image) == 0x000050, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImageWithFallback::Image' has a wrong offset!");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImageWithFallback, FallbackMaterial) == 0x000058, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_BindImageWithFallback::FallbackMaterial' has a wrong offset!");

// Function OdyUI.OdyUIMaterialBindingFunctionLibrary.MaterialBinding_GetMaterialValue
// 0x0058 (0x0058 - 0x0000)
struct OdyUIMaterialBindingFunctionLibrary_MaterialBinding_GetMaterialValue final
{
public:
	struct FOdyUIMaterialBinding                  MaterialBinding;                                   // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_GetMaterialValue) == 0x000008, "Wrong alignment on OdyUIMaterialBindingFunctionLibrary_MaterialBinding_GetMaterialValue");
static_assert(sizeof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_GetMaterialValue) == 0x000058, "Wrong size on OdyUIMaterialBindingFunctionLibrary_MaterialBinding_GetMaterialValue");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_GetMaterialValue, MaterialBinding) == 0x000000, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_GetMaterialValue::MaterialBinding' has a wrong offset!");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_GetMaterialValue, ReturnValue) == 0x000050, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_GetMaterialValue::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIMaterialBindingFunctionLibrary.MaterialBinding_GetSoftValue
// 0x0078 (0x0078 - 0x0000)
struct OdyUIMaterialBindingFunctionLibrary_MaterialBinding_GetSoftValue final
{
public:
	struct FOdyUIMaterialBinding                  MaterialBinding;                                   // 0x0000(0x0050)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>      ReturnValue;                                       // 0x0050(0x0028)(Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_GetSoftValue) == 0x000008, "Wrong alignment on OdyUIMaterialBindingFunctionLibrary_MaterialBinding_GetSoftValue");
static_assert(sizeof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_GetSoftValue) == 0x000078, "Wrong size on OdyUIMaterialBindingFunctionLibrary_MaterialBinding_GetSoftValue");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_GetSoftValue, MaterialBinding) == 0x000000, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_GetSoftValue::MaterialBinding' has a wrong offset!");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_GetSoftValue, ReturnValue) == 0x000050, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_GetSoftValue::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIMaterialBindingFunctionLibrary.MaterialBinding_HasMaterial
// 0x0058 (0x0058 - 0x0000)
struct OdyUIMaterialBindingFunctionLibrary_MaterialBinding_HasMaterial final
{
public:
	struct FOdyUIMaterialBinding                  MaterialBinding;                                   // 0x0000(0x0050)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_HasMaterial) == 0x000008, "Wrong alignment on OdyUIMaterialBindingFunctionLibrary_MaterialBinding_HasMaterial");
static_assert(sizeof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_HasMaterial) == 0x000058, "Wrong size on OdyUIMaterialBindingFunctionLibrary_MaterialBinding_HasMaterial");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_HasMaterial, MaterialBinding) == 0x000000, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_HasMaterial::MaterialBinding' has a wrong offset!");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_HasMaterial, ReturnValue) == 0x000050, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_HasMaterial::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIMaterialBindingFunctionLibrary.MaterialBinding_RemoveDelegate
// 0x0060 (0x0060 - 0x0000)
struct OdyUIMaterialBindingFunctionLibrary_MaterialBinding_RemoveDelegate final
{
public:
	struct FOdyUIMaterialBinding                  MaterialBinding;                                   // 0x0000(0x0050)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(class UMaterialInterface* OldValue, class UMaterialInterface* NewValue)> Delegate;                                          // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_RemoveDelegate) == 0x000008, "Wrong alignment on OdyUIMaterialBindingFunctionLibrary_MaterialBinding_RemoveDelegate");
static_assert(sizeof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_RemoveDelegate) == 0x000060, "Wrong size on OdyUIMaterialBindingFunctionLibrary_MaterialBinding_RemoveDelegate");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_RemoveDelegate, MaterialBinding) == 0x000000, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_RemoveDelegate::MaterialBinding' has a wrong offset!");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_RemoveDelegate, Delegate) == 0x000050, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_RemoveDelegate::Delegate' has a wrong offset!");

// Function OdyUI.OdyUIMaterialBindingFunctionLibrary.MaterialBinding_SetMaterialValue
// 0x0058 (0x0058 - 0x0000)
struct OdyUIMaterialBindingFunctionLibrary_MaterialBinding_SetMaterialValue final
{
public:
	struct FOdyUIMaterialBinding                  MaterialBinding;                                   // 0x0000(0x0050)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     Material;                                          // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_SetMaterialValue) == 0x000008, "Wrong alignment on OdyUIMaterialBindingFunctionLibrary_MaterialBinding_SetMaterialValue");
static_assert(sizeof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_SetMaterialValue) == 0x000058, "Wrong size on OdyUIMaterialBindingFunctionLibrary_MaterialBinding_SetMaterialValue");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_SetMaterialValue, MaterialBinding) == 0x000000, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_SetMaterialValue::MaterialBinding' has a wrong offset!");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_SetMaterialValue, Material) == 0x000050, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_SetMaterialValue::Material' has a wrong offset!");

// Function OdyUI.OdyUIMaterialBindingFunctionLibrary.MaterialBinding_SetSoftValue
// 0x0078 (0x0078 - 0x0000)
struct OdyUIMaterialBindingFunctionLibrary_MaterialBinding_SetSoftValue final
{
public:
	struct FOdyUIMaterialBinding                  MaterialBinding;                                   // 0x0000(0x0050)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>      SoftMaterial;                                      // 0x0050(0x0028)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_SetSoftValue) == 0x000008, "Wrong alignment on OdyUIMaterialBindingFunctionLibrary_MaterialBinding_SetSoftValue");
static_assert(sizeof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_SetSoftValue) == 0x000078, "Wrong size on OdyUIMaterialBindingFunctionLibrary_MaterialBinding_SetSoftValue");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_SetSoftValue, MaterialBinding) == 0x000000, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_SetSoftValue::MaterialBinding' has a wrong offset!");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_SetSoftValue, SoftMaterial) == 0x000050, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_SetSoftValue::SoftMaterial' has a wrong offset!");

// Function OdyUI.OdyUIMaterialBindingFunctionLibrary.MaterialBinding_Unbind
// 0x0058 (0x0058 - 0x0000)
struct OdyUIMaterialBindingFunctionLibrary_MaterialBinding_Unbind final
{
public:
	struct FOdyUIMaterialBinding                  MaterialBinding;                                   // 0x0000(0x0050)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_Unbind) == 0x000008, "Wrong alignment on OdyUIMaterialBindingFunctionLibrary_MaterialBinding_Unbind");
static_assert(sizeof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_Unbind) == 0x000058, "Wrong size on OdyUIMaterialBindingFunctionLibrary_MaterialBinding_Unbind");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_Unbind, MaterialBinding) == 0x000000, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_Unbind::MaterialBinding' has a wrong offset!");
static_assert(offsetof(OdyUIMaterialBindingFunctionLibrary_MaterialBinding_Unbind, Object) == 0x000050, "Member 'OdyUIMaterialBindingFunctionLibrary_MaterialBinding_Unbind::Object' has a wrong offset!");

// Function OdyUI.OdyUINameBindingFunctionLibrary.NameBinding_AddDelegate
// 0x0038 (0x0038 - 0x0000)
struct OdyUINameBindingFunctionLibrary_NameBinding_AddDelegate final
{
public:
	struct FOdyUINameBinding                      NameBinding;                                       // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(class FName OldValue, class FName NewValue)> Delegate;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExecuteNow;                                       // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUINameBindingFunctionLibrary_NameBinding_AddDelegate) == 0x000008, "Wrong alignment on OdyUINameBindingFunctionLibrary_NameBinding_AddDelegate");
static_assert(sizeof(OdyUINameBindingFunctionLibrary_NameBinding_AddDelegate) == 0x000038, "Wrong size on OdyUINameBindingFunctionLibrary_NameBinding_AddDelegate");
static_assert(offsetof(OdyUINameBindingFunctionLibrary_NameBinding_AddDelegate, NameBinding) == 0x000000, "Member 'OdyUINameBindingFunctionLibrary_NameBinding_AddDelegate::NameBinding' has a wrong offset!");
static_assert(offsetof(OdyUINameBindingFunctionLibrary_NameBinding_AddDelegate, Delegate) == 0x000020, "Member 'OdyUINameBindingFunctionLibrary_NameBinding_AddDelegate::Delegate' has a wrong offset!");
static_assert(offsetof(OdyUINameBindingFunctionLibrary_NameBinding_AddDelegate, bExecuteNow) == 0x000030, "Member 'OdyUINameBindingFunctionLibrary_NameBinding_AddDelegate::bExecuteNow' has a wrong offset!");

// Function OdyUI.OdyUINameBindingFunctionLibrary.NameBinding_GetValue
// 0x0028 (0x0028 - 0x0000)
struct OdyUINameBindingFunctionLibrary_NameBinding_GetValue final
{
public:
	struct FOdyUINameBinding                      NameBinding;                                       // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUINameBindingFunctionLibrary_NameBinding_GetValue) == 0x000008, "Wrong alignment on OdyUINameBindingFunctionLibrary_NameBinding_GetValue");
static_assert(sizeof(OdyUINameBindingFunctionLibrary_NameBinding_GetValue) == 0x000028, "Wrong size on OdyUINameBindingFunctionLibrary_NameBinding_GetValue");
static_assert(offsetof(OdyUINameBindingFunctionLibrary_NameBinding_GetValue, NameBinding) == 0x000000, "Member 'OdyUINameBindingFunctionLibrary_NameBinding_GetValue::NameBinding' has a wrong offset!");
static_assert(offsetof(OdyUINameBindingFunctionLibrary_NameBinding_GetValue, ReturnValue) == 0x000020, "Member 'OdyUINameBindingFunctionLibrary_NameBinding_GetValue::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUINameBindingFunctionLibrary.NameBinding_RemoveDelegate
// 0x0030 (0x0030 - 0x0000)
struct OdyUINameBindingFunctionLibrary_NameBinding_RemoveDelegate final
{
public:
	struct FOdyUINameBinding                      NameBinding;                                       // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(class FName OldValue, class FName NewValue)> Delegate;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUINameBindingFunctionLibrary_NameBinding_RemoveDelegate) == 0x000008, "Wrong alignment on OdyUINameBindingFunctionLibrary_NameBinding_RemoveDelegate");
static_assert(sizeof(OdyUINameBindingFunctionLibrary_NameBinding_RemoveDelegate) == 0x000030, "Wrong size on OdyUINameBindingFunctionLibrary_NameBinding_RemoveDelegate");
static_assert(offsetof(OdyUINameBindingFunctionLibrary_NameBinding_RemoveDelegate, NameBinding) == 0x000000, "Member 'OdyUINameBindingFunctionLibrary_NameBinding_RemoveDelegate::NameBinding' has a wrong offset!");
static_assert(offsetof(OdyUINameBindingFunctionLibrary_NameBinding_RemoveDelegate, Delegate) == 0x000020, "Member 'OdyUINameBindingFunctionLibrary_NameBinding_RemoveDelegate::Delegate' has a wrong offset!");

// Function OdyUI.OdyUINameBindingFunctionLibrary.NameBinding_SetValue
// 0x0028 (0x0028 - 0x0000)
struct OdyUINameBindingFunctionLibrary_NameBinding_SetValue final
{
public:
	struct FOdyUINameBinding                      NameBinding;                                       // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FName                                   Name_0;                                            // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUINameBindingFunctionLibrary_NameBinding_SetValue) == 0x000008, "Wrong alignment on OdyUINameBindingFunctionLibrary_NameBinding_SetValue");
static_assert(sizeof(OdyUINameBindingFunctionLibrary_NameBinding_SetValue) == 0x000028, "Wrong size on OdyUINameBindingFunctionLibrary_NameBinding_SetValue");
static_assert(offsetof(OdyUINameBindingFunctionLibrary_NameBinding_SetValue, NameBinding) == 0x000000, "Member 'OdyUINameBindingFunctionLibrary_NameBinding_SetValue::NameBinding' has a wrong offset!");
static_assert(offsetof(OdyUINameBindingFunctionLibrary_NameBinding_SetValue, Name_0) == 0x000020, "Member 'OdyUINameBindingFunctionLibrary_NameBinding_SetValue::Name_0' has a wrong offset!");

// Function OdyUI.OdyUINameBindingFunctionLibrary.NameBinding_Unbind
// 0x0028 (0x0028 - 0x0000)
struct OdyUINameBindingFunctionLibrary_NameBinding_Unbind final
{
public:
	struct FOdyUINameBinding                      NameBinding;                                       // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0020(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUINameBindingFunctionLibrary_NameBinding_Unbind) == 0x000008, "Wrong alignment on OdyUINameBindingFunctionLibrary_NameBinding_Unbind");
static_assert(sizeof(OdyUINameBindingFunctionLibrary_NameBinding_Unbind) == 0x000028, "Wrong size on OdyUINameBindingFunctionLibrary_NameBinding_Unbind");
static_assert(offsetof(OdyUINameBindingFunctionLibrary_NameBinding_Unbind, NameBinding) == 0x000000, "Member 'OdyUINameBindingFunctionLibrary_NameBinding_Unbind::NameBinding' has a wrong offset!");
static_assert(offsetof(OdyUINameBindingFunctionLibrary_NameBinding_Unbind, Object) == 0x000020, "Member 'OdyUINameBindingFunctionLibrary_NameBinding_Unbind::Object' has a wrong offset!");

// Function OdyUI.OdyUIObjectBindingFunctionLibrary.ObjectBinding_AddDelegate
// 0x0038 (0x0038 - 0x0000)
struct OdyUIObjectBindingFunctionLibrary_ObjectBinding_AddDelegate final
{
public:
	struct FOdyUIObjectBinding                    ObjectBinding;                                     // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(class UObject* OldValue, class UObject* NewValue)> Delegate;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExecuteNow;                                       // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_AddDelegate) == 0x000008, "Wrong alignment on OdyUIObjectBindingFunctionLibrary_ObjectBinding_AddDelegate");
static_assert(sizeof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_AddDelegate) == 0x000038, "Wrong size on OdyUIObjectBindingFunctionLibrary_ObjectBinding_AddDelegate");
static_assert(offsetof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_AddDelegate, ObjectBinding) == 0x000000, "Member 'OdyUIObjectBindingFunctionLibrary_ObjectBinding_AddDelegate::ObjectBinding' has a wrong offset!");
static_assert(offsetof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_AddDelegate, Delegate) == 0x000020, "Member 'OdyUIObjectBindingFunctionLibrary_ObjectBinding_AddDelegate::Delegate' has a wrong offset!");
static_assert(offsetof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_AddDelegate, bExecuteNow) == 0x000030, "Member 'OdyUIObjectBindingFunctionLibrary_ObjectBinding_AddDelegate::bExecuteNow' has a wrong offset!");

// Function OdyUI.OdyUIObjectBindingFunctionLibrary.ObjectBinding_GetValue
// 0x0028 (0x0028 - 0x0000)
struct OdyUIObjectBindingFunctionLibrary_ObjectBinding_GetValue final
{
public:
	struct FOdyUIObjectBinding                    ObjectBinding;                                     // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UObject*                                ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_GetValue) == 0x000008, "Wrong alignment on OdyUIObjectBindingFunctionLibrary_ObjectBinding_GetValue");
static_assert(sizeof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_GetValue) == 0x000028, "Wrong size on OdyUIObjectBindingFunctionLibrary_ObjectBinding_GetValue");
static_assert(offsetof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_GetValue, ObjectBinding) == 0x000000, "Member 'OdyUIObjectBindingFunctionLibrary_ObjectBinding_GetValue::ObjectBinding' has a wrong offset!");
static_assert(offsetof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_GetValue, ReturnValue) == 0x000020, "Member 'OdyUIObjectBindingFunctionLibrary_ObjectBinding_GetValue::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIObjectBindingFunctionLibrary.ObjectBinding_RemoveDelegate
// 0x0030 (0x0030 - 0x0000)
struct OdyUIObjectBindingFunctionLibrary_ObjectBinding_RemoveDelegate final
{
public:
	struct FOdyUIObjectBinding                    ObjectBinding;                                     // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(class UObject* OldValue, class UObject* NewValue)> Delegate;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_RemoveDelegate) == 0x000008, "Wrong alignment on OdyUIObjectBindingFunctionLibrary_ObjectBinding_RemoveDelegate");
static_assert(sizeof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_RemoveDelegate) == 0x000030, "Wrong size on OdyUIObjectBindingFunctionLibrary_ObjectBinding_RemoveDelegate");
static_assert(offsetof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_RemoveDelegate, ObjectBinding) == 0x000000, "Member 'OdyUIObjectBindingFunctionLibrary_ObjectBinding_RemoveDelegate::ObjectBinding' has a wrong offset!");
static_assert(offsetof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_RemoveDelegate, Delegate) == 0x000020, "Member 'OdyUIObjectBindingFunctionLibrary_ObjectBinding_RemoveDelegate::Delegate' has a wrong offset!");

// Function OdyUI.OdyUIObjectBindingFunctionLibrary.ObjectBinding_SetValue
// 0x0028 (0x0028 - 0x0000)
struct OdyUIObjectBindingFunctionLibrary_ObjectBinding_SetValue final
{
public:
	struct FOdyUIObjectBinding                    ObjectBinding;                                     // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0020(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_SetValue) == 0x000008, "Wrong alignment on OdyUIObjectBindingFunctionLibrary_ObjectBinding_SetValue");
static_assert(sizeof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_SetValue) == 0x000028, "Wrong size on OdyUIObjectBindingFunctionLibrary_ObjectBinding_SetValue");
static_assert(offsetof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_SetValue, ObjectBinding) == 0x000000, "Member 'OdyUIObjectBindingFunctionLibrary_ObjectBinding_SetValue::ObjectBinding' has a wrong offset!");
static_assert(offsetof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_SetValue, Object) == 0x000020, "Member 'OdyUIObjectBindingFunctionLibrary_ObjectBinding_SetValue::Object' has a wrong offset!");

// Function OdyUI.OdyUIObjectBindingFunctionLibrary.ObjectBinding_Unbind
// 0x0028 (0x0028 - 0x0000)
struct OdyUIObjectBindingFunctionLibrary_ObjectBinding_Unbind final
{
public:
	struct FOdyUIObjectBinding                    ObjectBinding;                                     // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0020(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_Unbind) == 0x000008, "Wrong alignment on OdyUIObjectBindingFunctionLibrary_ObjectBinding_Unbind");
static_assert(sizeof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_Unbind) == 0x000028, "Wrong size on OdyUIObjectBindingFunctionLibrary_ObjectBinding_Unbind");
static_assert(offsetof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_Unbind, ObjectBinding) == 0x000000, "Member 'OdyUIObjectBindingFunctionLibrary_ObjectBinding_Unbind::ObjectBinding' has a wrong offset!");
static_assert(offsetof(OdyUIObjectBindingFunctionLibrary_ObjectBinding_Unbind, Object) == 0x000020, "Member 'OdyUIObjectBindingFunctionLibrary_ObjectBinding_Unbind::Object' has a wrong offset!");

// Function OdyUI.OdyUIRouter.GetPlatformUniversalAccept
// 0x0018 (0x0018 - 0x0000)
struct OdyUIRouter_GetPlatformUniversalAccept final
{
public:
	struct FKey                                   ReturnValue;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIRouter_GetPlatformUniversalAccept) == 0x000008, "Wrong alignment on OdyUIRouter_GetPlatformUniversalAccept");
static_assert(sizeof(OdyUIRouter_GetPlatformUniversalAccept) == 0x000018, "Wrong size on OdyUIRouter_GetPlatformUniversalAccept");
static_assert(offsetof(OdyUIRouter_GetPlatformUniversalAccept, ReturnValue) == 0x000000, "Member 'OdyUIRouter_GetPlatformUniversalAccept::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIRouter.GetPlatformUniversalBack
// 0x0018 (0x0018 - 0x0000)
struct OdyUIRouter_GetPlatformUniversalBack final
{
public:
	struct FKey                                   ReturnValue;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIRouter_GetPlatformUniversalBack) == 0x000008, "Wrong alignment on OdyUIRouter_GetPlatformUniversalBack");
static_assert(sizeof(OdyUIRouter_GetPlatformUniversalBack) == 0x000018, "Wrong size on OdyUIRouter_GetPlatformUniversalBack");
static_assert(offsetof(OdyUIRouter_GetPlatformUniversalBack, ReturnValue) == 0x000000, "Member 'OdyUIRouter_GetPlatformUniversalBack::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIRouter.GetUIRouter
// 0x0010 (0x0010 - 0x0000)
struct OdyUIRouter_GetUIRouter final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdyUIRouter*                           ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIRouter_GetUIRouter) == 0x000008, "Wrong alignment on OdyUIRouter_GetUIRouter");
static_assert(sizeof(OdyUIRouter_GetUIRouter) == 0x000010, "Wrong size on OdyUIRouter_GetUIRouter");
static_assert(offsetof(OdyUIRouter_GetUIRouter, WorldContextObject) == 0x000000, "Member 'OdyUIRouter_GetUIRouter::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_GetUIRouter, ReturnValue) == 0x000008, "Member 'OdyUIRouter_GetUIRouter::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIRouter.CloseMenu
// 0x0008 (0x0008 - 0x0000)
struct OdyUIRouter_CloseMenu final
{
public:
	class UOdyMenu*                               Menu;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIRouter_CloseMenu) == 0x000008, "Wrong alignment on OdyUIRouter_CloseMenu");
static_assert(sizeof(OdyUIRouter_CloseMenu) == 0x000008, "Wrong size on OdyUIRouter_CloseMenu");
static_assert(offsetof(OdyUIRouter_CloseMenu, Menu) == 0x000000, "Member 'OdyUIRouter_CloseMenu::Menu' has a wrong offset!");

// Function OdyUI.OdyUIRouter.CreateMenu
// 0x0010 (0x0010 - 0x0000)
struct OdyUIRouter_CreateMenu final
{
public:
	class UOdyMenuData*                           MenuAsset;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdyMenu*                               ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIRouter_CreateMenu) == 0x000008, "Wrong alignment on OdyUIRouter_CreateMenu");
static_assert(sizeof(OdyUIRouter_CreateMenu) == 0x000010, "Wrong size on OdyUIRouter_CreateMenu");
static_assert(offsetof(OdyUIRouter_CreateMenu, MenuAsset) == 0x000000, "Member 'OdyUIRouter_CreateMenu::MenuAsset' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_CreateMenu, ReturnValue) == 0x000008, "Member 'OdyUIRouter_CreateMenu::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIRouter.NavigateToDefaultMenu
// 0x0060 (0x0060 - 0x0000)
struct OdyUIRouter_NavigateToDefaultMenu final
{
public:
	TMap<class FString, class FString>            Args;                                              // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Action;                                            // 0x0050(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIRouter_NavigateToDefaultMenu) == 0x000008, "Wrong alignment on OdyUIRouter_NavigateToDefaultMenu");
static_assert(sizeof(OdyUIRouter_NavigateToDefaultMenu) == 0x000060, "Wrong size on OdyUIRouter_NavigateToDefaultMenu");
static_assert(offsetof(OdyUIRouter_NavigateToDefaultMenu, Args) == 0x000000, "Member 'OdyUIRouter_NavigateToDefaultMenu::Args' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_NavigateToDefaultMenu, Action) == 0x000050, "Member 'OdyUIRouter_NavigateToDefaultMenu::Action' has a wrong offset!");

// Function OdyUI.OdyUIRouter.NavigateToMenu
// 0x0070 (0x0070 - 0x0000)
struct OdyUIRouter_NavigateToMenu final
{
public:
	class UOdyMenu*                               Menu;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            Args;                                              // 0x0008(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Action;                                            // 0x0058(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NavigationOptions;                                 // 0x0068(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMenuInputMode                                InputModeOverride;                                 // 0x006C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOdyModalPriority                             ModalPriorityOverride;                             // 0x006D(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIRouter_NavigateToMenu) == 0x000008, "Wrong alignment on OdyUIRouter_NavigateToMenu");
static_assert(sizeof(OdyUIRouter_NavigateToMenu) == 0x000070, "Wrong size on OdyUIRouter_NavigateToMenu");
static_assert(offsetof(OdyUIRouter_NavigateToMenu, Menu) == 0x000000, "Member 'OdyUIRouter_NavigateToMenu::Menu' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_NavigateToMenu, Args) == 0x000008, "Member 'OdyUIRouter_NavigateToMenu::Args' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_NavigateToMenu, Action) == 0x000058, "Member 'OdyUIRouter_NavigateToMenu::Action' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_NavigateToMenu, NavigationOptions) == 0x000068, "Member 'OdyUIRouter_NavigateToMenu::NavigationOptions' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_NavigateToMenu, InputModeOverride) == 0x00006C, "Member 'OdyUIRouter_NavigateToMenu::InputModeOverride' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_NavigateToMenu, ModalPriorityOverride) == 0x00006D, "Member 'OdyUIRouter_NavigateToMenu::ModalPriorityOverride' has a wrong offset!");

// Function OdyUI.OdyUIRouter.NavigateToPath
// 0x0010 (0x0010 - 0x0000)
struct OdyUIRouter_NavigateToPath final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIRouter_NavigateToPath) == 0x000008, "Wrong alignment on OdyUIRouter_NavigateToPath");
static_assert(sizeof(OdyUIRouter_NavigateToPath) == 0x000010, "Wrong size on OdyUIRouter_NavigateToPath");
static_assert(offsetof(OdyUIRouter_NavigateToPath, Path) == 0x000000, "Member 'OdyUIRouter_NavigateToPath::Path' has a wrong offset!");

// Function OdyUI.OdyUIRouter.OnGameStateReady
// 0x0008 (0x0008 - 0x0000)
struct OdyUIRouter_OnGameStateReady final
{
public:
	class AGameStateBase*                         GameState;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIRouter_OnGameStateReady) == 0x000008, "Wrong alignment on OdyUIRouter_OnGameStateReady");
static_assert(sizeof(OdyUIRouter_OnGameStateReady) == 0x000008, "Wrong size on OdyUIRouter_OnGameStateReady");
static_assert(offsetof(OdyUIRouter_OnGameStateReady, GameState) == 0x000000, "Member 'OdyUIRouter_OnGameStateReady::GameState' has a wrong offset!");

// Function OdyUI.OdyUIRouter.OnInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct OdyUIRouter_OnInputMethodChanged final
{
public:
	EInputMethod                                  InputMethod;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIRouter_OnInputMethodChanged) == 0x000001, "Wrong alignment on OdyUIRouter_OnInputMethodChanged");
static_assert(sizeof(OdyUIRouter_OnInputMethodChanged) == 0x000001, "Wrong size on OdyUIRouter_OnInputMethodChanged");
static_assert(offsetof(OdyUIRouter_OnInputMethodChanged, InputMethod) == 0x000000, "Member 'OdyUIRouter_OnInputMethodChanged::InputMethod' has a wrong offset!");

// Function OdyUI.OdyUIRouter.OnMenuDisplayStateChanged
// 0x0010 (0x0010 - 0x0000)
struct OdyUIRouter_OnMenuDisplayStateChanged final
{
public:
	class UOdyWidget*                             MenuWidget;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOdyWidgetDisplayState                        OldState;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOdyWidgetDisplayState                        NewState;                                          // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIRouter_OnMenuDisplayStateChanged) == 0x000008, "Wrong alignment on OdyUIRouter_OnMenuDisplayStateChanged");
static_assert(sizeof(OdyUIRouter_OnMenuDisplayStateChanged) == 0x000010, "Wrong size on OdyUIRouter_OnMenuDisplayStateChanged");
static_assert(offsetof(OdyUIRouter_OnMenuDisplayStateChanged, MenuWidget) == 0x000000, "Member 'OdyUIRouter_OnMenuDisplayStateChanged::MenuWidget' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_OnMenuDisplayStateChanged, OldState) == 0x000008, "Member 'OdyUIRouter_OnMenuDisplayStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_OnMenuDisplayStateChanged, NewState) == 0x000009, "Member 'OdyUIRouter_OnMenuDisplayStateChanged::NewState' has a wrong offset!");

// Function OdyUI.OdyUIRouter.PopInputContext
// 0x0010 (0x0010 - 0x0000)
struct OdyUIRouter_PopInputContext final
{
public:
	class UInputComponent*                        Requester;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputMappingContext*                   InputContext;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIRouter_PopInputContext) == 0x000008, "Wrong alignment on OdyUIRouter_PopInputContext");
static_assert(sizeof(OdyUIRouter_PopInputContext) == 0x000010, "Wrong size on OdyUIRouter_PopInputContext");
static_assert(offsetof(OdyUIRouter_PopInputContext, Requester) == 0x000000, "Member 'OdyUIRouter_PopInputContext::Requester' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_PopInputContext, InputContext) == 0x000008, "Member 'OdyUIRouter_PopInputContext::InputContext' has a wrong offset!");

// Function OdyUI.OdyUIRouter.PushInputContext
// 0x0018 (0x0018 - 0x0000)
struct OdyUIRouter_PushInputContext final
{
public:
	class UInputComponent*                        Requester;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputMappingContext*                   InputContext;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOdyInputContextPriority                      InputContextPriority;                              // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIRouter_PushInputContext) == 0x000008, "Wrong alignment on OdyUIRouter_PushInputContext");
static_assert(sizeof(OdyUIRouter_PushInputContext) == 0x000018, "Wrong size on OdyUIRouter_PushInputContext");
static_assert(offsetof(OdyUIRouter_PushInputContext, Requester) == 0x000000, "Member 'OdyUIRouter_PushInputContext::Requester' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_PushInputContext, InputContext) == 0x000008, "Member 'OdyUIRouter_PushInputContext::InputContext' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_PushInputContext, InputContextPriority) == 0x000010, "Member 'OdyUIRouter_PushInputContext::InputContextPriority' has a wrong offset!");

// Function OdyUI.OdyUIRouter.SetMenuNeverWantsInput
// 0x0010 (0x0010 - 0x0000)
struct OdyUIRouter_SetMenuNeverWantsInput final
{
public:
	class UOdyMenu*                               Menu;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeverWantsInput;                                  // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIRouter_SetMenuNeverWantsInput) == 0x000008, "Wrong alignment on OdyUIRouter_SetMenuNeverWantsInput");
static_assert(sizeof(OdyUIRouter_SetMenuNeverWantsInput) == 0x000010, "Wrong size on OdyUIRouter_SetMenuNeverWantsInput");
static_assert(offsetof(OdyUIRouter_SetMenuNeverWantsInput, Menu) == 0x000000, "Member 'OdyUIRouter_SetMenuNeverWantsInput::Menu' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_SetMenuNeverWantsInput, bNeverWantsInput) == 0x000008, "Member 'OdyUIRouter_SetMenuNeverWantsInput::bNeverWantsInput' has a wrong offset!");

// Function OdyUI.OdyUIRouter.SetViewTargetForMenu
// 0x0018 (0x0018 - 0x0000)
struct OdyUIRouter_SetViewTargetForMenu final
{
public:
	class UOdyMenu*                               Menu;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CameraId;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyLatestOnStack;                                // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIRouter_SetViewTargetForMenu) == 0x000008, "Wrong alignment on OdyUIRouter_SetViewTargetForMenu");
static_assert(sizeof(OdyUIRouter_SetViewTargetForMenu) == 0x000018, "Wrong size on OdyUIRouter_SetViewTargetForMenu");
static_assert(offsetof(OdyUIRouter_SetViewTargetForMenu, Menu) == 0x000000, "Member 'OdyUIRouter_SetViewTargetForMenu::Menu' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_SetViewTargetForMenu, CameraId) == 0x000008, "Member 'OdyUIRouter_SetViewTargetForMenu::CameraId' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_SetViewTargetForMenu, bOnlyLatestOnStack) == 0x000010, "Member 'OdyUIRouter_SetViewTargetForMenu::bOnlyLatestOnStack' has a wrong offset!");

// Function OdyUI.OdyUIRouter.ShowConfirmationModal
// 0x0058 (0x0058 - 0x0000)
struct OdyUIRouter_ShowConfirmationModal final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	class FText                                   Message;                                           // 0x0010(0x0010)(Parm, NativeAccessSpecifierPublic)
	class FText                                   ConfirmText;                                       // 0x0020(0x0010)(Parm, NativeAccessSpecifierPublic)
	class FText                                   CancelText;                                        // 0x0030(0x0010)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(bool bConfirmed)>              OnDismissed;                                       // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdyMenuData*                           CustomConfirmationMenuData;                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIRouter_ShowConfirmationModal) == 0x000008, "Wrong alignment on OdyUIRouter_ShowConfirmationModal");
static_assert(sizeof(OdyUIRouter_ShowConfirmationModal) == 0x000058, "Wrong size on OdyUIRouter_ShowConfirmationModal");
static_assert(offsetof(OdyUIRouter_ShowConfirmationModal, Title) == 0x000000, "Member 'OdyUIRouter_ShowConfirmationModal::Title' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_ShowConfirmationModal, Message) == 0x000010, "Member 'OdyUIRouter_ShowConfirmationModal::Message' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_ShowConfirmationModal, ConfirmText) == 0x000020, "Member 'OdyUIRouter_ShowConfirmationModal::ConfirmText' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_ShowConfirmationModal, CancelText) == 0x000030, "Member 'OdyUIRouter_ShowConfirmationModal::CancelText' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_ShowConfirmationModal, OnDismissed) == 0x000040, "Member 'OdyUIRouter_ShowConfirmationModal::OnDismissed' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_ShowConfirmationModal, CustomConfirmationMenuData) == 0x000050, "Member 'OdyUIRouter_ShowConfirmationModal::CustomConfirmationMenuData' has a wrong offset!");

// Function OdyUI.OdyUIRouter.FindAllMenus
// 0x0020 (0x0020 - 0x0000)
struct OdyUIRouter_FindAllMenus final
{
public:
	struct FGameplayTag                           MenuId;                                            // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bModal;                                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UOdyMenu*>                       ReturnValue;                                       // 0x0010(0x0010)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIRouter_FindAllMenus) == 0x000008, "Wrong alignment on OdyUIRouter_FindAllMenus");
static_assert(sizeof(OdyUIRouter_FindAllMenus) == 0x000020, "Wrong size on OdyUIRouter_FindAllMenus");
static_assert(offsetof(OdyUIRouter_FindAllMenus, MenuId) == 0x000000, "Member 'OdyUIRouter_FindAllMenus::MenuId' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_FindAllMenus, bModal) == 0x000008, "Member 'OdyUIRouter_FindAllMenus::bModal' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_FindAllMenus, ReturnValue) == 0x000010, "Member 'OdyUIRouter_FindAllMenus::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIRouter.FindAllMenusByData
// 0x0018 (0x0018 - 0x0000)
struct OdyUIRouter_FindAllMenusByData final
{
public:
	class UOdyMenuData*                           MenuData;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UOdyMenu*>                       ReturnValue;                                       // 0x0008(0x0010)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIRouter_FindAllMenusByData) == 0x000008, "Wrong alignment on OdyUIRouter_FindAllMenusByData");
static_assert(sizeof(OdyUIRouter_FindAllMenusByData) == 0x000018, "Wrong size on OdyUIRouter_FindAllMenusByData");
static_assert(offsetof(OdyUIRouter_FindAllMenusByData, MenuData) == 0x000000, "Member 'OdyUIRouter_FindAllMenusByData::MenuData' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_FindAllMenusByData, ReturnValue) == 0x000008, "Member 'OdyUIRouter_FindAllMenusByData::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIRouter.FindMenu
// 0x0018 (0x0018 - 0x0000)
struct OdyUIRouter_FindMenu final
{
public:
	struct FGameplayTag                           MenuId;                                            // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bModal;                                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyMenu*                               ReturnValue;                                       // 0x0010(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIRouter_FindMenu) == 0x000008, "Wrong alignment on OdyUIRouter_FindMenu");
static_assert(sizeof(OdyUIRouter_FindMenu) == 0x000018, "Wrong size on OdyUIRouter_FindMenu");
static_assert(offsetof(OdyUIRouter_FindMenu, MenuId) == 0x000000, "Member 'OdyUIRouter_FindMenu::MenuId' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_FindMenu, bModal) == 0x000008, "Member 'OdyUIRouter_FindMenu::bModal' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_FindMenu, ReturnValue) == 0x000010, "Member 'OdyUIRouter_FindMenu::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIRouter.FindMenuByData
// 0x0010 (0x0010 - 0x0000)
struct OdyUIRouter_FindMenuByData final
{
public:
	class UOdyMenuData*                           MenuData;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdyMenu*                               ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIRouter_FindMenuByData) == 0x000008, "Wrong alignment on OdyUIRouter_FindMenuByData");
static_assert(sizeof(OdyUIRouter_FindMenuByData) == 0x000010, "Wrong size on OdyUIRouter_FindMenuByData");
static_assert(offsetof(OdyUIRouter_FindMenuByData, MenuData) == 0x000000, "Member 'OdyUIRouter_FindMenuByData::MenuData' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_FindMenuByData, ReturnValue) == 0x000008, "Member 'OdyUIRouter_FindMenuByData::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIRouter.GetStack
// 0x0018 (0x0018 - 0x0000)
struct OdyUIRouter_GetStack final
{
public:
	bool                                          bModal;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UOdyMenu*>                       ReturnValue;                                       // 0x0008(0x0010)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIRouter_GetStack) == 0x000008, "Wrong alignment on OdyUIRouter_GetStack");
static_assert(sizeof(OdyUIRouter_GetStack) == 0x000018, "Wrong size on OdyUIRouter_GetStack");
static_assert(offsetof(OdyUIRouter_GetStack, bModal) == 0x000000, "Member 'OdyUIRouter_GetStack::bModal' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_GetStack, ReturnValue) == 0x000008, "Member 'OdyUIRouter_GetStack::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIRouter.GetTopMenu
// 0x0010 (0x0010 - 0x0000)
struct OdyUIRouter_GetTopMenu final
{
public:
	int32                                         SearchOptions;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyMenu*                               ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIRouter_GetTopMenu) == 0x000008, "Wrong alignment on OdyUIRouter_GetTopMenu");
static_assert(sizeof(OdyUIRouter_GetTopMenu) == 0x000010, "Wrong size on OdyUIRouter_GetTopMenu");
static_assert(offsetof(OdyUIRouter_GetTopMenu, SearchOptions) == 0x000000, "Member 'OdyUIRouter_GetTopMenu::SearchOptions' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_GetTopMenu, ReturnValue) == 0x000008, "Member 'OdyUIRouter_GetTopMenu::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIRouter.GetTopOfStack
// 0x0010 (0x0010 - 0x0000)
struct OdyUIRouter_GetTopOfStack final
{
public:
	bool                                          bModal;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyMenu*                               ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIRouter_GetTopOfStack) == 0x000008, "Wrong alignment on OdyUIRouter_GetTopOfStack");
static_assert(sizeof(OdyUIRouter_GetTopOfStack) == 0x000010, "Wrong size on OdyUIRouter_GetTopOfStack");
static_assert(offsetof(OdyUIRouter_GetTopOfStack, bModal) == 0x000000, "Member 'OdyUIRouter_GetTopOfStack::bModal' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_GetTopOfStack, ReturnValue) == 0x000008, "Member 'OdyUIRouter_GetTopOfStack::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIRouter.IndexOfOnStack
// 0x0010 (0x0010 - 0x0000)
struct OdyUIRouter_IndexOfOnStack final
{
public:
	class UOdyMenu*                               Menu;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSearchFromEnd;                                    // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIRouter_IndexOfOnStack) == 0x000008, "Wrong alignment on OdyUIRouter_IndexOfOnStack");
static_assert(sizeof(OdyUIRouter_IndexOfOnStack) == 0x000010, "Wrong size on OdyUIRouter_IndexOfOnStack");
static_assert(offsetof(OdyUIRouter_IndexOfOnStack, Menu) == 0x000000, "Member 'OdyUIRouter_IndexOfOnStack::Menu' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_IndexOfOnStack, bSearchFromEnd) == 0x000008, "Member 'OdyUIRouter_IndexOfOnStack::bSearchFromEnd' has a wrong offset!");
static_assert(offsetof(OdyUIRouter_IndexOfOnStack, ReturnValue) == 0x00000C, "Member 'OdyUIRouter_IndexOfOnStack::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIStatics.CenterCursor
// 0x0008 (0x0008 - 0x0000)
struct OdyUIStatics_CenterCursor final
{
public:
	class UObject*                                WorldContext;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIStatics_CenterCursor) == 0x000008, "Wrong alignment on OdyUIStatics_CenterCursor");
static_assert(sizeof(OdyUIStatics_CenterCursor) == 0x000008, "Wrong size on OdyUIStatics_CenterCursor");
static_assert(offsetof(OdyUIStatics_CenterCursor, WorldContext) == 0x000000, "Member 'OdyUIStatics_CenterCursor::WorldContext' has a wrong offset!");

// Function OdyUI.OdyUIStatics.CreateUIData
// 0x0028 (0x0028 - 0x0000)
struct OdyUIStatics_CreateUIData final
{
public:
	class UObject*                                Outer_0;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOdyUIData>                 UIDataType;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       InitParams;                                        // 0x0010(0x0010)(Parm, NativeAccessSpecifierPublic)
	class UOdyUIData*                             ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIStatics_CreateUIData) == 0x000008, "Wrong alignment on OdyUIStatics_CreateUIData");
static_assert(sizeof(OdyUIStatics_CreateUIData) == 0x000028, "Wrong size on OdyUIStatics_CreateUIData");
static_assert(offsetof(OdyUIStatics_CreateUIData, Outer_0) == 0x000000, "Member 'OdyUIStatics_CreateUIData::Outer_0' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_CreateUIData, UIDataType) == 0x000008, "Member 'OdyUIStatics_CreateUIData::UIDataType' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_CreateUIData, InitParams) == 0x000010, "Member 'OdyUIStatics_CreateUIData::InitParams' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_CreateUIData, ReturnValue) == 0x000020, "Member 'OdyUIStatics_CreateUIData::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIStatics.DateTime_ToFormattedString
// 0x0028 (0x0028 - 0x0000)
struct OdyUIStatics_DateTime_ToFormattedString final
{
public:
	struct FDateTime                              DateTime;                                          // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 String;                                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Format;                                            // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIStatics_DateTime_ToFormattedString) == 0x000008, "Wrong alignment on OdyUIStatics_DateTime_ToFormattedString");
static_assert(sizeof(OdyUIStatics_DateTime_ToFormattedString) == 0x000028, "Wrong size on OdyUIStatics_DateTime_ToFormattedString");
static_assert(offsetof(OdyUIStatics_DateTime_ToFormattedString, DateTime) == 0x000000, "Member 'OdyUIStatics_DateTime_ToFormattedString::DateTime' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_DateTime_ToFormattedString, String) == 0x000008, "Member 'OdyUIStatics_DateTime_ToFormattedString::String' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_DateTime_ToFormattedString, Format) == 0x000018, "Member 'OdyUIStatics_DateTime_ToFormattedString::Format' has a wrong offset!");

// Function OdyUI.OdyUIStatics.FindOuterMenu
// 0x0010 (0x0010 - 0x0000)
struct OdyUIStatics_FindOuterMenu final
{
public:
	const class UWidget*                          Widget;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdyMenu*                               ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIStatics_FindOuterMenu) == 0x000008, "Wrong alignment on OdyUIStatics_FindOuterMenu");
static_assert(sizeof(OdyUIStatics_FindOuterMenu) == 0x000010, "Wrong size on OdyUIStatics_FindOuterMenu");
static_assert(offsetof(OdyUIStatics_FindOuterMenu, Widget) == 0x000000, "Member 'OdyUIStatics_FindOuterMenu::Widget' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_FindOuterMenu, ReturnValue) == 0x000008, "Member 'OdyUIStatics_FindOuterMenu::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIStatics.GetCursorLocalPlayer
// 0x0010 (0x0010 - 0x0000)
struct OdyUIStatics_GetCursorLocalPlayer final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULocalPlayer*                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIStatics_GetCursorLocalPlayer) == 0x000008, "Wrong alignment on OdyUIStatics_GetCursorLocalPlayer");
static_assert(sizeof(OdyUIStatics_GetCursorLocalPlayer) == 0x000010, "Wrong size on OdyUIStatics_GetCursorLocalPlayer");
static_assert(offsetof(OdyUIStatics_GetCursorLocalPlayer, WorldContextObject) == 0x000000, "Member 'OdyUIStatics_GetCursorLocalPlayer::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_GetCursorLocalPlayer, ReturnValue) == 0x000008, "Member 'OdyUIStatics_GetCursorLocalPlayer::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIStatics.GetEntryWidgetFromListViewItem
// 0x0018 (0x0018 - 0x0000)
struct OdyUIStatics_GetEntryWidgetFromListViewItem final
{
public:
	class UListView*                              ListView;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Item;                                              // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            ReturnValue;                                       // 0x0010(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIStatics_GetEntryWidgetFromListViewItem) == 0x000008, "Wrong alignment on OdyUIStatics_GetEntryWidgetFromListViewItem");
static_assert(sizeof(OdyUIStatics_GetEntryWidgetFromListViewItem) == 0x000018, "Wrong size on OdyUIStatics_GetEntryWidgetFromListViewItem");
static_assert(offsetof(OdyUIStatics_GetEntryWidgetFromListViewItem, ListView) == 0x000000, "Member 'OdyUIStatics_GetEntryWidgetFromListViewItem::ListView' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_GetEntryWidgetFromListViewItem, Item) == 0x000008, "Member 'OdyUIStatics_GetEntryWidgetFromListViewItem::Item' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_GetEntryWidgetFromListViewItem, ReturnValue) == 0x000010, "Member 'OdyUIStatics_GetEntryWidgetFromListViewItem::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIStatics.Integer_ToTextPadded
// 0x0028 (0x0028 - 0x0000)
struct OdyUIStatics_Integer_ToTextPadded final
{
public:
	class FText                                   OutText;                                           // 0x0000(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	int32                                         Integer;                                           // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Width;                                             // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Padding;                                           // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIStatics_Integer_ToTextPadded) == 0x000008, "Wrong alignment on OdyUIStatics_Integer_ToTextPadded");
static_assert(sizeof(OdyUIStatics_Integer_ToTextPadded) == 0x000028, "Wrong size on OdyUIStatics_Integer_ToTextPadded");
static_assert(offsetof(OdyUIStatics_Integer_ToTextPadded, OutText) == 0x000000, "Member 'OdyUIStatics_Integer_ToTextPadded::OutText' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_Integer_ToTextPadded, Integer) == 0x000010, "Member 'OdyUIStatics_Integer_ToTextPadded::Integer' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_Integer_ToTextPadded, Width) == 0x000014, "Member 'OdyUIStatics_Integer_ToTextPadded::Width' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_Integer_ToTextPadded, Padding) == 0x000018, "Member 'OdyUIStatics_Integer_ToTextPadded::Padding' has a wrong offset!");

// Function OdyUI.OdyUIStatics.IsConstructed
// 0x0010 (0x0010 - 0x0000)
struct OdyUIStatics_IsConstructed final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIStatics_IsConstructed) == 0x000008, "Wrong alignment on OdyUIStatics_IsConstructed");
static_assert(sizeof(OdyUIStatics_IsConstructed) == 0x000010, "Wrong size on OdyUIStatics_IsConstructed");
static_assert(offsetof(OdyUIStatics_IsConstructed, Widget) == 0x000000, "Member 'OdyUIStatics_IsConstructed::Widget' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_IsConstructed, ReturnValue) == 0x000008, "Member 'OdyUIStatics_IsConstructed::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIStatics.MakeTimespan
// 0x0018 (0x0018 - 0x0000)
struct OdyUIStatics_MakeTimespan final
{
public:
	struct FDateTime                              A;                                                 // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              B;                                                 // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimespan                              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIStatics_MakeTimespan) == 0x000008, "Wrong alignment on OdyUIStatics_MakeTimespan");
static_assert(sizeof(OdyUIStatics_MakeTimespan) == 0x000018, "Wrong size on OdyUIStatics_MakeTimespan");
static_assert(offsetof(OdyUIStatics_MakeTimespan, A) == 0x000000, "Member 'OdyUIStatics_MakeTimespan::A' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_MakeTimespan, B) == 0x000008, "Member 'OdyUIStatics_MakeTimespan::B' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_MakeTimespan, ReturnValue) == 0x000010, "Member 'OdyUIStatics_MakeTimespan::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUIStatics.SetCheckboxBorderBackgroundColor
// 0x0018 (0x0018 - 0x0000)
struct OdyUIStatics_SetCheckboxBorderBackgroundColor final
{
public:
	class UCheckBox*                              CheckBox;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIStatics_SetCheckboxBorderBackgroundColor) == 0x000008, "Wrong alignment on OdyUIStatics_SetCheckboxBorderBackgroundColor");
static_assert(sizeof(OdyUIStatics_SetCheckboxBorderBackgroundColor) == 0x000018, "Wrong size on OdyUIStatics_SetCheckboxBorderBackgroundColor");
static_assert(offsetof(OdyUIStatics_SetCheckboxBorderBackgroundColor, CheckBox) == 0x000000, "Member 'OdyUIStatics_SetCheckboxBorderBackgroundColor::CheckBox' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_SetCheckboxBorderBackgroundColor, Color) == 0x000008, "Member 'OdyUIStatics_SetCheckboxBorderBackgroundColor::Color' has a wrong offset!");

// Function OdyUI.OdyUIStatics.SetClearKeyboardFocusOnCommit
// 0x0010 (0x0010 - 0x0000)
struct OdyUIStatics_SetClearKeyboardFocusOnCommit final
{
public:
	class UEditableTextBox*                       TextBox;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bClearKeyboardFocusOnCommit;                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIStatics_SetClearKeyboardFocusOnCommit) == 0x000008, "Wrong alignment on OdyUIStatics_SetClearKeyboardFocusOnCommit");
static_assert(sizeof(OdyUIStatics_SetClearKeyboardFocusOnCommit) == 0x000010, "Wrong size on OdyUIStatics_SetClearKeyboardFocusOnCommit");
static_assert(offsetof(OdyUIStatics_SetClearKeyboardFocusOnCommit, TextBox) == 0x000000, "Member 'OdyUIStatics_SetClearKeyboardFocusOnCommit::TextBox' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_SetClearKeyboardFocusOnCommit, bClearKeyboardFocusOnCommit) == 0x000008, "Member 'OdyUIStatics_SetClearKeyboardFocusOnCommit::bClearKeyboardFocusOnCommit' has a wrong offset!");

// Function OdyUI.OdyUIStatics.SetDefaultFontSize
// 0x0010 (0x0010 - 0x0000)
struct OdyUIStatics_SetDefaultFontSize final
{
public:
	class URichTextBlock*                         RichTextBlock;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FontSize;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIStatics_SetDefaultFontSize) == 0x000008, "Wrong alignment on OdyUIStatics_SetDefaultFontSize");
static_assert(sizeof(OdyUIStatics_SetDefaultFontSize) == 0x000010, "Wrong size on OdyUIStatics_SetDefaultFontSize");
static_assert(offsetof(OdyUIStatics_SetDefaultFontSize, RichTextBlock) == 0x000000, "Member 'OdyUIStatics_SetDefaultFontSize::RichTextBlock' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_SetDefaultFontSize, FontSize) == 0x000008, "Member 'OdyUIStatics_SetDefaultFontSize::FontSize' has a wrong offset!");

// Function OdyUI.OdyUIStatics.SetFlowDirectionPreference
// 0x0010 (0x0010 - 0x0000)
struct OdyUIStatics_SetFlowDirectionPreference final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFlowDirectionPreference                      FlowDirection;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIStatics_SetFlowDirectionPreference) == 0x000008, "Wrong alignment on OdyUIStatics_SetFlowDirectionPreference");
static_assert(sizeof(OdyUIStatics_SetFlowDirectionPreference) == 0x000010, "Wrong size on OdyUIStatics_SetFlowDirectionPreference");
static_assert(offsetof(OdyUIStatics_SetFlowDirectionPreference, Widget) == 0x000000, "Member 'OdyUIStatics_SetFlowDirectionPreference::Widget' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_SetFlowDirectionPreference, FlowDirection) == 0x000008, "Member 'OdyUIStatics_SetFlowDirectionPreference::FlowDirection' has a wrong offset!");

// Function OdyUI.OdyUIStatics.SetFontOutlineColor
// 0x0018 (0x0018 - 0x0000)
struct OdyUIStatics_SetFontOutlineColor final
{
public:
	class UTextBlock*                             TextBlock;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIStatics_SetFontOutlineColor) == 0x000008, "Wrong alignment on OdyUIStatics_SetFontOutlineColor");
static_assert(sizeof(OdyUIStatics_SetFontOutlineColor) == 0x000018, "Wrong size on OdyUIStatics_SetFontOutlineColor");
static_assert(offsetof(OdyUIStatics_SetFontOutlineColor, TextBlock) == 0x000000, "Member 'OdyUIStatics_SetFontOutlineColor::TextBlock' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_SetFontOutlineColor, Color) == 0x000008, "Member 'OdyUIStatics_SetFontOutlineColor::Color' has a wrong offset!");

// Function OdyUI.OdyUIStatics.SetFontSize
// 0x0010 (0x0010 - 0x0000)
struct OdyUIStatics_SetFontSize final
{
public:
	class UTextBlock*                             TextBlock;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FontSize;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIStatics_SetFontSize) == 0x000008, "Wrong alignment on OdyUIStatics_SetFontSize");
static_assert(sizeof(OdyUIStatics_SetFontSize) == 0x000010, "Wrong size on OdyUIStatics_SetFontSize");
static_assert(offsetof(OdyUIStatics_SetFontSize, TextBlock) == 0x000000, "Member 'OdyUIStatics_SetFontSize::TextBlock' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_SetFontSize, FontSize) == 0x000008, "Member 'OdyUIStatics_SetFontSize::FontSize' has a wrong offset!");

// Function OdyUI.OdyUIStatics.SetImageCornerRadius
// 0x0030 (0x0030 - 0x0000)
struct OdyUIStatics_SetImageCornerRadius final
{
public:
	class UImage*                                 Image;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CornerRadius;                                      // 0x0010(0x0020)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUIStatics_SetImageCornerRadius) == 0x000010, "Wrong alignment on OdyUIStatics_SetImageCornerRadius");
static_assert(sizeof(OdyUIStatics_SetImageCornerRadius) == 0x000030, "Wrong size on OdyUIStatics_SetImageCornerRadius");
static_assert(offsetof(OdyUIStatics_SetImageCornerRadius, Image) == 0x000000, "Member 'OdyUIStatics_SetImageCornerRadius::Image' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_SetImageCornerRadius, CornerRadius) == 0x000010, "Member 'OdyUIStatics_SetImageCornerRadius::CornerRadius' has a wrong offset!");

// Function OdyUI.OdyUIStatics.SetJustification
// 0x0010 (0x0010 - 0x0000)
struct OdyUIStatics_SetJustification final
{
public:
	class UTextBlock*                             TextBlock;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextJustify                                  Justify;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIStatics_SetJustification) == 0x000008, "Wrong alignment on OdyUIStatics_SetJustification");
static_assert(sizeof(OdyUIStatics_SetJustification) == 0x000010, "Wrong size on OdyUIStatics_SetJustification");
static_assert(offsetof(OdyUIStatics_SetJustification, TextBlock) == 0x000000, "Member 'OdyUIStatics_SetJustification::TextBlock' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_SetJustification, Justify) == 0x000008, "Member 'OdyUIStatics_SetJustification::Justify' has a wrong offset!");

// Function OdyUI.OdyUIStatics.SetRichTextJustification
// 0x0010 (0x0010 - 0x0000)
struct OdyUIStatics_SetRichTextJustification final
{
public:
	class URichTextBlock*                         RichTextBlock;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextJustify                                  Justify;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIStatics_SetRichTextJustification) == 0x000008, "Wrong alignment on OdyUIStatics_SetRichTextJustification");
static_assert(sizeof(OdyUIStatics_SetRichTextJustification) == 0x000010, "Wrong size on OdyUIStatics_SetRichTextJustification");
static_assert(offsetof(OdyUIStatics_SetRichTextJustification, RichTextBlock) == 0x000000, "Member 'OdyUIStatics_SetRichTextJustification::RichTextBlock' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_SetRichTextJustification, Justify) == 0x000008, "Member 'OdyUIStatics_SetRichTextJustification::Justify' has a wrong offset!");

// Function OdyUI.OdyUIStatics.UpdateOdyPlatformInputData
// 0x000C (0x000C - 0x0000)
struct OdyUIStatics_UpdateOdyPlatformInputData final
{
public:
	struct FGameplayTag                           ContextTag;                                        // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInEnable;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUIStatics_UpdateOdyPlatformInputData) == 0x000004, "Wrong alignment on OdyUIStatics_UpdateOdyPlatformInputData");
static_assert(sizeof(OdyUIStatics_UpdateOdyPlatformInputData) == 0x00000C, "Wrong size on OdyUIStatics_UpdateOdyPlatformInputData");
static_assert(offsetof(OdyUIStatics_UpdateOdyPlatformInputData, ContextTag) == 0x000000, "Member 'OdyUIStatics_UpdateOdyPlatformInputData::ContextTag' has a wrong offset!");
static_assert(offsetof(OdyUIStatics_UpdateOdyPlatformInputData, bInEnable) == 0x000008, "Member 'OdyUIStatics_UpdateOdyPlatformInputData::bInEnable' has a wrong offset!");

// Function OdyUI.OdyUISubsystemBase.GetUISubsystemBase
// 0x0010 (0x0010 - 0x0000)
struct OdyUISubsystemBase_GetUISubsystemBase final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdyUISubsystemBase*                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUISubsystemBase_GetUISubsystemBase) == 0x000008, "Wrong alignment on OdyUISubsystemBase_GetUISubsystemBase");
static_assert(sizeof(OdyUISubsystemBase_GetUISubsystemBase) == 0x000010, "Wrong size on OdyUISubsystemBase_GetUISubsystemBase");
static_assert(offsetof(OdyUISubsystemBase_GetUISubsystemBase, WorldContextObject) == 0x000000, "Member 'OdyUISubsystemBase_GetUISubsystemBase::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdyUISubsystemBase_GetUISubsystemBase, ReturnValue) == 0x000008, "Member 'OdyUISubsystemBase_GetUISubsystemBase::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUISubsystemBase.SetAnalogCursorGamepadVirtualAccept
// 0x0001 (0x0001 - 0x0000)
struct OdyUISubsystemBase_SetAnalogCursorGamepadVirtualAccept final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUISubsystemBase_SetAnalogCursorGamepadVirtualAccept) == 0x000001, "Wrong alignment on OdyUISubsystemBase_SetAnalogCursorGamepadVirtualAccept");
static_assert(sizeof(OdyUISubsystemBase_SetAnalogCursorGamepadVirtualAccept) == 0x000001, "Wrong size on OdyUISubsystemBase_SetAnalogCursorGamepadVirtualAccept");
static_assert(offsetof(OdyUISubsystemBase_SetAnalogCursorGamepadVirtualAccept, bEnabled) == 0x000000, "Member 'OdyUISubsystemBase_SetAnalogCursorGamepadVirtualAccept::bEnabled' has a wrong offset!");

// Function OdyUI.OdyUISubsystemBase.GetCursorMode
// 0x0001 (0x0001 - 0x0000)
struct OdyUISubsystemBase_GetCursorMode final
{
public:
	EOdyAnalogCursorMode                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUISubsystemBase_GetCursorMode) == 0x000001, "Wrong alignment on OdyUISubsystemBase_GetCursorMode");
static_assert(sizeof(OdyUISubsystemBase_GetCursorMode) == 0x000001, "Wrong size on OdyUISubsystemBase_GetCursorMode");
static_assert(offsetof(OdyUISubsystemBase_GetCursorMode, ReturnValue) == 0x000000, "Member 'OdyUISubsystemBase_GetCursorMode::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUISubsystemBase.GetInputDeviceTag
// 0x0008 (0x0008 - 0x0000)
struct OdyUISubsystemBase_GetInputDeviceTag final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUISubsystemBase_GetInputDeviceTag) == 0x000004, "Wrong alignment on OdyUISubsystemBase_GetInputDeviceTag");
static_assert(sizeof(OdyUISubsystemBase_GetInputDeviceTag) == 0x000008, "Wrong size on OdyUISubsystemBase_GetInputDeviceTag");
static_assert(offsetof(OdyUISubsystemBase_GetInputDeviceTag, ReturnValue) == 0x000000, "Member 'OdyUISubsystemBase_GetInputDeviceTag::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUISubsystemBase.GetInputMethod
// 0x0001 (0x0001 - 0x0000)
struct OdyUISubsystemBase_GetInputMethod final
{
public:
	EInputMethod                                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUISubsystemBase_GetInputMethod) == 0x000001, "Wrong alignment on OdyUISubsystemBase_GetInputMethod");
static_assert(sizeof(OdyUISubsystemBase_GetInputMethod) == 0x000001, "Wrong size on OdyUISubsystemBase_GetInputMethod");
static_assert(offsetof(OdyUISubsystemBase_GetInputMethod, ReturnValue) == 0x000000, "Member 'OdyUISubsystemBase_GetInputMethod::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUISubsystemBase.GetSubInputMethod
// 0x0001 (0x0001 - 0x0000)
struct OdyUISubsystemBase_GetSubInputMethod final
{
public:
	ESubInputMethod                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUISubsystemBase_GetSubInputMethod) == 0x000001, "Wrong alignment on OdyUISubsystemBase_GetSubInputMethod");
static_assert(sizeof(OdyUISubsystemBase_GetSubInputMethod) == 0x000001, "Wrong size on OdyUISubsystemBase_GetSubInputMethod");
static_assert(offsetof(OdyUISubsystemBase_GetSubInputMethod, ReturnValue) == 0x000000, "Member 'OdyUISubsystemBase_GetSubInputMethod::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUITextBindingFunctionLibrary.TextBinding_AddDelegate
// 0x0040 (0x0040 - 0x0000)
struct OdyUITextBindingFunctionLibrary_TextBinding_AddDelegate final
{
public:
	struct FOdyUITextBinding                      TextBinding;                                       // 0x0000(0x0028)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(class FText OldValue, class FText NewValue)> Delegate;                                          // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExecuteNow;                                       // 0x0038(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUITextBindingFunctionLibrary_TextBinding_AddDelegate) == 0x000008, "Wrong alignment on OdyUITextBindingFunctionLibrary_TextBinding_AddDelegate");
static_assert(sizeof(OdyUITextBindingFunctionLibrary_TextBinding_AddDelegate) == 0x000040, "Wrong size on OdyUITextBindingFunctionLibrary_TextBinding_AddDelegate");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_AddDelegate, TextBinding) == 0x000000, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_AddDelegate::TextBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_AddDelegate, Delegate) == 0x000028, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_AddDelegate::Delegate' has a wrong offset!");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_AddDelegate, bExecuteNow) == 0x000038, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_AddDelegate::bExecuteNow' has a wrong offset!");

// Function OdyUI.OdyUITextBindingFunctionLibrary.TextBinding_BindRichTextBlockText
// 0x0030 (0x0030 - 0x0000)
struct OdyUITextBindingFunctionLibrary_TextBinding_BindRichTextBlockText final
{
public:
	struct FOdyUITextBinding                      TextBinding;                                       // 0x0000(0x0028)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class URichTextBlock*                         RichTextBlock;                                     // 0x0028(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextBindingFunctionLibrary_TextBinding_BindRichTextBlockText) == 0x000008, "Wrong alignment on OdyUITextBindingFunctionLibrary_TextBinding_BindRichTextBlockText");
static_assert(sizeof(OdyUITextBindingFunctionLibrary_TextBinding_BindRichTextBlockText) == 0x000030, "Wrong size on OdyUITextBindingFunctionLibrary_TextBinding_BindRichTextBlockText");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_BindRichTextBlockText, TextBinding) == 0x000000, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_BindRichTextBlockText::TextBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_BindRichTextBlockText, RichTextBlock) == 0x000028, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_BindRichTextBlockText::RichTextBlock' has a wrong offset!");

// Function OdyUI.OdyUITextBindingFunctionLibrary.TextBinding_BindRichTextBlockTextToFormat
// 0x0040 (0x0040 - 0x0000)
struct OdyUITextBindingFunctionLibrary_TextBinding_BindRichTextBlockTextToFormat final
{
public:
	struct FOdyUITextBinding                      TextBinding;                                       // 0x0000(0x0028)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class URichTextBlock*                         RichTextBlock;                                     // 0x0028(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   FormatText;                                        // 0x0030(0x0010)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextBindingFunctionLibrary_TextBinding_BindRichTextBlockTextToFormat) == 0x000008, "Wrong alignment on OdyUITextBindingFunctionLibrary_TextBinding_BindRichTextBlockTextToFormat");
static_assert(sizeof(OdyUITextBindingFunctionLibrary_TextBinding_BindRichTextBlockTextToFormat) == 0x000040, "Wrong size on OdyUITextBindingFunctionLibrary_TextBinding_BindRichTextBlockTextToFormat");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_BindRichTextBlockTextToFormat, TextBinding) == 0x000000, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_BindRichTextBlockTextToFormat::TextBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_BindRichTextBlockTextToFormat, RichTextBlock) == 0x000028, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_BindRichTextBlockTextToFormat::RichTextBlock' has a wrong offset!");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_BindRichTextBlockTextToFormat, FormatText) == 0x000030, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_BindRichTextBlockTextToFormat::FormatText' has a wrong offset!");

// Function OdyUI.OdyUITextBindingFunctionLibrary.TextBinding_BindTextBlockText
// 0x0030 (0x0030 - 0x0000)
struct OdyUITextBindingFunctionLibrary_TextBinding_BindTextBlockText final
{
public:
	struct FOdyUITextBinding                      TextBinding;                                       // 0x0000(0x0028)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UTextBlock*                             TextBlock;                                         // 0x0028(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextBindingFunctionLibrary_TextBinding_BindTextBlockText) == 0x000008, "Wrong alignment on OdyUITextBindingFunctionLibrary_TextBinding_BindTextBlockText");
static_assert(sizeof(OdyUITextBindingFunctionLibrary_TextBinding_BindTextBlockText) == 0x000030, "Wrong size on OdyUITextBindingFunctionLibrary_TextBinding_BindTextBlockText");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_BindTextBlockText, TextBinding) == 0x000000, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_BindTextBlockText::TextBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_BindTextBlockText, TextBlock) == 0x000028, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_BindTextBlockText::TextBlock' has a wrong offset!");

// Function OdyUI.OdyUITextBindingFunctionLibrary.TextBinding_BindTextBlockTextToFormat
// 0x0040 (0x0040 - 0x0000)
struct OdyUITextBindingFunctionLibrary_TextBinding_BindTextBlockTextToFormat final
{
public:
	struct FOdyUITextBinding                      TextBinding;                                       // 0x0000(0x0028)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UTextBlock*                             TextBlock;                                         // 0x0028(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   FormatText;                                        // 0x0030(0x0010)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextBindingFunctionLibrary_TextBinding_BindTextBlockTextToFormat) == 0x000008, "Wrong alignment on OdyUITextBindingFunctionLibrary_TextBinding_BindTextBlockTextToFormat");
static_assert(sizeof(OdyUITextBindingFunctionLibrary_TextBinding_BindTextBlockTextToFormat) == 0x000040, "Wrong size on OdyUITextBindingFunctionLibrary_TextBinding_BindTextBlockTextToFormat");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_BindTextBlockTextToFormat, TextBinding) == 0x000000, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_BindTextBlockTextToFormat::TextBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_BindTextBlockTextToFormat, TextBlock) == 0x000028, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_BindTextBlockTextToFormat::TextBlock' has a wrong offset!");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_BindTextBlockTextToFormat, FormatText) == 0x000030, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_BindTextBlockTextToFormat::FormatText' has a wrong offset!");

// Function OdyUI.OdyUITextBindingFunctionLibrary.TextBinding_GetValue
// 0x0038 (0x0038 - 0x0000)
struct OdyUITextBindingFunctionLibrary_TextBinding_GetValue final
{
public:
	struct FOdyUITextBinding                      TextBinding;                                       // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0028(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextBindingFunctionLibrary_TextBinding_GetValue) == 0x000008, "Wrong alignment on OdyUITextBindingFunctionLibrary_TextBinding_GetValue");
static_assert(sizeof(OdyUITextBindingFunctionLibrary_TextBinding_GetValue) == 0x000038, "Wrong size on OdyUITextBindingFunctionLibrary_TextBinding_GetValue");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_GetValue, TextBinding) == 0x000000, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_GetValue::TextBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_GetValue, ReturnValue) == 0x000028, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_GetValue::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUITextBindingFunctionLibrary.TextBinding_RemoveDelegate
// 0x0038 (0x0038 - 0x0000)
struct OdyUITextBindingFunctionLibrary_TextBinding_RemoveDelegate final
{
public:
	struct FOdyUITextBinding                      TextBinding;                                       // 0x0000(0x0028)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(class FText OldValue, class FText NewValue)> Delegate;                                          // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextBindingFunctionLibrary_TextBinding_RemoveDelegate) == 0x000008, "Wrong alignment on OdyUITextBindingFunctionLibrary_TextBinding_RemoveDelegate");
static_assert(sizeof(OdyUITextBindingFunctionLibrary_TextBinding_RemoveDelegate) == 0x000038, "Wrong size on OdyUITextBindingFunctionLibrary_TextBinding_RemoveDelegate");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_RemoveDelegate, TextBinding) == 0x000000, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_RemoveDelegate::TextBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_RemoveDelegate, Delegate) == 0x000028, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_RemoveDelegate::Delegate' has a wrong offset!");

// Function OdyUI.OdyUITextBindingFunctionLibrary.TextBinding_SetValue
// 0x0038 (0x0038 - 0x0000)
struct OdyUITextBindingFunctionLibrary_TextBinding_SetValue final
{
public:
	struct FOdyUITextBinding                      TextBinding;                                       // 0x0000(0x0028)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   Text;                                              // 0x0028(0x0010)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextBindingFunctionLibrary_TextBinding_SetValue) == 0x000008, "Wrong alignment on OdyUITextBindingFunctionLibrary_TextBinding_SetValue");
static_assert(sizeof(OdyUITextBindingFunctionLibrary_TextBinding_SetValue) == 0x000038, "Wrong size on OdyUITextBindingFunctionLibrary_TextBinding_SetValue");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_SetValue, TextBinding) == 0x000000, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_SetValue::TextBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_SetValue, Text) == 0x000028, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_SetValue::Text' has a wrong offset!");

// Function OdyUI.OdyUITextBindingFunctionLibrary.TextBinding_Unbind
// 0x0030 (0x0030 - 0x0000)
struct OdyUITextBindingFunctionLibrary_TextBinding_Unbind final
{
public:
	struct FOdyUITextBinding                      TextBinding;                                       // 0x0000(0x0028)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextBindingFunctionLibrary_TextBinding_Unbind) == 0x000008, "Wrong alignment on OdyUITextBindingFunctionLibrary_TextBinding_Unbind");
static_assert(sizeof(OdyUITextBindingFunctionLibrary_TextBinding_Unbind) == 0x000030, "Wrong size on OdyUITextBindingFunctionLibrary_TextBinding_Unbind");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_Unbind, TextBinding) == 0x000000, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_Unbind::TextBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextBindingFunctionLibrary_TextBinding_Unbind, Object) == 0x000028, "Member 'OdyUITextBindingFunctionLibrary_TextBinding_Unbind::Object' has a wrong offset!");

// Function OdyUI.OdyUITextureBindingFunctionLibrary.TextureBinding_AddDelegate
// 0x0078 (0x0078 - 0x0000)
struct OdyUITextureBindingFunctionLibrary_TextureBinding_AddDelegate final
{
public:
	struct FOdyUITextureBinding                   TextureBinding;                                    // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(class UTexture* OldValue, class UTexture* NewValue)> Delegate;                                          // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExecuteNow;                                       // 0x0070(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUITextureBindingFunctionLibrary_TextureBinding_AddDelegate) == 0x000008, "Wrong alignment on OdyUITextureBindingFunctionLibrary_TextureBinding_AddDelegate");
static_assert(sizeof(OdyUITextureBindingFunctionLibrary_TextureBinding_AddDelegate) == 0x000078, "Wrong size on OdyUITextureBindingFunctionLibrary_TextureBinding_AddDelegate");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_AddDelegate, TextureBinding) == 0x000000, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_AddDelegate::TextureBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_AddDelegate, Delegate) == 0x000060, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_AddDelegate::Delegate' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_AddDelegate, bExecuteNow) == 0x000070, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_AddDelegate::bExecuteNow' has a wrong offset!");

// Function OdyUI.OdyUITextureBindingFunctionLibrary.TextureBinding_BindImage
// 0x0070 (0x0070 - 0x0000)
struct OdyUITextureBindingFunctionLibrary_TextureBinding_BindImage final
{
public:
	struct FOdyUITextureBinding                   TextureBinding;                                    // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UImage*                                 Image;                                             // 0x0060(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMatchSize;                                        // 0x0068(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBindVisibility;                                   // 0x0069(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImage) == 0x000008, "Wrong alignment on OdyUITextureBindingFunctionLibrary_TextureBinding_BindImage");
static_assert(sizeof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImage) == 0x000070, "Wrong size on OdyUITextureBindingFunctionLibrary_TextureBinding_BindImage");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImage, TextureBinding) == 0x000000, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_BindImage::TextureBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImage, Image) == 0x000060, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_BindImage::Image' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImage, bMatchSize) == 0x000068, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_BindImage::bMatchSize' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImage, bBindVisibility) == 0x000069, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_BindImage::bBindVisibility' has a wrong offset!");

// Function OdyUI.OdyUITextureBindingFunctionLibrary.TextureBinding_BindImageMaterialTextureParam
// 0x0078 (0x0078 - 0x0000)
struct OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageMaterialTextureParam final
{
public:
	struct FOdyUITextureBinding                   TextureBinding;                                    // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UImage*                                 Image;                                             // 0x0060(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParamName;                                         // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BindAlphaParamName;                                // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageMaterialTextureParam) == 0x000008, "Wrong alignment on OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageMaterialTextureParam");
static_assert(sizeof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageMaterialTextureParam) == 0x000078, "Wrong size on OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageMaterialTextureParam");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageMaterialTextureParam, TextureBinding) == 0x000000, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageMaterialTextureParam::TextureBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageMaterialTextureParam, Image) == 0x000060, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageMaterialTextureParam::Image' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageMaterialTextureParam, ParamName) == 0x000068, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageMaterialTextureParam::ParamName' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageMaterialTextureParam, BindAlphaParamName) == 0x000070, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageMaterialTextureParam::BindAlphaParamName' has a wrong offset!");

// Function OdyUI.OdyUITextureBindingFunctionLibrary.TextureBinding_BindImageWithFallback
// 0x0078 (0x0078 - 0x0000)
struct OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallback final
{
public:
	struct FOdyUITextureBinding                   TextureBinding;                                    // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UImage*                                 Image;                                             // 0x0060(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMatchSize;                                        // 0x0068(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             FallbackTexture;                                   // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallback) == 0x000008, "Wrong alignment on OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallback");
static_assert(sizeof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallback) == 0x000078, "Wrong size on OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallback");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallback, TextureBinding) == 0x000000, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallback::TextureBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallback, Image) == 0x000060, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallback::Image' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallback, bMatchSize) == 0x000068, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallback::bMatchSize' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallback, FallbackTexture) == 0x000070, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallback::FallbackTexture' has a wrong offset!");

// Function OdyUI.OdyUITextureBindingFunctionLibrary.TextureBinding_BindImageWithFallbackBrush
// 0x0210 (0x0210 - 0x0000)
struct OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallbackBrush final
{
public:
	struct FOdyUITextureBinding                   TextureBinding;                                    // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UImage*                                 Image;                                             // 0x0060(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMatchSize;                                        // 0x0068(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            Brush;                                             // 0x0070(0x00D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSlateBrush                            FallbackBrush;                                     // 0x0140(0x00D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallbackBrush) == 0x000010, "Wrong alignment on OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallbackBrush");
static_assert(sizeof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallbackBrush) == 0x000210, "Wrong size on OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallbackBrush");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallbackBrush, TextureBinding) == 0x000000, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallbackBrush::TextureBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallbackBrush, Image) == 0x000060, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallbackBrush::Image' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallbackBrush, bMatchSize) == 0x000068, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallbackBrush::bMatchSize' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallbackBrush, Brush) == 0x000070, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallbackBrush::Brush' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallbackBrush, FallbackBrush) == 0x000140, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_BindImageWithFallbackBrush::FallbackBrush' has a wrong offset!");

// Function OdyUI.OdyUITextureBindingFunctionLibrary.TextureBinding_BindMaterialTextureParam
// 0x0070 (0x0070 - 0x0000)
struct OdyUITextureBindingFunctionLibrary_TextureBinding_BindMaterialTextureParam final
{
public:
	struct FOdyUITextureBinding                   TextureBinding;                                    // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParamName;                                         // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindMaterialTextureParam) == 0x000008, "Wrong alignment on OdyUITextureBindingFunctionLibrary_TextureBinding_BindMaterialTextureParam");
static_assert(sizeof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindMaterialTextureParam) == 0x000070, "Wrong size on OdyUITextureBindingFunctionLibrary_TextureBinding_BindMaterialTextureParam");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindMaterialTextureParam, TextureBinding) == 0x000000, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_BindMaterialTextureParam::TextureBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindMaterialTextureParam, Mid) == 0x000060, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_BindMaterialTextureParam::Mid' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_BindMaterialTextureParam, ParamName) == 0x000068, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_BindMaterialTextureParam::ParamName' has a wrong offset!");

// Function OdyUI.OdyUITextureBindingFunctionLibrary.TextureBinding_GetSoftValue
// 0x0088 (0x0088 - 0x0000)
struct OdyUITextureBindingFunctionLibrary_TextureBinding_GetSoftValue final
{
public:
	struct FOdyUITextureBinding                   TextureBinding;                                    // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture>                ReturnValue;                                       // 0x0060(0x0028)(Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextureBindingFunctionLibrary_TextureBinding_GetSoftValue) == 0x000008, "Wrong alignment on OdyUITextureBindingFunctionLibrary_TextureBinding_GetSoftValue");
static_assert(sizeof(OdyUITextureBindingFunctionLibrary_TextureBinding_GetSoftValue) == 0x000088, "Wrong size on OdyUITextureBindingFunctionLibrary_TextureBinding_GetSoftValue");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_GetSoftValue, TextureBinding) == 0x000000, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_GetSoftValue::TextureBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_GetSoftValue, ReturnValue) == 0x000060, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_GetSoftValue::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUITextureBindingFunctionLibrary.TextureBinding_GetTexture2DValue
// 0x0068 (0x0068 - 0x0000)
struct OdyUITextureBindingFunctionLibrary_TextureBinding_GetTexture2DValue final
{
public:
	struct FOdyUITextureBinding                   TextureBinding;                                    // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UTexture2D*                             ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextureBindingFunctionLibrary_TextureBinding_GetTexture2DValue) == 0x000008, "Wrong alignment on OdyUITextureBindingFunctionLibrary_TextureBinding_GetTexture2DValue");
static_assert(sizeof(OdyUITextureBindingFunctionLibrary_TextureBinding_GetTexture2DValue) == 0x000068, "Wrong size on OdyUITextureBindingFunctionLibrary_TextureBinding_GetTexture2DValue");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_GetTexture2DValue, TextureBinding) == 0x000000, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_GetTexture2DValue::TextureBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_GetTexture2DValue, ReturnValue) == 0x000060, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_GetTexture2DValue::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUITextureBindingFunctionLibrary.TextureBinding_GetTextureValue
// 0x0068 (0x0068 - 0x0000)
struct OdyUITextureBindingFunctionLibrary_TextureBinding_GetTextureValue final
{
public:
	struct FOdyUITextureBinding                   TextureBinding;                                    // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UTexture*                               ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextureBindingFunctionLibrary_TextureBinding_GetTextureValue) == 0x000008, "Wrong alignment on OdyUITextureBindingFunctionLibrary_TextureBinding_GetTextureValue");
static_assert(sizeof(OdyUITextureBindingFunctionLibrary_TextureBinding_GetTextureValue) == 0x000068, "Wrong size on OdyUITextureBindingFunctionLibrary_TextureBinding_GetTextureValue");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_GetTextureValue, TextureBinding) == 0x000000, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_GetTextureValue::TextureBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_GetTextureValue, ReturnValue) == 0x000060, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_GetTextureValue::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUITextureBindingFunctionLibrary.TextureBinding_GetUrlValue
// 0x0070 (0x0070 - 0x0000)
struct OdyUITextureBindingFunctionLibrary_TextureBinding_GetUrlValue final
{
public:
	struct FOdyUITextureBinding                   TextureBinding;                                    // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0060(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextureBindingFunctionLibrary_TextureBinding_GetUrlValue) == 0x000008, "Wrong alignment on OdyUITextureBindingFunctionLibrary_TextureBinding_GetUrlValue");
static_assert(sizeof(OdyUITextureBindingFunctionLibrary_TextureBinding_GetUrlValue) == 0x000070, "Wrong size on OdyUITextureBindingFunctionLibrary_TextureBinding_GetUrlValue");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_GetUrlValue, TextureBinding) == 0x000000, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_GetUrlValue::TextureBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_GetUrlValue, ReturnValue) == 0x000060, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_GetUrlValue::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUITextureBindingFunctionLibrary.TextureBinding_HasTexture
// 0x0068 (0x0068 - 0x0000)
struct OdyUITextureBindingFunctionLibrary_TextureBinding_HasTexture final
{
public:
	struct FOdyUITextureBinding                   TextureBinding;                                    // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUITextureBindingFunctionLibrary_TextureBinding_HasTexture) == 0x000008, "Wrong alignment on OdyUITextureBindingFunctionLibrary_TextureBinding_HasTexture");
static_assert(sizeof(OdyUITextureBindingFunctionLibrary_TextureBinding_HasTexture) == 0x000068, "Wrong size on OdyUITextureBindingFunctionLibrary_TextureBinding_HasTexture");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_HasTexture, TextureBinding) == 0x000000, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_HasTexture::TextureBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_HasTexture, ReturnValue) == 0x000060, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_HasTexture::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUITextureBindingFunctionLibrary.TextureBinding_RemoveDelegate
// 0x0070 (0x0070 - 0x0000)
struct OdyUITextureBindingFunctionLibrary_TextureBinding_RemoveDelegate final
{
public:
	struct FOdyUITextureBinding                   TextureBinding;                                    // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(class UTexture* OldValue, class UTexture* NewValue)> Delegate;                                          // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextureBindingFunctionLibrary_TextureBinding_RemoveDelegate) == 0x000008, "Wrong alignment on OdyUITextureBindingFunctionLibrary_TextureBinding_RemoveDelegate");
static_assert(sizeof(OdyUITextureBindingFunctionLibrary_TextureBinding_RemoveDelegate) == 0x000070, "Wrong size on OdyUITextureBindingFunctionLibrary_TextureBinding_RemoveDelegate");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_RemoveDelegate, TextureBinding) == 0x000000, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_RemoveDelegate::TextureBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_RemoveDelegate, Delegate) == 0x000060, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_RemoveDelegate::Delegate' has a wrong offset!");

// Function OdyUI.OdyUITextureBindingFunctionLibrary.TextureBinding_SetSoftValue
// 0x0088 (0x0088 - 0x0000)
struct OdyUITextureBindingFunctionLibrary_TextureBinding_SetSoftValue final
{
public:
	struct FOdyUITextureBinding                   TextureBinding;                                    // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture>                SoftTexture;                                       // 0x0060(0x0028)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextureBindingFunctionLibrary_TextureBinding_SetSoftValue) == 0x000008, "Wrong alignment on OdyUITextureBindingFunctionLibrary_TextureBinding_SetSoftValue");
static_assert(sizeof(OdyUITextureBindingFunctionLibrary_TextureBinding_SetSoftValue) == 0x000088, "Wrong size on OdyUITextureBindingFunctionLibrary_TextureBinding_SetSoftValue");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_SetSoftValue, TextureBinding) == 0x000000, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_SetSoftValue::TextureBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_SetSoftValue, SoftTexture) == 0x000060, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_SetSoftValue::SoftTexture' has a wrong offset!");

// Function OdyUI.OdyUITextureBindingFunctionLibrary.TextureBinding_SetTexture2DValue
// 0x0068 (0x0068 - 0x0000)
struct OdyUITextureBindingFunctionLibrary_TextureBinding_SetTexture2DValue final
{
public:
	struct FOdyUITextureBinding                   TextureBinding;                                    // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UTexture2D*                             Texture;                                           // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextureBindingFunctionLibrary_TextureBinding_SetTexture2DValue) == 0x000008, "Wrong alignment on OdyUITextureBindingFunctionLibrary_TextureBinding_SetTexture2DValue");
static_assert(sizeof(OdyUITextureBindingFunctionLibrary_TextureBinding_SetTexture2DValue) == 0x000068, "Wrong size on OdyUITextureBindingFunctionLibrary_TextureBinding_SetTexture2DValue");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_SetTexture2DValue, TextureBinding) == 0x000000, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_SetTexture2DValue::TextureBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_SetTexture2DValue, Texture) == 0x000060, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_SetTexture2DValue::Texture' has a wrong offset!");

// Function OdyUI.OdyUITextureBindingFunctionLibrary.TextureBinding_SetTextureValue
// 0x0068 (0x0068 - 0x0000)
struct OdyUITextureBindingFunctionLibrary_TextureBinding_SetTextureValue final
{
public:
	struct FOdyUITextureBinding                   TextureBinding;                                    // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UTexture*                               Texture;                                           // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextureBindingFunctionLibrary_TextureBinding_SetTextureValue) == 0x000008, "Wrong alignment on OdyUITextureBindingFunctionLibrary_TextureBinding_SetTextureValue");
static_assert(sizeof(OdyUITextureBindingFunctionLibrary_TextureBinding_SetTextureValue) == 0x000068, "Wrong size on OdyUITextureBindingFunctionLibrary_TextureBinding_SetTextureValue");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_SetTextureValue, TextureBinding) == 0x000000, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_SetTextureValue::TextureBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_SetTextureValue, Texture) == 0x000060, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_SetTextureValue::Texture' has a wrong offset!");

// Function OdyUI.OdyUITextureBindingFunctionLibrary.TextureBinding_SetUrlValue
// 0x0070 (0x0070 - 0x0000)
struct OdyUITextureBindingFunctionLibrary_TextureBinding_SetUrlValue final
{
public:
	struct FOdyUITextureBinding                   TextureBinding;                                    // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 URL;                                               // 0x0060(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextureBindingFunctionLibrary_TextureBinding_SetUrlValue) == 0x000008, "Wrong alignment on OdyUITextureBindingFunctionLibrary_TextureBinding_SetUrlValue");
static_assert(sizeof(OdyUITextureBindingFunctionLibrary_TextureBinding_SetUrlValue) == 0x000070, "Wrong size on OdyUITextureBindingFunctionLibrary_TextureBinding_SetUrlValue");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_SetUrlValue, TextureBinding) == 0x000000, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_SetUrlValue::TextureBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_SetUrlValue, URL) == 0x000060, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_SetUrlValue::URL' has a wrong offset!");

// Function OdyUI.OdyUITextureBindingFunctionLibrary.TextureBinding_Unbind
// 0x0068 (0x0068 - 0x0000)
struct OdyUITextureBindingFunctionLibrary_TextureBinding_Unbind final
{
public:
	struct FOdyUITextureBinding                   TextureBinding;                                    // 0x0000(0x0060)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITextureBindingFunctionLibrary_TextureBinding_Unbind) == 0x000008, "Wrong alignment on OdyUITextureBindingFunctionLibrary_TextureBinding_Unbind");
static_assert(sizeof(OdyUITextureBindingFunctionLibrary_TextureBinding_Unbind) == 0x000068, "Wrong size on OdyUITextureBindingFunctionLibrary_TextureBinding_Unbind");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_Unbind, TextureBinding) == 0x000000, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_Unbind::TextureBinding' has a wrong offset!");
static_assert(offsetof(OdyUITextureBindingFunctionLibrary_TextureBinding_Unbind, Object) == 0x000060, "Member 'OdyUITextureBindingFunctionLibrary_TextureBinding_Unbind::Object' has a wrong offset!");

// Function OdyUI.OdyUITimespanBindingFunctionLibrary.TimespanBinding_AddDelegate
// 0x0038 (0x0038 - 0x0000)
struct OdyUITimespanBindingFunctionLibrary_TimespanBinding_AddDelegate final
{
public:
	struct FOdyUITimespanBinding                  TimespanBinding;                                   // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FTimespan& OldValue, const struct FTimespan& NewValue)> Delegate;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExecuteNow;                                       // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_AddDelegate) == 0x000008, "Wrong alignment on OdyUITimespanBindingFunctionLibrary_TimespanBinding_AddDelegate");
static_assert(sizeof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_AddDelegate) == 0x000038, "Wrong size on OdyUITimespanBindingFunctionLibrary_TimespanBinding_AddDelegate");
static_assert(offsetof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_AddDelegate, TimespanBinding) == 0x000000, "Member 'OdyUITimespanBindingFunctionLibrary_TimespanBinding_AddDelegate::TimespanBinding' has a wrong offset!");
static_assert(offsetof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_AddDelegate, Delegate) == 0x000020, "Member 'OdyUITimespanBindingFunctionLibrary_TimespanBinding_AddDelegate::Delegate' has a wrong offset!");
static_assert(offsetof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_AddDelegate, bExecuteNow) == 0x000030, "Member 'OdyUITimespanBindingFunctionLibrary_TimespanBinding_AddDelegate::bExecuteNow' has a wrong offset!");

// Function OdyUI.OdyUITimespanBindingFunctionLibrary.TimespanBinding_BindRichTextBlockText
// 0x0078 (0x0078 - 0x0000)
struct OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindRichTextBlockText final
{
public:
	struct FOdyUITimespanBinding                  TimespanBinding;                                   // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class URichTextBlock*                         RichTextBlock;                                     // 0x0020(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<ETimespanBindingDisplayOption, class FText> TextFormats;                                       // 0x0028(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindRichTextBlockText) == 0x000008, "Wrong alignment on OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindRichTextBlockText");
static_assert(sizeof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindRichTextBlockText) == 0x000078, "Wrong size on OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindRichTextBlockText");
static_assert(offsetof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindRichTextBlockText, TimespanBinding) == 0x000000, "Member 'OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindRichTextBlockText::TimespanBinding' has a wrong offset!");
static_assert(offsetof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindRichTextBlockText, RichTextBlock) == 0x000020, "Member 'OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindRichTextBlockText::RichTextBlock' has a wrong offset!");
static_assert(offsetof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindRichTextBlockText, TextFormats) == 0x000028, "Member 'OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindRichTextBlockText::TextFormats' has a wrong offset!");

// Function OdyUI.OdyUITimespanBindingFunctionLibrary.TimespanBinding_BindTextBlockText
// 0x0078 (0x0078 - 0x0000)
struct OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindTextBlockText final
{
public:
	struct FOdyUITimespanBinding                  TimespanBinding;                                   // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UTextBlock*                             TextBlock;                                         // 0x0020(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<ETimespanBindingDisplayOption, class FText> TextFormats;                                       // 0x0028(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindTextBlockText) == 0x000008, "Wrong alignment on OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindTextBlockText");
static_assert(sizeof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindTextBlockText) == 0x000078, "Wrong size on OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindTextBlockText");
static_assert(offsetof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindTextBlockText, TimespanBinding) == 0x000000, "Member 'OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindTextBlockText::TimespanBinding' has a wrong offset!");
static_assert(offsetof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindTextBlockText, TextBlock) == 0x000020, "Member 'OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindTextBlockText::TextBlock' has a wrong offset!");
static_assert(offsetof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindTextBlockText, TextFormats) == 0x000028, "Member 'OdyUITimespanBindingFunctionLibrary_TimespanBinding_BindTextBlockText::TextFormats' has a wrong offset!");

// Function OdyUI.OdyUITimespanBindingFunctionLibrary.TimespanBinding_GetValue
// 0x0028 (0x0028 - 0x0000)
struct OdyUITimespanBindingFunctionLibrary_TimespanBinding_GetValue final
{
public:
	struct FOdyUITimespanBinding                  TimespanBinding;                                   // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FTimespan                              ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_GetValue) == 0x000008, "Wrong alignment on OdyUITimespanBindingFunctionLibrary_TimespanBinding_GetValue");
static_assert(sizeof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_GetValue) == 0x000028, "Wrong size on OdyUITimespanBindingFunctionLibrary_TimespanBinding_GetValue");
static_assert(offsetof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_GetValue, TimespanBinding) == 0x000000, "Member 'OdyUITimespanBindingFunctionLibrary_TimespanBinding_GetValue::TimespanBinding' has a wrong offset!");
static_assert(offsetof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_GetValue, ReturnValue) == 0x000020, "Member 'OdyUITimespanBindingFunctionLibrary_TimespanBinding_GetValue::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUITimespanBindingFunctionLibrary.TimespanBinding_IsInitialized
// 0x0028 (0x0028 - 0x0000)
struct OdyUITimespanBindingFunctionLibrary_TimespanBinding_IsInitialized final
{
public:
	struct FOdyUITimespanBinding                  TimespanBinding;                                   // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_IsInitialized) == 0x000008, "Wrong alignment on OdyUITimespanBindingFunctionLibrary_TimespanBinding_IsInitialized");
static_assert(sizeof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_IsInitialized) == 0x000028, "Wrong size on OdyUITimespanBindingFunctionLibrary_TimespanBinding_IsInitialized");
static_assert(offsetof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_IsInitialized, TimespanBinding) == 0x000000, "Member 'OdyUITimespanBindingFunctionLibrary_TimespanBinding_IsInitialized::TimespanBinding' has a wrong offset!");
static_assert(offsetof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_IsInitialized, ReturnValue) == 0x000020, "Member 'OdyUITimespanBindingFunctionLibrary_TimespanBinding_IsInitialized::ReturnValue' has a wrong offset!");

// Function OdyUI.OdyUITimespanBindingFunctionLibrary.TimespanBinding_RemoveDelegate
// 0x0030 (0x0030 - 0x0000)
struct OdyUITimespanBindingFunctionLibrary_TimespanBinding_RemoveDelegate final
{
public:
	struct FOdyUITimespanBinding                  TimespanBinding;                                   // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FTimespan& OldValue, const struct FTimespan& NewValue)> Delegate;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_RemoveDelegate) == 0x000008, "Wrong alignment on OdyUITimespanBindingFunctionLibrary_TimespanBinding_RemoveDelegate");
static_assert(sizeof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_RemoveDelegate) == 0x000030, "Wrong size on OdyUITimespanBindingFunctionLibrary_TimespanBinding_RemoveDelegate");
static_assert(offsetof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_RemoveDelegate, TimespanBinding) == 0x000000, "Member 'OdyUITimespanBindingFunctionLibrary_TimespanBinding_RemoveDelegate::TimespanBinding' has a wrong offset!");
static_assert(offsetof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_RemoveDelegate, Delegate) == 0x000020, "Member 'OdyUITimespanBindingFunctionLibrary_TimespanBinding_RemoveDelegate::Delegate' has a wrong offset!");

// Function OdyUI.OdyUITimespanBindingFunctionLibrary.TimespanBinding_SetValue
// 0x0028 (0x0028 - 0x0000)
struct OdyUITimespanBindingFunctionLibrary_TimespanBinding_SetValue final
{
public:
	struct FOdyUITimespanBinding                  TimespanBinding;                                   // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FTimespan                              Timespan;                                          // 0x0020(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_SetValue) == 0x000008, "Wrong alignment on OdyUITimespanBindingFunctionLibrary_TimespanBinding_SetValue");
static_assert(sizeof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_SetValue) == 0x000028, "Wrong size on OdyUITimespanBindingFunctionLibrary_TimespanBinding_SetValue");
static_assert(offsetof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_SetValue, TimespanBinding) == 0x000000, "Member 'OdyUITimespanBindingFunctionLibrary_TimespanBinding_SetValue::TimespanBinding' has a wrong offset!");
static_assert(offsetof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_SetValue, Timespan) == 0x000020, "Member 'OdyUITimespanBindingFunctionLibrary_TimespanBinding_SetValue::Timespan' has a wrong offset!");

// Function OdyUI.OdyUITimespanBindingFunctionLibrary.TimespanBinding_Unbind
// 0x0028 (0x0028 - 0x0000)
struct OdyUITimespanBindingFunctionLibrary_TimespanBinding_Unbind final
{
public:
	struct FOdyUITimespanBinding                  TimespanBinding;                                   // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0020(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_Unbind) == 0x000008, "Wrong alignment on OdyUITimespanBindingFunctionLibrary_TimespanBinding_Unbind");
static_assert(sizeof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_Unbind) == 0x000028, "Wrong size on OdyUITimespanBindingFunctionLibrary_TimespanBinding_Unbind");
static_assert(offsetof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_Unbind, TimespanBinding) == 0x000000, "Member 'OdyUITimespanBindingFunctionLibrary_TimespanBinding_Unbind::TimespanBinding' has a wrong offset!");
static_assert(offsetof(OdyUITimespanBindingFunctionLibrary_TimespanBinding_Unbind, Object) == 0x000020, "Member 'OdyUITimespanBindingFunctionLibrary_TimespanBinding_Unbind::Object' has a wrong offset!");

// DelegateFunction OdyUI.OdyInputKeySelector.OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct OdyInputKeySelector_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey_0;                                     // 0x0000(0x0020)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyInputKeySelector_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on OdyInputKeySelector_OnKeySelected__DelegateSignature");
static_assert(sizeof(OdyInputKeySelector_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on OdyInputKeySelector_OnKeySelected__DelegateSignature");
static_assert(offsetof(OdyInputKeySelector_OnKeySelected__DelegateSignature, SelectedKey_0) == 0x000000, "Member 'OdyInputKeySelector_OnKeySelected__DelegateSignature::SelectedKey_0' has a wrong offset!");

// Function OdyUI.OdyInputKeySelector.SetAllowGamepadKeys
// 0x0001 (0x0001 - 0x0000)
struct OdyInputKeySelector_SetAllowGamepadKeys final
{
public:
	bool                                          bInAllowGamepadKeys;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyInputKeySelector_SetAllowGamepadKeys) == 0x000001, "Wrong alignment on OdyInputKeySelector_SetAllowGamepadKeys");
static_assert(sizeof(OdyInputKeySelector_SetAllowGamepadKeys) == 0x000001, "Wrong size on OdyInputKeySelector_SetAllowGamepadKeys");
static_assert(offsetof(OdyInputKeySelector_SetAllowGamepadKeys, bInAllowGamepadKeys) == 0x000000, "Member 'OdyInputKeySelector_SetAllowGamepadKeys::bInAllowGamepadKeys' has a wrong offset!");

// Function OdyUI.OdyInputKeySelector.SetAllowModifierKeys
// 0x0001 (0x0001 - 0x0000)
struct OdyInputKeySelector_SetAllowModifierKeys final
{
public:
	bool                                          bInAllowModifierKeys;                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyInputKeySelector_SetAllowModifierKeys) == 0x000001, "Wrong alignment on OdyInputKeySelector_SetAllowModifierKeys");
static_assert(sizeof(OdyInputKeySelector_SetAllowModifierKeys) == 0x000001, "Wrong size on OdyInputKeySelector_SetAllowModifierKeys");
static_assert(offsetof(OdyInputKeySelector_SetAllowModifierKeys, bInAllowModifierKeys) == 0x000000, "Member 'OdyInputKeySelector_SetAllowModifierKeys::bInAllowModifierKeys' has a wrong offset!");

// Function OdyUI.OdyInputKeySelector.SetClearSelectedKeys
// 0x0010 (0x0010 - 0x0000)
struct OdyInputKeySelector_SetClearSelectedKeys final
{
public:
	TArray<struct FKey>                           InKeys;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyInputKeySelector_SetClearSelectedKeys) == 0x000008, "Wrong alignment on OdyInputKeySelector_SetClearSelectedKeys");
static_assert(sizeof(OdyInputKeySelector_SetClearSelectedKeys) == 0x000010, "Wrong size on OdyInputKeySelector_SetClearSelectedKeys");
static_assert(offsetof(OdyInputKeySelector_SetClearSelectedKeys, InKeys) == 0x000000, "Member 'OdyInputKeySelector_SetClearSelectedKeys::InKeys' has a wrong offset!");

// Function OdyUI.OdyInputKeySelector.SetEscapeKeys
// 0x0010 (0x0010 - 0x0000)
struct OdyInputKeySelector_SetEscapeKeys final
{
public:
	TArray<struct FKey>                           InKeys;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyInputKeySelector_SetEscapeKeys) == 0x000008, "Wrong alignment on OdyInputKeySelector_SetEscapeKeys");
static_assert(sizeof(OdyInputKeySelector_SetEscapeKeys) == 0x000010, "Wrong size on OdyInputKeySelector_SetEscapeKeys");
static_assert(offsetof(OdyInputKeySelector_SetEscapeKeys, InKeys) == 0x000000, "Member 'OdyInputKeySelector_SetEscapeKeys::InKeys' has a wrong offset!");

// Function OdyUI.OdyInputKeySelector.SetKeySelectionText
// 0x0010 (0x0010 - 0x0000)
struct OdyInputKeySelector_SetKeySelectionText final
{
public:
	class FText                                   InKeySelectionText;                                // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyInputKeySelector_SetKeySelectionText) == 0x000008, "Wrong alignment on OdyInputKeySelector_SetKeySelectionText");
static_assert(sizeof(OdyInputKeySelector_SetKeySelectionText) == 0x000010, "Wrong size on OdyInputKeySelector_SetKeySelectionText");
static_assert(offsetof(OdyInputKeySelector_SetKeySelectionText, InKeySelectionText) == 0x000000, "Member 'OdyInputKeySelector_SetKeySelectionText::InKeySelectionText' has a wrong offset!");

// Function OdyUI.OdyInputKeySelector.SetNoKeySpecifiedText
// 0x0010 (0x0010 - 0x0000)
struct OdyInputKeySelector_SetNoKeySpecifiedText final
{
public:
	class FText                                   InNoKeySpecifiedText;                              // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyInputKeySelector_SetNoKeySpecifiedText) == 0x000008, "Wrong alignment on OdyInputKeySelector_SetNoKeySpecifiedText");
static_assert(sizeof(OdyInputKeySelector_SetNoKeySpecifiedText) == 0x000010, "Wrong size on OdyInputKeySelector_SetNoKeySpecifiedText");
static_assert(offsetof(OdyInputKeySelector_SetNoKeySpecifiedText, InNoKeySpecifiedText) == 0x000000, "Member 'OdyInputKeySelector_SetNoKeySpecifiedText::InNoKeySpecifiedText' has a wrong offset!");

// Function OdyUI.OdyInputKeySelector.SetSelectedKey
// 0x0020 (0x0020 - 0x0000)
struct OdyInputKeySelector_SetSelectedKey final
{
public:
	struct FInputChord                            InSelectedKey;                                     // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyInputKeySelector_SetSelectedKey) == 0x000008, "Wrong alignment on OdyInputKeySelector_SetSelectedKey");
static_assert(sizeof(OdyInputKeySelector_SetSelectedKey) == 0x000020, "Wrong size on OdyInputKeySelector_SetSelectedKey");
static_assert(offsetof(OdyInputKeySelector_SetSelectedKey, InSelectedKey) == 0x000000, "Member 'OdyInputKeySelector_SetSelectedKey::InSelectedKey' has a wrong offset!");

// Function OdyUI.OdyInputKeySelector.SetTextBlockVisibility
// 0x0001 (0x0001 - 0x0000)
struct OdyInputKeySelector_SetTextBlockVisibility final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyInputKeySelector_SetTextBlockVisibility) == 0x000001, "Wrong alignment on OdyInputKeySelector_SetTextBlockVisibility");
static_assert(sizeof(OdyInputKeySelector_SetTextBlockVisibility) == 0x000001, "Wrong size on OdyInputKeySelector_SetTextBlockVisibility");
static_assert(offsetof(OdyInputKeySelector_SetTextBlockVisibility, InVisibility) == 0x000000, "Member 'OdyInputKeySelector_SetTextBlockVisibility::InVisibility' has a wrong offset!");

// Function OdyUI.OdyInputKeySelector.GetIsSelectingKey
// 0x0001 (0x0001 - 0x0000)
struct OdyInputKeySelector_GetIsSelectingKey final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyInputKeySelector_GetIsSelectingKey) == 0x000001, "Wrong alignment on OdyInputKeySelector_GetIsSelectingKey");
static_assert(sizeof(OdyInputKeySelector_GetIsSelectingKey) == 0x000001, "Wrong size on OdyInputKeySelector_GetIsSelectingKey");
static_assert(offsetof(OdyInputKeySelector_GetIsSelectingKey, ReturnValue) == 0x000000, "Member 'OdyInputKeySelector_GetIsSelectingKey::ReturnValue' has a wrong offset!");

}

