#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OdyMinimap

#include "Basic.hpp"

#include "OdyMinimap_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_OdyMinimap.WBP_OdyMinimap_C
// 0x0060 (0x0408 - 0x03A8)
class UWBP_OdyMinimap_C final : public UOdyMinimapWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 MapBackground;                                     // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             MiniMapTexture;                                    // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   Material_ZoomLevel_ParameterName;                  // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Material_ZoomCenterXY_ZoomScale_ParameterName;     // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ZoomSpeed;                                         // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DragStarted;                                       // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOverrideSliceLocation;                            // 0x03D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA[0x6];                                      // 0x03DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OverridenSliceLocation;                            // 0x03E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowWorldMap;                                      // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             WorldMapArt;                                       // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyZoom(const struct FVector2D& Position, struct FVector2D* NewPosition);
	void ChangeMapTexture(class UTexture2D* MinimapTex);
	void Construct();
	void ExecuteUbergraph_WBP_OdyMinimap(int32 EntryPoint);
	void HandleDrag(const struct FPointerEvent& Input, const struct FGeometry& Geometry);
	void OnActorDestroyed(class AActor* InActor);
	void OnActorSpawned(class AActor* InActor);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateMinimapZoom();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_OdyMinimap_C">();
	}
	static class UWBP_OdyMinimap_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_OdyMinimap_C>();
	}
};
static_assert(alignof(UWBP_OdyMinimap_C) == 0x000008, "Wrong alignment on UWBP_OdyMinimap_C");
static_assert(sizeof(UWBP_OdyMinimap_C) == 0x000408, "Wrong size on UWBP_OdyMinimap_C");
static_assert(offsetof(UWBP_OdyMinimap_C, UberGraphFrame) == 0x0003A8, "Member 'UWBP_OdyMinimap_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_OdyMinimap_C, MapBackground) == 0x0003B0, "Member 'UWBP_OdyMinimap_C::MapBackground' has a wrong offset!");
static_assert(offsetof(UWBP_OdyMinimap_C, MiniMapTexture) == 0x0003B8, "Member 'UWBP_OdyMinimap_C::MiniMapTexture' has a wrong offset!");
static_assert(offsetof(UWBP_OdyMinimap_C, Material_ZoomLevel_ParameterName) == 0x0003C0, "Member 'UWBP_OdyMinimap_C::Material_ZoomLevel_ParameterName' has a wrong offset!");
static_assert(offsetof(UWBP_OdyMinimap_C, Material_ZoomCenterXY_ZoomScale_ParameterName) == 0x0003C8, "Member 'UWBP_OdyMinimap_C::Material_ZoomCenterXY_ZoomScale_ParameterName' has a wrong offset!");
static_assert(offsetof(UWBP_OdyMinimap_C, ZoomSpeed) == 0x0003D0, "Member 'UWBP_OdyMinimap_C::ZoomSpeed' has a wrong offset!");
static_assert(offsetof(UWBP_OdyMinimap_C, DragStarted) == 0x0003D8, "Member 'UWBP_OdyMinimap_C::DragStarted' has a wrong offset!");
static_assert(offsetof(UWBP_OdyMinimap_C, bOverrideSliceLocation) == 0x0003D9, "Member 'UWBP_OdyMinimap_C::bOverrideSliceLocation' has a wrong offset!");
static_assert(offsetof(UWBP_OdyMinimap_C, OverridenSliceLocation) == 0x0003E0, "Member 'UWBP_OdyMinimap_C::OverridenSliceLocation' has a wrong offset!");
static_assert(offsetof(UWBP_OdyMinimap_C, ShowWorldMap) == 0x0003F8, "Member 'UWBP_OdyMinimap_C::ShowWorldMap' has a wrong offset!");
static_assert(offsetof(UWBP_OdyMinimap_C, WorldMapArt) == 0x000400, "Member 'UWBP_OdyMinimap_C::WorldMapArt' has a wrong offset!");

}

