#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_QueueIndicator

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "OdyUI_structs.hpp"


namespace SDK::Params
{

// Function WBP_QueueIndicator.WBP_QueueIndicator_C.ExecuteUbergraph_WBP_QueueIndicator
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaUIDataModelBase*                 CallFunc_GetUIDataModel_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool OldValue, bool NewValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoolBinding_GetValue_ReturnValue;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0028(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaUIDataModelBase*                 CallFunc_GetUIDataModel_ReturnValue_1;             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OldValue_1;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewValue_1;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_OldValue;                       // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue;                       // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 OldValue, int32 NewValue)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0080(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ETimespanBindingDisplayOption, class FText> K2Node_MakeMap_Map;                                // 0x0098(0x0050)(ConstParm)
};
static_assert(alignof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator) == 0x000008, "Wrong alignment on WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator");
static_assert(sizeof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator) == 0x0000E8, "Wrong size on WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, EntryPoint) == 0x000000, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, CallFunc_GetUIDataModel_ReturnValue) == 0x000008, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::CallFunc_GetUIDataModel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, Temp_bool_Variable) == 0x000020, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, CallFunc_BoolBinding_GetValue_ReturnValue) == 0x000021, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::CallFunc_BoolBinding_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, Temp_byte_Variable) == 0x000022, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, Temp_byte_Variable_1) == 0x000023, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, Temp_bool_Variable_1) == 0x000024, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, Temp_byte_Variable_2) == 0x000025, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, Temp_byte_Variable_3) == 0x000026, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, K2Node_Event_MyGeometry) == 0x000028, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, K2Node_Event_InDeltaTime) == 0x000060, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, K2Node_Select_Default) == 0x000064, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, CallFunc_GetUIDataModel_ReturnValue_1) == 0x000068, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::CallFunc_GetUIDataModel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, K2Node_CustomEvent_OldValue_1) == 0x000070, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::K2Node_CustomEvent_OldValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, K2Node_CustomEvent_NewValue_1) == 0x000074, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::K2Node_CustomEvent_NewValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, CallFunc_Conv_IntToByte_ReturnValue) == 0x000078, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, CallFunc_GetValidValue_ReturnValue) == 0x000079, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00007A, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, K2Node_CustomEvent_OldValue) == 0x00007B, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, K2Node_CustomEvent_NewValue) == 0x00007C, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, K2Node_CreateDelegate_OutputDelegate_1) == 0x000080, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, K2Node_Select_Default_1) == 0x000090, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator, K2Node_MakeMap_Map) == 0x000098, "Member 'WBP_QueueIndicator_C_ExecuteUbergraph_WBP_QueueIndicator::K2Node_MakeMap_Map' has a wrong offset!");

// Function WBP_QueueIndicator.WBP_QueueIndicator_C.OnMatchPhaseChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_QueueIndicator_C_OnMatchPhaseChanged final
{
public:
	int32                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QueueIndicator_C_OnMatchPhaseChanged) == 0x000004, "Wrong alignment on WBP_QueueIndicator_C_OnMatchPhaseChanged");
static_assert(sizeof(WBP_QueueIndicator_C_OnMatchPhaseChanged) == 0x000008, "Wrong size on WBP_QueueIndicator_C_OnMatchPhaseChanged");
static_assert(offsetof(WBP_QueueIndicator_C_OnMatchPhaseChanged, OldValue) == 0x000000, "Member 'WBP_QueueIndicator_C_OnMatchPhaseChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_OnMatchPhaseChanged, NewValue) == 0x000004, "Member 'WBP_QueueIndicator_C_OnMatchPhaseChanged::NewValue' has a wrong offset!");

// Function WBP_QueueIndicator.WBP_QueueIndicator_C.OnQueueStatusChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_QueueIndicator_C_OnQueueStatusChanged final
{
public:
	bool                                          OldValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewValue;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QueueIndicator_C_OnQueueStatusChanged) == 0x000001, "Wrong alignment on WBP_QueueIndicator_C_OnQueueStatusChanged");
static_assert(sizeof(WBP_QueueIndicator_C_OnQueueStatusChanged) == 0x000002, "Wrong size on WBP_QueueIndicator_C_OnQueueStatusChanged");
static_assert(offsetof(WBP_QueueIndicator_C_OnQueueStatusChanged, OldValue) == 0x000000, "Member 'WBP_QueueIndicator_C_OnQueueStatusChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_OnQueueStatusChanged, NewValue) == 0x000001, "Member 'WBP_QueueIndicator_C_OnQueueStatusChanged::NewValue' has a wrong offset!");

// Function WBP_QueueIndicator.WBP_QueueIndicator_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_QueueIndicator_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QueueIndicator_C_Tick) == 0x000004, "Wrong alignment on WBP_QueueIndicator_C_Tick");
static_assert(sizeof(WBP_QueueIndicator_C_Tick) == 0x00003C, "Wrong size on WBP_QueueIndicator_C_Tick");
static_assert(offsetof(WBP_QueueIndicator_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_QueueIndicator_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_QueueIndicator_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_QueueIndicator_C_Tick::InDeltaTime' has a wrong offset!");

}

