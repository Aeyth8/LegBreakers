#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HeaderForCategory

#include "Basic.hpp"

#include "WBP_HeaderForCategory_classes.hpp"
#include "WBP_HeaderForCategory_parameters.hpp"


namespace SDK
{

// Function WBP_HeaderForCategory.WBP_HeaderForCategory_C.ExecuteUbergraph_WBP_HeaderForCategory
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_HeaderForCategory_C::ExecuteUbergraph_WBP_HeaderForCategory(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HeaderForCategory_C", "ExecuteUbergraph_WBP_HeaderForCategory");

	Params::WBP_HeaderForCategory_C_ExecuteUbergraph_WBP_HeaderForCategory Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HeaderForCategory.WBP_HeaderForCategory_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_HeaderForCategory_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HeaderForCategory_C", "PreConstruct");

	Params::WBP_HeaderForCategory_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HeaderForCategory.WBP_HeaderForCategory_C.SetForm
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     ColorBG                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  BottomRotate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  BottomOffset                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LeftRotate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LeftOffset                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RightRotate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RightOffset                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TopRotate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TopOffset                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_HeaderForCategory_C::SetForm(const struct FLinearColor& ColorBG, double BottomRotate, double BottomOffset, double LeftRotate, double LeftOffset, double RightRotate, double RightOffset, double TopRotate, double TopOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HeaderForCategory_C", "SetForm");

	Params::WBP_HeaderForCategory_C_SetForm Parms{};

	Parms.ColorBG = std::move(ColorBG);
	Parms.BottomRotate = BottomRotate;
	Parms.BottomOffset = BottomOffset;
	Parms.LeftRotate = LeftRotate;
	Parms.LeftOffset = LeftOffset;
	Parms.RightRotate = RightRotate;
	Parms.RightOffset = RightOffset;
	Parms.TopRotate = TopRotate;
	Parms.TopOffset = TopOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HeaderForCategory.WBP_HeaderForCategory_C.SetVisual
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FLinearColor                     ColorText                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateFontInfo                   InFontInfo                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FMargin                          PaddingText                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FLinearColor                     ColorBG                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  BottomRotate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  BottomOffset                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LeftRotate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LeftOffset                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RightRotate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RightOffset                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TopRotate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TopOffset                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_HeaderForCategory_C::SetVisual(const class FText& Text_0, const struct FLinearColor& ColorText, const struct FSlateFontInfo& InFontInfo, const struct FMargin& PaddingText, const struct FLinearColor& ColorBG, double BottomRotate, double BottomOffset, double LeftRotate, double LeftOffset, double RightRotate, double RightOffset, double TopRotate, double TopOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HeaderForCategory_C", "SetVisual");

	Params::WBP_HeaderForCategory_C_SetVisual Parms{};

	Parms.Text_0 = std::move(Text_0);
	Parms.ColorText = std::move(ColorText);
	Parms.InFontInfo = std::move(InFontInfo);
	Parms.PaddingText = std::move(PaddingText);
	Parms.ColorBG = std::move(ColorBG);
	Parms.BottomRotate = BottomRotate;
	Parms.BottomOffset = BottomOffset;
	Parms.LeftRotate = LeftRotate;
	Parms.LeftOffset = LeftOffset;
	Parms.RightRotate = RightRotate;
	Parms.RightOffset = RightOffset;
	Parms.TopRotate = TopRotate;
	Parms.TopOffset = TopOffset;

	UObject::ProcessEvent(Func, &Parms);
}

}

