#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BUF_Hack_CrystalRose

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "BUF_Hack_Base_classes.hpp"
#include "Matcha_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BUF_Hack_CrystalRose.BUF_Hack_CrystalRose_C
// 0x0010 (0x0048 - 0x0038)
class UBUF_Hack_CrystalRose_C final : public UBUF_Hack_Base_C
{
public:
	struct FGameplayTag                           ProjectileTag;                                     // 0x0038(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         StunDurationSeconds;                               // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnPostApplyOutgoingHit(class AMatchaSnapNetCharacterEntity* BuffedCharacter, class AActor* TargetHit, class AActor* PreviousTargetHit, const struct FMatchaHitData& HitData, uint8 AppliedHitFlags, EMatchaCharacterMontageType MontageDuringHit, EObjectRarity BuffRarity) const;
	void OnSpawnedOwnedEntity(class AMatchaSnapNetCharacterEntity* BuffedCharacter, class AActor* SpawnedEntity, EObjectRarity BuffRarity) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BUF_Hack_CrystalRose_C">();
	}
	static class UBUF_Hack_CrystalRose_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBUF_Hack_CrystalRose_C>();
	}
};
static_assert(alignof(UBUF_Hack_CrystalRose_C) == 0x000008, "Wrong alignment on UBUF_Hack_CrystalRose_C");
static_assert(sizeof(UBUF_Hack_CrystalRose_C) == 0x000048, "Wrong size on UBUF_Hack_CrystalRose_C");
static_assert(offsetof(UBUF_Hack_CrystalRose_C, ProjectileTag) == 0x000038, "Member 'UBUF_Hack_CrystalRose_C::ProjectileTag' has a wrong offset!");
static_assert(offsetof(UBUF_Hack_CrystalRose_C, StunDurationSeconds) == 0x000040, "Member 'UBUF_Hack_CrystalRose_C::StunDurationSeconds' has a wrong offset!");

}

