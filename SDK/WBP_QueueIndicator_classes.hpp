#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_QueueIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OdyUI_structs.hpp"
#include "OdyUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_QueueIndicator.WBP_QueueIndicator_C
// 0x0018 (0x03B0 - 0x0398)
class UWBP_QueueIndicator_C final : public UOdyWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0398(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           InQueueContainer;                                  // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOdyTextBlock*                          TimeInQueueText;                                   // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_QueueIndicator(int32 EntryPoint);
	void OnInitialized();
	void OnMatchPhaseChanged(int32 OldValue, int32 NewValue);
	void OnQueueStatusChanged(bool OldValue, bool NewValue);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_QueueIndicator_C">();
	}
	static class UWBP_QueueIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_QueueIndicator_C>();
	}
};
static_assert(alignof(UWBP_QueueIndicator_C) == 0x000008, "Wrong alignment on UWBP_QueueIndicator_C");
static_assert(sizeof(UWBP_QueueIndicator_C) == 0x0003B0, "Wrong size on UWBP_QueueIndicator_C");
static_assert(offsetof(UWBP_QueueIndicator_C, UberGraphFrame) == 0x000398, "Member 'UWBP_QueueIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_QueueIndicator_C, InQueueContainer) == 0x0003A0, "Member 'UWBP_QueueIndicator_C::InQueueContainer' has a wrong offset!");
static_assert(offsetof(UWBP_QueueIndicator_C, TimeInQueueText) == 0x0003A8, "Member 'UWBP_QueueIndicator_C::TimeInQueueText' has a wrong offset!");

}

