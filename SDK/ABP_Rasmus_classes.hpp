#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Rasmus

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ABP_Rasmus_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Matcha_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Rasmus.ABP_Rasmus_C
// 0x0D50 (0x1570 - 0x0820)
class UABP_Rasmus_C final : public UMatchaSnapNetCharacterAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0820(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Rasmus::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0828(0x0038)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0860(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0868(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0870(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0890(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x08D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0900(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x0928(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x0970(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x09B8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x0A00(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x0A20(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x0A68(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x0A88(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0B50(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0BD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0BF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0C20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0C48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0C70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0C98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0CC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0CE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0D10(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x0D38(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x0D80(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0DA0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0DE8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0E30(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x0E78(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x0EC0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0EE0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0F28(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0F48(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0F90(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0FB0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0FF8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1040(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x1088(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x10D0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x10F0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x1138(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x1158(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1220(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x12A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x12C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x12F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1318(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1340(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1388(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x13A8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x13F0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1410(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1438(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1458(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1480(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x14A0(0x00C8)()

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_ABP_Rasmus(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Rasmus_C">();
	}
	static class UABP_Rasmus_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Rasmus_C>();
	}
};
static_assert(alignof(UABP_Rasmus_C) == 0x000010, "Wrong alignment on UABP_Rasmus_C");
static_assert(sizeof(UABP_Rasmus_C) == 0x001570, "Wrong size on UABP_Rasmus_C");
static_assert(offsetof(UABP_Rasmus_C, UberGraphFrame) == 0x000820, "Member 'UABP_Rasmus_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, __AnimBlueprintMutables) == 0x000828, "Member 'UABP_Rasmus_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimBlueprintExtension_PropertyAccess) == 0x000860, "Member 'UABP_Rasmus_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimBlueprintExtension_Base) == 0x000868, "Member 'UABP_Rasmus_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_Root) == 0x000870, "Member 'UABP_Rasmus_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_Slot) == 0x000890, "Member 'UABP_Rasmus_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_TransitionResult_14) == 0x0008D8, "Member 'UABP_Rasmus_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_TransitionResult_13) == 0x000900, "Member 'UABP_Rasmus_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_SequencePlayer_14) == 0x000928, "Member 'UABP_Rasmus_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_SequencePlayer_13) == 0x000970, "Member 'UABP_Rasmus_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_BlendListByBool) == 0x0009B8, "Member 'UABP_Rasmus_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_StateResult_11) == 0x000A00, "Member 'UABP_Rasmus_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_SequencePlayer_12) == 0x000A20, "Member 'UABP_Rasmus_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_StateResult_10) == 0x000A68, "Member 'UABP_Rasmus_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_StateMachine_2) == 0x000A88, "Member 'UABP_Rasmus_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_SaveCachedPose_1) == 0x000B50, "Member 'UABP_Rasmus_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_TransitionResult_12) == 0x000BD0, "Member 'UABP_Rasmus_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_TransitionResult_11) == 0x000BF8, "Member 'UABP_Rasmus_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_TransitionResult_10) == 0x000C20, "Member 'UABP_Rasmus_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_TransitionResult_9) == 0x000C48, "Member 'UABP_Rasmus_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_TransitionResult_8) == 0x000C70, "Member 'UABP_Rasmus_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_TransitionResult_7) == 0x000C98, "Member 'UABP_Rasmus_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_TransitionResult_6) == 0x000CC0, "Member 'UABP_Rasmus_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_TransitionResult_5) == 0x000CE8, "Member 'UABP_Rasmus_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_TransitionResult_4) == 0x000D10, "Member 'UABP_Rasmus_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_SequencePlayer_11) == 0x000D38, "Member 'UABP_Rasmus_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_StateResult_9) == 0x000D80, "Member 'UABP_Rasmus_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_SequencePlayer_10) == 0x000DA0, "Member 'UABP_Rasmus_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_SequencePlayer_9) == 0x000DE8, "Member 'UABP_Rasmus_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_SequencePlayer_8) == 0x000E30, "Member 'UABP_Rasmus_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_BlendListByEnum_1) == 0x000E78, "Member 'UABP_Rasmus_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_StateResult_8) == 0x000EC0, "Member 'UABP_Rasmus_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_SequencePlayer_7) == 0x000EE0, "Member 'UABP_Rasmus_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_StateResult_7) == 0x000F28, "Member 'UABP_Rasmus_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_SequencePlayer_6) == 0x000F48, "Member 'UABP_Rasmus_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_StateResult_6) == 0x000F90, "Member 'UABP_Rasmus_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_SequencePlayer_5) == 0x000FB0, "Member 'UABP_Rasmus_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_SequencePlayer_4) == 0x000FF8, "Member 'UABP_Rasmus_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_SequencePlayer_3) == 0x001040, "Member 'UABP_Rasmus_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_BlendListByEnum) == 0x001088, "Member 'UABP_Rasmus_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_StateResult_5) == 0x0010D0, "Member 'UABP_Rasmus_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_SequencePlayer_2) == 0x0010F0, "Member 'UABP_Rasmus_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_StateResult_4) == 0x001138, "Member 'UABP_Rasmus_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_StateMachine_1) == 0x001158, "Member 'UABP_Rasmus_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_SaveCachedPose) == 0x001220, "Member 'UABP_Rasmus_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_TransitionResult_3) == 0x0012A0, "Member 'UABP_Rasmus_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_TransitionResult_2) == 0x0012C8, "Member 'UABP_Rasmus_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_TransitionResult_1) == 0x0012F0, "Member 'UABP_Rasmus_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_TransitionResult) == 0x001318, "Member 'UABP_Rasmus_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_SequencePlayer_1) == 0x001340, "Member 'UABP_Rasmus_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_StateResult_3) == 0x001388, "Member 'UABP_Rasmus_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_SequencePlayer) == 0x0013A8, "Member 'UABP_Rasmus_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_StateResult_2) == 0x0013F0, "Member 'UABP_Rasmus_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_UseCachedPose_1) == 0x001410, "Member 'UABP_Rasmus_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_StateResult_1) == 0x001438, "Member 'UABP_Rasmus_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_UseCachedPose) == 0x001458, "Member 'UABP_Rasmus_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_StateResult) == 0x001480, "Member 'UABP_Rasmus_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Rasmus_C, AnimGraphNode_StateMachine) == 0x0014A0, "Member 'UABP_Rasmus_C::AnimGraphNode_StateMachine' has a wrong offset!");

}

