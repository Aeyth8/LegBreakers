#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: R_TimedChest

#include "Basic.hpp"

#include "R_TimedChest_classes.hpp"
#include "R_TimedChest_parameters.hpp"


namespace SDK
{

// Function R_TimedChest.R_TimedChest_C.BndEvt__CharacterRenderer_MatchaSnapNet_EntityRendererComponent_K2Node_ComponentBoundEvent_0_UpdateFromEntityDynamicDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class USnapNetEntityComponent*          EntityComponent                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Teleported                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AR_TimedChest_C::BndEvt__CharacterRenderer_MatchaSnapNet_EntityRendererComponent_K2Node_ComponentBoundEvent_0_UpdateFromEntityDynamicDelegate__DelegateSignature(const class USnapNetEntityComponent* EntityComponent, float DeltaSeconds, bool Teleported)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("R_TimedChest_C", "BndEvt__CharacterRenderer_MatchaSnapNet_EntityRendererComponent_K2Node_ComponentBoundEvent_0_UpdateFromEntityDynamicDelegate__DelegateSignature");

	Params::R_TimedChest_C_BndEvt__CharacterRenderer_MatchaSnapNet_EntityRendererComponent_K2Node_ComponentBoundEvent_0_UpdateFromEntityDynamicDelegate__DelegateSignature Parms{};

	Parms.EntityComponent = EntityComponent;
	Parms.DeltaSeconds = DeltaSeconds;
	Parms.Teleported = Teleported;

	UObject::ProcessEvent(Func, &Parms);
}


// Function R_TimedChest.R_TimedChest_C.ExecuteUbergraph_R_TimedChest
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AR_TimedChest_C::ExecuteUbergraph_R_TimedChest(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("R_TimedChest_C", "ExecuteUbergraph_R_TimedChest");

	Params::R_TimedChest_C_ExecuteUbergraph_R_TimedChest Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function R_TimedChest.R_TimedChest_C.GetCompassIndicatorWidgetClass
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UOdyCompassIndicatorWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

TSubclassOf<class UOdyCompassIndicatorWidget> AR_TimedChest_C::GetCompassIndicatorWidgetClass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("R_TimedChest_C", "GetCompassIndicatorWidgetClass");

	Params::R_TimedChest_C_GetCompassIndicatorWidgetClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function R_TimedChest.R_TimedChest_C.GetIndicatorWidgetClass
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UOdyMinimapIndicatorWidget>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

TSubclassOf<class UOdyMinimapIndicatorWidget> AR_TimedChest_C::GetIndicatorWidgetClass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("R_TimedChest_C", "GetIndicatorWidgetClass");

	Params::R_TimedChest_C_GetIndicatorWidgetClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function R_TimedChest.R_TimedChest_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AR_TimedChest_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("R_TimedChest_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function R_TimedChest.R_TimedChest_C.StartTimer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AR_TimedChest_C::StartTimer(int32 Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("R_TimedChest_C", "StartTimer");

	Params::R_TimedChest_C_StartTimer Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function R_TimedChest.R_TimedChest_C.TimerTick
// (BlueprintCallable, BlueprintEvent)

void AR_TimedChest_C::TimerTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("R_TimedChest_C", "TimerTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function R_TimedChest.R_TimedChest_C.UpdateHealthBar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AR_TimedChest_C::UpdateHealthBar(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("R_TimedChest_C", "UpdateHealthBar");

	Params::R_TimedChest_C_UpdateHealthBar Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function R_TimedChest.R_TimedChest_C.UpdateLockStateVisuals
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RemainingTimeToUnlock                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EChestState                             ChestState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AR_TimedChest_C::UpdateLockStateVisuals(int32 RemainingTimeToUnlock, EChestState ChestState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("R_TimedChest_C", "UpdateLockStateVisuals");

	Params::R_TimedChest_C_UpdateLockStateVisuals Parms{};

	Parms.RemainingTimeToUnlock = RemainingTimeToUnlock;
	Parms.ChestState = ChestState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function R_TimedChest.R_TimedChest_C.UpdateTimerText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RemainingTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AR_TimedChest_C::UpdateTimerText(int32 RemainingTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("R_TimedChest_C", "UpdateTimerText");

	Params::R_TimedChest_C_UpdateTimerText Parms{};

	Parms.RemainingTime = RemainingTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function R_TimedChest.R_TimedChest_C.GetIndicatorWorldExtent
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AR_TimedChest_C::GetIndicatorWorldExtent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("R_TimedChest_C", "GetIndicatorWorldExtent");

	Params::R_TimedChest_C_GetIndicatorWorldExtent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function R_TimedChest.R_TimedChest_C.GetIndicatorWorldPosition
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AR_TimedChest_C::GetIndicatorWorldPosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("R_TimedChest_C", "GetIndicatorWorldPosition");

	Params::R_TimedChest_C_GetIndicatorWorldPosition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function R_TimedChest.R_TimedChest_C.SetupIndicatorInstance
// (Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UOdyMinimapIndicatorWidget*       IndicatorInstance                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AR_TimedChest_C::SetupIndicatorInstance(class UOdyMinimapIndicatorWidget* IndicatorInstance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("R_TimedChest_C", "SetupIndicatorInstance");

	Params::R_TimedChest_C_SetupIndicatorInstance Parms{};

	Parms.IndicatorInstance = IndicatorInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function R_TimedChest.R_TimedChest_C.ShouldCompassIndicatorBeVisible
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class APlayerController*                InPlayerController                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AR_TimedChest_C::ShouldCompassIndicatorBeVisible(class APlayerController* InPlayerController) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("R_TimedChest_C", "ShouldCompassIndicatorBeVisible");

	Params::R_TimedChest_C_ShouldCompassIndicatorBeVisible Parms{};

	Parms.InPlayerController = InPlayerController;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function R_TimedChest.R_TimedChest_C.ShouldIndicatorBeVisible
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class APlayerController*                InPlayerController                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AR_TimedChest_C::ShouldIndicatorBeVisible(class APlayerController* InPlayerController) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("R_TimedChest_C", "ShouldIndicatorBeVisible");

	Params::R_TimedChest_C_ShouldIndicatorBeVisible Parms{};

	Parms.InPlayerController = InPlayerController;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function R_TimedChest.R_TimedChest_C.TickIndicator
// (Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UOdyMinimapIndicatorWidget*       WidgetInstance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AR_TimedChest_C::TickIndicator(class UOdyMinimapIndicatorWidget* WidgetInstance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("R_TimedChest_C", "TickIndicator");

	Params::R_TimedChest_C_TickIndicator Parms{};

	Parms.WidgetInstance = WidgetInstance;

	UObject::ProcessEvent(Func, &Parms);
}

}

