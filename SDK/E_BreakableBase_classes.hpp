#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: E_BreakableBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Matcha_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass E_BreakableBase.E_BreakableBase_C
// 0x0010 (0x04C0 - 0x04B0)
class AE_BreakableBase_C : public AMatchaBreakableEntity
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   AudioOnBreakID;                                    // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__E_BreakableBase_EntityComponent_K2Node_ComponentBoundEvent_0_SnapNetPropertiesModifiedDynamicDelegate__DelegateSignature();
	void ExecuteUbergraph_E_BreakableBase(int32 EntryPoint);
	void HandleReset();
	void OnBroken();
	void UpdateCollision();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"E_BreakableBase_C">();
	}
	static class AE_BreakableBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AE_BreakableBase_C>();
	}
};
static_assert(alignof(AE_BreakableBase_C) == 0x000008, "Wrong alignment on AE_BreakableBase_C");
static_assert(sizeof(AE_BreakableBase_C) == 0x0004C0, "Wrong size on AE_BreakableBase_C");
static_assert(offsetof(AE_BreakableBase_C, UberGraphFrame) == 0x0004B0, "Member 'AE_BreakableBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AE_BreakableBase_C, AudioOnBreakID) == 0x0004B8, "Member 'AE_BreakableBase_C::AudioOnBreakID' has a wrong offset!");

}

