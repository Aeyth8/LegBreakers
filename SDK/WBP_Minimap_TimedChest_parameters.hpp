#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Minimap_TimedChest

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_Minimap_TimedChest.WBP_Minimap_TimedChest_C.ExecuteUbergraph_WBP_Minimap_TimedChest
// 0x0078 (0x0078 - 0x0000)
struct WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_DoubleToVector2D_ReturnValue;        // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest) == 0x000008, "Wrong alignment on WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest");
static_assert(sizeof(WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest) == 0x000078, "Wrong size on WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest");
static_assert(offsetof(WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest, EntryPoint) == 0x000000, "Member 'WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest, K2Node_Event_MyGeometry) == 0x000004, "Member 'WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000048, "Member 'WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest, K2Node_Event_IsDesignTime) == 0x000049, "Member 'WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest, CallFunc_Conv_DoubleToVector2D_ReturnValue) == 0x000058, "Member 'WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest::CallFunc_Conv_DoubleToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000068, "Member 'WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000070, "Member 'WBP_Minimap_TimedChest_C_ExecuteUbergraph_WBP_Minimap_TimedChest::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_Minimap_TimedChest.WBP_Minimap_TimedChest_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Minimap_TimedChest_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Minimap_TimedChest_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Minimap_TimedChest_C_PreConstruct");
static_assert(sizeof(WBP_Minimap_TimedChest_C_PreConstruct) == 0x000001, "Wrong size on WBP_Minimap_TimedChest_C_PreConstruct");
static_assert(offsetof(WBP_Minimap_TimedChest_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Minimap_TimedChest_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Minimap_TimedChest.WBP_Minimap_TimedChest_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_Minimap_TimedChest_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Minimap_TimedChest_C_Tick) == 0x000004, "Wrong alignment on WBP_Minimap_TimedChest_C_Tick");
static_assert(sizeof(WBP_Minimap_TimedChest_C_Tick) == 0x00003C, "Wrong size on WBP_Minimap_TimedChest_C_Tick");
static_assert(offsetof(WBP_Minimap_TimedChest_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_Minimap_TimedChest_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_TimedChest_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_Minimap_TimedChest_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_Minimap_TimedChest.WBP_Minimap_TimedChest_C.UpdateTimer
// 0x0038 (0x0038 - 0x0000)
struct WBP_Minimap_TimedChest_C_UpdateTimer final
{
public:
	double                                        TimerPercent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TimeRemaining;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0010)()
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Minimap_TimedChest_C_UpdateTimer) == 0x000008, "Wrong alignment on WBP_Minimap_TimedChest_C_UpdateTimer");
static_assert(sizeof(WBP_Minimap_TimedChest_C_UpdateTimer) == 0x000038, "Wrong size on WBP_Minimap_TimedChest_C_UpdateTimer");
static_assert(offsetof(WBP_Minimap_TimedChest_C_UpdateTimer, TimerPercent) == 0x000000, "Member 'WBP_Minimap_TimedChest_C_UpdateTimer::TimerPercent' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_TimedChest_C_UpdateTimer, TimeRemaining) == 0x000008, "Member 'WBP_Minimap_TimedChest_C_UpdateTimer::TimeRemaining' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_TimedChest_C_UpdateTimer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_Minimap_TimedChest_C_UpdateTimer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_TimedChest_C_UpdateTimer, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'WBP_Minimap_TimedChest_C_UpdateTimer::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_TimedChest_C_UpdateTimer, Temp_byte_Variable) == 0x000020, "Member 'WBP_Minimap_TimedChest_C_UpdateTimer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_TimedChest_C_UpdateTimer, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000021, "Member 'WBP_Minimap_TimedChest_C_UpdateTimer::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_TimedChest_C_UpdateTimer, Temp_byte_Variable_1) == 0x000022, "Member 'WBP_Minimap_TimedChest_C_UpdateTimer::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_TimedChest_C_UpdateTimer, Temp_bool_Variable) == 0x000023, "Member 'WBP_Minimap_TimedChest_C_UpdateTimer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_TimedChest_C_UpdateTimer, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'WBP_Minimap_TimedChest_C_UpdateTimer::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_TimedChest_C_UpdateTimer, K2Node_Select_Default) == 0x000030, "Member 'WBP_Minimap_TimedChest_C_UpdateTimer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Minimap_TimedChest_C_UpdateTimer, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000034, "Member 'WBP_Minimap_TimedChest_C_UpdateTimer::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

}

