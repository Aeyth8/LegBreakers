#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OdyMinimapActor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_OdyMinimapActor.BP_OdyMinimapActor_C.Capture
// 0x0001 (0x0001 - 0x0000)
struct BP_OdyMinimapActor_C_Capture final
{
public:
	bool                                          CallFunc_CaptureMinimap_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OdyMinimapActor_C_Capture) == 0x000001, "Wrong alignment on BP_OdyMinimapActor_C_Capture");
static_assert(sizeof(BP_OdyMinimapActor_C_Capture) == 0x000001, "Wrong size on BP_OdyMinimapActor_C_Capture");
static_assert(offsetof(BP_OdyMinimapActor_C_Capture, CallFunc_CaptureMinimap_ReturnValue) == 0x000000, "Member 'BP_OdyMinimapActor_C_Capture::CallFunc_CaptureMinimap_ReturnValue' has a wrong offset!");

// Function BP_OdyMinimapActor.BP_OdyMinimapActor_C.MakeSplineLinear
// 0x0080 (0x0080 - 0x0000)
struct BP_OdyMinimapActor_C_MakeSplineLinear final
{
public:
	int32                                         NumSplinePoints;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OdyMinimapActor_C_MakeSplineLinear) == 0x000008, "Wrong alignment on BP_OdyMinimapActor_C_MakeSplineLinear");
static_assert(sizeof(BP_OdyMinimapActor_C_MakeSplineLinear) == 0x000080, "Wrong size on BP_OdyMinimapActor_C_MakeSplineLinear");
static_assert(offsetof(BP_OdyMinimapActor_C_MakeSplineLinear, NumSplinePoints) == 0x000000, "Member 'BP_OdyMinimapActor_C_MakeSplineLinear::NumSplinePoints' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_MakeSplineLinear, Temp_int_Variable) == 0x000004, "Member 'BP_OdyMinimapActor_C_MakeSplineLinear::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_MakeSplineLinear, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_OdyMinimapActor_C_MakeSplineLinear::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_MakeSplineLinear, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_OdyMinimapActor_C_MakeSplineLinear::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_MakeSplineLinear, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'BP_OdyMinimapActor_C_MakeSplineLinear::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_MakeSplineLinear, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000028, "Member 'BP_OdyMinimapActor_C_MakeSplineLinear::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_MakeSplineLinear, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000030, "Member 'BP_OdyMinimapActor_C_MakeSplineLinear::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_MakeSplineLinear, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'BP_OdyMinimapActor_C_MakeSplineLinear::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_MakeSplineLinear, CallFunc_BreakVector_X) == 0x000050, "Member 'BP_OdyMinimapActor_C_MakeSplineLinear::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_MakeSplineLinear, CallFunc_BreakVector_Y) == 0x000058, "Member 'BP_OdyMinimapActor_C_MakeSplineLinear::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_MakeSplineLinear, CallFunc_BreakVector_Z) == 0x000060, "Member 'BP_OdyMinimapActor_C_MakeSplineLinear::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_MakeSplineLinear, CallFunc_MakeVector_ReturnValue_1) == 0x000068, "Member 'BP_OdyMinimapActor_C_MakeSplineLinear::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

// Function BP_OdyMinimapActor.BP_OdyMinimapActor_C.UserConstructionScript
// 0x0100 (0x0100 - 0x0000)
struct BP_OdyMinimapActor_C_UserConstructionScript final
{
public:
	int32                                         NumSplinePointsMinusOne;                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0xC];                                       // 0x00A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlane                                 CallFunc_MakePlaneFromPointAndNormal_ReturnValue;  // 0x00B0(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Set_Item_ImplicitCast;              // 0x00F0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OdyMinimapActor_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_OdyMinimapActor_C_UserConstructionScript");
static_assert(sizeof(BP_OdyMinimapActor_C_UserConstructionScript) == 0x000100, "Wrong size on BP_OdyMinimapActor_C_UserConstructionScript");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, NumSplinePointsMinusOne) == 0x000000, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::NumSplinePointsMinusOne' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, Temp_int_Variable) == 0x000004, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000018, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000038, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000040, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000048, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000050, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, CallFunc_BreakVector_X_1) == 0x000068, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, CallFunc_BreakVector_Y_1) == 0x000070, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, CallFunc_BreakVector_Z_1) == 0x000078, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000080, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000088, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, CallFunc_MakePlaneFromPointAndNormal_ReturnValue) == 0x0000B0, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::CallFunc_MakePlaneFromPointAndNormal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_1) == 0x0000D0, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OdyMinimapActor_C_UserConstructionScript, CallFunc_Array_Set_Item_ImplicitCast) == 0x0000F0, "Member 'BP_OdyMinimapActor_C_UserConstructionScript::CallFunc_Array_Set_Item_ImplicitCast' has a wrong offset!");

}

