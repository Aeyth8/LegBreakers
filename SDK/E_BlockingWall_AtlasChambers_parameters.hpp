#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: E_BlockingWall_AtlasChambers

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function E_BlockingWall_AtlasChambers.E_BlockingWall_AtlasChambers_C.ExecuteUbergraph_E_BlockingWall_AtlasChambers
// 0x0020 (0x0020 - 0x0000)
struct E_BlockingWall_AtlasChambers_C_ExecuteUbergraph_E_BlockingWall_AtlasChambers final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bOldEnabled;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bNewEnabled;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_SnapNetPropertyVectorToVector_ReturnValue; // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(E_BlockingWall_AtlasChambers_C_ExecuteUbergraph_E_BlockingWall_AtlasChambers) == 0x000008, "Wrong alignment on E_BlockingWall_AtlasChambers_C_ExecuteUbergraph_E_BlockingWall_AtlasChambers");
static_assert(sizeof(E_BlockingWall_AtlasChambers_C_ExecuteUbergraph_E_BlockingWall_AtlasChambers) == 0x000020, "Wrong size on E_BlockingWall_AtlasChambers_C_ExecuteUbergraph_E_BlockingWall_AtlasChambers");
static_assert(offsetof(E_BlockingWall_AtlasChambers_C_ExecuteUbergraph_E_BlockingWall_AtlasChambers, EntryPoint) == 0x000000, "Member 'E_BlockingWall_AtlasChambers_C_ExecuteUbergraph_E_BlockingWall_AtlasChambers::EntryPoint' has a wrong offset!");
static_assert(offsetof(E_BlockingWall_AtlasChambers_C_ExecuteUbergraph_E_BlockingWall_AtlasChambers, K2Node_Event_bOldEnabled) == 0x000004, "Member 'E_BlockingWall_AtlasChambers_C_ExecuteUbergraph_E_BlockingWall_AtlasChambers::K2Node_Event_bOldEnabled' has a wrong offset!");
static_assert(offsetof(E_BlockingWall_AtlasChambers_C_ExecuteUbergraph_E_BlockingWall_AtlasChambers, K2Node_Event_bNewEnabled) == 0x000005, "Member 'E_BlockingWall_AtlasChambers_C_ExecuteUbergraph_E_BlockingWall_AtlasChambers::K2Node_Event_bNewEnabled' has a wrong offset!");
static_assert(offsetof(E_BlockingWall_AtlasChambers_C_ExecuteUbergraph_E_BlockingWall_AtlasChambers, CallFunc_Conv_SnapNetPropertyVectorToVector_ReturnValue) == 0x000008, "Member 'E_BlockingWall_AtlasChambers_C_ExecuteUbergraph_E_BlockingWall_AtlasChambers::CallFunc_Conv_SnapNetPropertyVectorToVector_ReturnValue' has a wrong offset!");

// Function E_BlockingWall_AtlasChambers.E_BlockingWall_AtlasChambers_C.OnEnabledChanged
// 0x0002 (0x0002 - 0x0000)
struct E_BlockingWall_AtlasChambers_C_OnEnabledChanged final
{
public:
	bool                                          bOldEnabled;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNewEnabled;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(E_BlockingWall_AtlasChambers_C_OnEnabledChanged) == 0x000001, "Wrong alignment on E_BlockingWall_AtlasChambers_C_OnEnabledChanged");
static_assert(sizeof(E_BlockingWall_AtlasChambers_C_OnEnabledChanged) == 0x000002, "Wrong size on E_BlockingWall_AtlasChambers_C_OnEnabledChanged");
static_assert(offsetof(E_BlockingWall_AtlasChambers_C_OnEnabledChanged, bOldEnabled) == 0x000000, "Member 'E_BlockingWall_AtlasChambers_C_OnEnabledChanged::bOldEnabled' has a wrong offset!");
static_assert(offsetof(E_BlockingWall_AtlasChambers_C_OnEnabledChanged, bNewEnabled) == 0x000001, "Member 'E_BlockingWall_AtlasChambers_C_OnEnabledChanged::bNewEnabled' has a wrong offset!");

// Function E_BlockingWall_AtlasChambers.E_BlockingWall_AtlasChambers_C.UpdateCollision
// 0x0001 (0x0001 - 0x0000)
struct E_BlockingWall_AtlasChambers_C_UpdateCollision final
{
public:
	bool                                          CallFunc_Conv_SnapNetPropertyBooleanToBool_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(E_BlockingWall_AtlasChambers_C_UpdateCollision) == 0x000001, "Wrong alignment on E_BlockingWall_AtlasChambers_C_UpdateCollision");
static_assert(sizeof(E_BlockingWall_AtlasChambers_C_UpdateCollision) == 0x000001, "Wrong size on E_BlockingWall_AtlasChambers_C_UpdateCollision");
static_assert(offsetof(E_BlockingWall_AtlasChambers_C_UpdateCollision, CallFunc_Conv_SnapNetPropertyBooleanToBool_ReturnValue) == 0x000000, "Member 'E_BlockingWall_AtlasChambers_C_UpdateCollision::CallFunc_Conv_SnapNetPropertyBooleanToBool_ReturnValue' has a wrong offset!");

// Function E_BlockingWall_AtlasChambers.E_BlockingWall_AtlasChambers_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct E_BlockingWall_AtlasChambers_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_Conv_SnapNetPropertyVectorToVector_ReturnValue; // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(E_BlockingWall_AtlasChambers_C_UserConstructionScript) == 0x000008, "Wrong alignment on E_BlockingWall_AtlasChambers_C_UserConstructionScript");
static_assert(sizeof(E_BlockingWall_AtlasChambers_C_UserConstructionScript) == 0x000018, "Wrong size on E_BlockingWall_AtlasChambers_C_UserConstructionScript");
static_assert(offsetof(E_BlockingWall_AtlasChambers_C_UserConstructionScript, CallFunc_Conv_SnapNetPropertyVectorToVector_ReturnValue) == 0x000000, "Member 'E_BlockingWall_AtlasChambers_C_UserConstructionScript::CallFunc_Conv_SnapNetPropertyVectorToVector_ReturnValue' has a wrong offset!");

}

