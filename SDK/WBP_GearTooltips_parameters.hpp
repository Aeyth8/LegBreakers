#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GearTooltips

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WBP_GearTooltips.WBP_GearTooltips_C.Bind Feet Category Data
// 0x0008 (0x0008 - 0x0000)
struct WBP_GearTooltips_C_Bind_Feet_Category_Data final
{
public:
	class UMatchaInventoryCategoryUIData*         CategoryUIData;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_Bind_Feet_Category_Data) == 0x000008, "Wrong alignment on WBP_GearTooltips_C_Bind_Feet_Category_Data");
static_assert(sizeof(WBP_GearTooltips_C_Bind_Feet_Category_Data) == 0x000008, "Wrong size on WBP_GearTooltips_C_Bind_Feet_Category_Data");
static_assert(offsetof(WBP_GearTooltips_C_Bind_Feet_Category_Data, CategoryUIData) == 0x000000, "Member 'WBP_GearTooltips_C_Bind_Feet_Category_Data::CategoryUIData' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.Bind Hands Category Data
// 0x0008 (0x0008 - 0x0000)
struct WBP_GearTooltips_C_Bind_Hands_Category_Data final
{
public:
	class UMatchaInventoryCategoryUIData*         CategoryUIData;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_Bind_Hands_Category_Data) == 0x000008, "Wrong alignment on WBP_GearTooltips_C_Bind_Hands_Category_Data");
static_assert(sizeof(WBP_GearTooltips_C_Bind_Hands_Category_Data) == 0x000008, "Wrong size on WBP_GearTooltips_C_Bind_Hands_Category_Data");
static_assert(offsetof(WBP_GearTooltips_C_Bind_Hands_Category_Data, CategoryUIData) == 0x000000, "Member 'WBP_GearTooltips_C_Bind_Hands_Category_Data::CategoryUIData' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.BindBodyCategoryData
// 0x0008 (0x0008 - 0x0000)
struct WBP_GearTooltips_C_BindBodyCategoryData final
{
public:
	class UMatchaInventoryCategoryUIData*         CategoryUIData;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_BindBodyCategoryData) == 0x000008, "Wrong alignment on WBP_GearTooltips_C_BindBodyCategoryData");
static_assert(sizeof(WBP_GearTooltips_C_BindBodyCategoryData) == 0x000008, "Wrong size on WBP_GearTooltips_C_BindBodyCategoryData");
static_assert(offsetof(WBP_GearTooltips_C_BindBodyCategoryData, CategoryUIData) == 0x000000, "Member 'WBP_GearTooltips_C_BindBodyCategoryData::CategoryUIData' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.BindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_GearTooltips_C_BindData final
{
public:
	class UOdyUIData*                             NewUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_BindData) == 0x000008, "Wrong alignment on WBP_GearTooltips_C_BindData");
static_assert(sizeof(WBP_GearTooltips_C_BindData) == 0x000008, "Wrong size on WBP_GearTooltips_C_BindData");
static_assert(offsetof(WBP_GearTooltips_C_BindData, NewUIData) == 0x000000, "Member 'WBP_GearTooltips_C_BindData::NewUIData' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.BindHackCategoryData
// 0x0008 (0x0008 - 0x0000)
struct WBP_GearTooltips_C_BindHackCategoryData final
{
public:
	class UMatchaInventoryCategoryUIData*         CategoryUIData;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_BindHackCategoryData) == 0x000008, "Wrong alignment on WBP_GearTooltips_C_BindHackCategoryData");
static_assert(sizeof(WBP_GearTooltips_C_BindHackCategoryData) == 0x000008, "Wrong size on WBP_GearTooltips_C_BindHackCategoryData");
static_assert(offsetof(WBP_GearTooltips_C_BindHackCategoryData, CategoryUIData) == 0x000000, "Member 'WBP_GearTooltips_C_BindHackCategoryData::CategoryUIData' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.ExecuteUbergraph_WBP_GearTooltips
// 0x0338 (0x0338 - 0x0000)
struct WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventoryCategoryUIData*         K2Node_CustomEvent_CategoryUIData_3;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaInventoryCategoryUIData*         K2Node_CustomEvent_OldCategoryUIData_3;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventorySlotUIData*             CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             CallFunc_GetUIData_ReturnValue;                    // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaInventoryUIData*                 K2Node_DynamicCast_AsMatcha_Inventory_UI_Data;     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventorySlotUIData*             CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             K2Node_Event_OldUIData;                            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaInventoryUIData*                 K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_1;   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventoryCategoryUIData*         K2Node_CustomEvent_OldCategoryUIData_2;            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaInventoryCategoryUIData*         K2Node_CustomEvent_CategoryUIData_2;               // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             K2Node_Event_NewUIData;                            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaInventoryUIData*                 K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_2;   // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventoryCategoryUIData*         K2Node_CustomEvent_CategoryUIData_1;               // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventoryCategoryUIData*         K2Node_CustomEvent_OldCategoryUIData_1;            // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventorySlotUIData*             CallFunc_Array_Get_Item_2;                         // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x010C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventoryCategoryUIData*         CallFunc_Map_Find_Value;                           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Show;                                 // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_123[0x5];                                      // 0x0123(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventoryCategoryUIData*         K2Node_CustomEvent_CategoryUIData;                 // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventoryCategoryUIData*         K2Node_CustomEvent_OldCategoryUIData;              // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0144(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventorySlotUIData*             CallFunc_Array_Get_Item_3;                         // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_3;         // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0164(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x016C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventoryCategoryUIData*         CallFunc_Map_Find_Value_1;                         // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventoryCategoryUIData*         CallFunc_Map_Find_Value_2;                         // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_2;      // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnergized_bIsEnergized;                 // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnergized_bIsEnergized_1;               // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewEnergizedState_2;            // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnergized_bIsEnergized_2;               // 0x0196(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewEnergizedState_1;            // 0x0197(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewEnergizedState;              // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_OldValue_6;                     // 0x01A0(0x0010)()
	class FText                                   K2Node_CustomEvent_NewValue_6;                     // 0x01B0(0x0010)()
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_OldValue_5;                     // 0x01C8(0x0010)()
	class FText                                   K2Node_CustomEvent_NewValue_5;                     // 0x01D8(0x0010)()
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_OldValue_4;                     // 0x01F0(0x0010)()
	class FText                                   K2Node_CustomEvent_NewValue_4;                     // 0x0200(0x0010)()
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_OldValue_3;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue_3;                     // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_OldValue_2;                     // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue_2;                     // 0x021E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21F[0x1];                                      // 0x021F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool OldValue, bool NewValue)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0220(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool OldValue, bool NewValue)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0230(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool OldValue, bool NewValue)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0240(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool OldValue, bool NewValue)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x0250(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FText OldValue, class FText NewValue)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x0260(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_OldValue_1;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue_1;                     // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_272[0x2];                                      // 0x0272(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FText OldValue, class FText NewValue)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x0274(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FText OldValue, class FText NewValue)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x0284(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool NewEnergizedState)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x0294(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool NewEnergizedState)>       K2Node_CreateDelegate_OutputDelegate_13;           // 0x02A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool NewEnergizedState)>       K2Node_CreateDelegate_OutputDelegate_14;           // 0x02B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x02C4(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventoryCategoryUIData*         CallFunc_Map_Find_Value_3;                         // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_15;           // 0x02DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_3;      // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_16;           // 0x02F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_17;           // 0x0300(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_18;           // 0x0314(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_3;            // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_OldValue;                       // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue;                       // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0332(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0333(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0335(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips) == 0x000008, "Wrong alignment on WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips");
static_assert(sizeof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips) == 0x000338, "Wrong size on WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, EntryPoint) == 0x000000, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_CategoryUIData_3) == 0x000008, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_CategoryUIData_3' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_OldCategoryUIData_3) == 0x000010, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_OldCategoryUIData_3' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_IsValid_ReturnValue_2) == 0x00003C, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000048, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_GetUIData_ReturnValue) == 0x000050, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_GetUIData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_DynamicCast_AsMatcha_Inventory_UI_Data) == 0x000058, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_DynamicCast_AsMatcha_Inventory_UI_Data' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_IsValid_ReturnValue_3) == 0x000061, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000070, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_Event_OldUIData) == 0x000078, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_Event_OldUIData' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_1) == 0x000080, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_OldCategoryUIData_2) == 0x000090, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_OldCategoryUIData_2' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_CategoryUIData_2) == 0x000098, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_CategoryUIData_2' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_IsValid_ReturnValue_4) == 0x0000A0, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_IsValid_ReturnValue_5) == 0x0000A1, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_Event_NewUIData) == 0x0000A8, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_Event_NewUIData' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_2) == 0x0000B0, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_2' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_DynamicCast_bSuccess_2) == 0x0000B8, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000BC, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_CategoryUIData_1) == 0x0000D0, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_CategoryUIData_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000D8, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_IsValid_ReturnValue_6) == 0x0000E8, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_OldCategoryUIData_1) == 0x0000F0, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_OldCategoryUIData_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_IsValid_ReturnValue_7) == 0x0000F8, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_IsValid_ReturnValue_8) == 0x0000F9, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_Array_Get_Item_2) == 0x000100, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000108, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, Temp_struct_Variable) == 0x00010C, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_Map_Find_Value) == 0x000118, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_Map_Find_ReturnValue) == 0x000120, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_Event_Show) == 0x000121, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_Event_Show' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000122, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_CategoryUIData) == 0x000128, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_CategoryUIData' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_IsValid_ReturnValue_9) == 0x000130, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_OldCategoryUIData) == 0x000138, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_OldCategoryUIData' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_IsValid_ReturnValue_10) == 0x000140, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CreateDelegate_OutputDelegate_4) == 0x000144, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_IsValid_ReturnValue_11) == 0x000154, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_Array_Get_Item_3) == 0x000158, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_Array_IsValidIndex_ReturnValue_3) == 0x000160, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_Array_IsValidIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, Temp_struct_Variable_1) == 0x000164, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, Temp_struct_Variable_2) == 0x00016C, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_Map_Find_Value_1) == 0x000178, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_Map_Find_ReturnValue_1) == 0x000180, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_Map_Find_Value_2) == 0x000188, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_Map_Find_ReturnValue_2) == 0x000190, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000191, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_NotEqual_ObjectObject_ReturnValue_2) == 0x000192, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_NotEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_IsEnergized_bIsEnergized) == 0x000193, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_IsEnergized_bIsEnergized' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_IsEnergized_bIsEnergized_1) == 0x000194, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_IsEnergized_bIsEnergized_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_NewEnergizedState_2) == 0x000195, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_NewEnergizedState_2' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_IsEnergized_bIsEnergized_2) == 0x000196, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_IsEnergized_bIsEnergized_2' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_NewEnergizedState_1) == 0x000197, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_NewEnergizedState_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_NewEnergizedState) == 0x000198, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_NewEnergizedState' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_OldValue_6) == 0x0001A0, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_OldValue_6' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_NewValue_6) == 0x0001B0, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_NewValue_6' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_MakeLiteralName_ReturnValue) == 0x0001C0, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_OldValue_5) == 0x0001C8, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_OldValue_5' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_NewValue_5) == 0x0001D8, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_NewValue_5' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_MakeLiteralName_ReturnValue_1) == 0x0001E8, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_OldValue_4) == 0x0001F0, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_OldValue_4' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_NewValue_4) == 0x000200, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_NewValue_4' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_MakeLiteralName_ReturnValue_2) == 0x000210, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_OldValue_3) == 0x000218, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_OldValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_NewValue_3) == 0x000219, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_NewValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, Temp_byte_Variable) == 0x00021A, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, Temp_byte_Variable_1) == 0x00021B, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, Temp_bool_Variable) == 0x00021C, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_OldValue_2) == 0x00021D, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_OldValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_NewValue_2) == 0x00021E, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_NewValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CreateDelegate_OutputDelegate_5) == 0x000220, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CreateDelegate_OutputDelegate_6) == 0x000230, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CreateDelegate_OutputDelegate_7) == 0x000240, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CreateDelegate_OutputDelegate_8) == 0x000250, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CreateDelegate_OutputDelegate_9) == 0x000260, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_OldValue_1) == 0x000270, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_OldValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_NewValue_1) == 0x000271, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_NewValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CreateDelegate_OutputDelegate_10) == 0x000274, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CreateDelegate_OutputDelegate_11) == 0x000284, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CreateDelegate_OutputDelegate_12) == 0x000294, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CreateDelegate_OutputDelegate_13) == 0x0002A4, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CreateDelegate_OutputDelegate_14) == 0x0002B4, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, Temp_struct_Variable_3) == 0x0002C4, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_Map_Find_Value_3) == 0x0002D0, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_Map_Find_ReturnValue_3) == 0x0002D8, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CreateDelegate_OutputDelegate_15) == 0x0002DC, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_NotEqual_ObjectObject_ReturnValue_3) == 0x0002EC, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_NotEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CreateDelegate_OutputDelegate_16) == 0x0002F0, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CreateDelegate_OutputDelegate_17) == 0x000300, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, Temp_byte_Variable_2) == 0x000310, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CreateDelegate_OutputDelegate_18) == 0x000314, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, Temp_byte_Variable_3) == 0x000324, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, CallFunc_MakeLiteralName_ReturnValue_3) == 0x000328, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::CallFunc_MakeLiteralName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_OldValue) == 0x000330, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_CustomEvent_NewValue) == 0x000331, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, Temp_bool_Variable_1) == 0x000332, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_Select_Default) == 0x000333, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_Select_Default_1) == 0x000334, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips, K2Node_Event_IsDesignTime) == 0x000335, "Member 'WBP_GearTooltips_C_ExecuteUbergraph_WBP_GearTooltips::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.OnBodyEnergizedChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_GearTooltips_C_OnBodyEnergizedChanged final
{
public:
	bool                                          OldValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewValue;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_OnBodyEnergizedChanged) == 0x000001, "Wrong alignment on WBP_GearTooltips_C_OnBodyEnergizedChanged");
static_assert(sizeof(WBP_GearTooltips_C_OnBodyEnergizedChanged) == 0x000002, "Wrong size on WBP_GearTooltips_C_OnBodyEnergizedChanged");
static_assert(offsetof(WBP_GearTooltips_C_OnBodyEnergizedChanged, OldValue) == 0x000000, "Member 'WBP_GearTooltips_C_OnBodyEnergizedChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_OnBodyEnergizedChanged, NewValue) == 0x000001, "Member 'WBP_GearTooltips_C_OnBodyEnergizedChanged::NewValue' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.OnBodyEnergizedTooltipChanged
// 0x0020 (0x0020 - 0x0000)
struct WBP_GearTooltips_C_OnBodyEnergizedTooltipChanged final
{
public:
	class FText                                   OldValue;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   NewValue;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_GearTooltips_C_OnBodyEnergizedTooltipChanged) == 0x000008, "Wrong alignment on WBP_GearTooltips_C_OnBodyEnergizedTooltipChanged");
static_assert(sizeof(WBP_GearTooltips_C_OnBodyEnergizedTooltipChanged) == 0x000020, "Wrong size on WBP_GearTooltips_C_OnBodyEnergizedTooltipChanged");
static_assert(offsetof(WBP_GearTooltips_C_OnBodyEnergizedTooltipChanged, OldValue) == 0x000000, "Member 'WBP_GearTooltips_C_OnBodyEnergizedTooltipChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_OnBodyEnergizedTooltipChanged, NewValue) == 0x000010, "Member 'WBP_GearTooltips_C_OnBodyEnergizedTooltipChanged::NewValue' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.OnBodySlotEnergizedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_GearTooltips_C_OnBodySlotEnergizedChanged final
{
public:
	bool                                          NewEnergizedState;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_OnBodySlotEnergizedChanged) == 0x000001, "Wrong alignment on WBP_GearTooltips_C_OnBodySlotEnergizedChanged");
static_assert(sizeof(WBP_GearTooltips_C_OnBodySlotEnergizedChanged) == 0x000001, "Wrong size on WBP_GearTooltips_C_OnBodySlotEnergizedChanged");
static_assert(offsetof(WBP_GearTooltips_C_OnBodySlotEnergizedChanged, NewEnergizedState) == 0x000000, "Member 'WBP_GearTooltips_C_OnBodySlotEnergizedChanged::NewEnergizedState' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.OnBootsEnergizedChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_GearTooltips_C_OnBootsEnergizedChanged final
{
public:
	bool                                          OldValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewValue;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_OnBootsEnergizedChanged) == 0x000001, "Wrong alignment on WBP_GearTooltips_C_OnBootsEnergizedChanged");
static_assert(sizeof(WBP_GearTooltips_C_OnBootsEnergizedChanged) == 0x000002, "Wrong size on WBP_GearTooltips_C_OnBootsEnergizedChanged");
static_assert(offsetof(WBP_GearTooltips_C_OnBootsEnergizedChanged, OldValue) == 0x000000, "Member 'WBP_GearTooltips_C_OnBootsEnergizedChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_OnBootsEnergizedChanged, NewValue) == 0x000001, "Member 'WBP_GearTooltips_C_OnBootsEnergizedChanged::NewValue' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.OnFeetEnergizedTooltipChanged
// 0x0020 (0x0020 - 0x0000)
struct WBP_GearTooltips_C_OnFeetEnergizedTooltipChanged final
{
public:
	class FText                                   OldValue;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   NewValue;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_GearTooltips_C_OnFeetEnergizedTooltipChanged) == 0x000008, "Wrong alignment on WBP_GearTooltips_C_OnFeetEnergizedTooltipChanged");
static_assert(sizeof(WBP_GearTooltips_C_OnFeetEnergizedTooltipChanged) == 0x000020, "Wrong size on WBP_GearTooltips_C_OnFeetEnergizedTooltipChanged");
static_assert(offsetof(WBP_GearTooltips_C_OnFeetEnergizedTooltipChanged, OldValue) == 0x000000, "Member 'WBP_GearTooltips_C_OnFeetEnergizedTooltipChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_OnFeetEnergizedTooltipChanged, NewValue) == 0x000010, "Member 'WBP_GearTooltips_C_OnFeetEnergizedTooltipChanged::NewValue' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.OnFeetSlotEnergizedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_GearTooltips_C_OnFeetSlotEnergizedChanged final
{
public:
	bool                                          NewEnergizedState;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_OnFeetSlotEnergizedChanged) == 0x000001, "Wrong alignment on WBP_GearTooltips_C_OnFeetSlotEnergizedChanged");
static_assert(sizeof(WBP_GearTooltips_C_OnFeetSlotEnergizedChanged) == 0x000001, "Wrong size on WBP_GearTooltips_C_OnFeetSlotEnergizedChanged");
static_assert(offsetof(WBP_GearTooltips_C_OnFeetSlotEnergizedChanged, NewEnergizedState) == 0x000000, "Member 'WBP_GearTooltips_C_OnFeetSlotEnergizedChanged::NewEnergizedState' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.OnHackSlotIsEmptyChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_GearTooltips_C_OnHackSlotIsEmptyChanged final
{
public:
	bool                                          OldValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewValue;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_OnHackSlotIsEmptyChanged) == 0x000001, "Wrong alignment on WBP_GearTooltips_C_OnHackSlotIsEmptyChanged");
static_assert(sizeof(WBP_GearTooltips_C_OnHackSlotIsEmptyChanged) == 0x000002, "Wrong size on WBP_GearTooltips_C_OnHackSlotIsEmptyChanged");
static_assert(offsetof(WBP_GearTooltips_C_OnHackSlotIsEmptyChanged, OldValue) == 0x000000, "Member 'WBP_GearTooltips_C_OnHackSlotIsEmptyChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_OnHackSlotIsEmptyChanged, NewValue) == 0x000001, "Member 'WBP_GearTooltips_C_OnHackSlotIsEmptyChanged::NewValue' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.OnHandsEnergizedChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_GearTooltips_C_OnHandsEnergizedChanged final
{
public:
	bool                                          OldValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewValue;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_OnHandsEnergizedChanged) == 0x000001, "Wrong alignment on WBP_GearTooltips_C_OnHandsEnergizedChanged");
static_assert(sizeof(WBP_GearTooltips_C_OnHandsEnergizedChanged) == 0x000002, "Wrong size on WBP_GearTooltips_C_OnHandsEnergizedChanged");
static_assert(offsetof(WBP_GearTooltips_C_OnHandsEnergizedChanged, OldValue) == 0x000000, "Member 'WBP_GearTooltips_C_OnHandsEnergizedChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_OnHandsEnergizedChanged, NewValue) == 0x000001, "Member 'WBP_GearTooltips_C_OnHandsEnergizedChanged::NewValue' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.OnHandsEnergizedTooltipChanged
// 0x0020 (0x0020 - 0x0000)
struct WBP_GearTooltips_C_OnHandsEnergizedTooltipChanged final
{
public:
	class FText                                   OldValue;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   NewValue;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_GearTooltips_C_OnHandsEnergizedTooltipChanged) == 0x000008, "Wrong alignment on WBP_GearTooltips_C_OnHandsEnergizedTooltipChanged");
static_assert(sizeof(WBP_GearTooltips_C_OnHandsEnergizedTooltipChanged) == 0x000020, "Wrong size on WBP_GearTooltips_C_OnHandsEnergizedTooltipChanged");
static_assert(offsetof(WBP_GearTooltips_C_OnHandsEnergizedTooltipChanged, OldValue) == 0x000000, "Member 'WBP_GearTooltips_C_OnHandsEnergizedTooltipChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_OnHandsEnergizedTooltipChanged, NewValue) == 0x000010, "Member 'WBP_GearTooltips_C_OnHandsEnergizedTooltipChanged::NewValue' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.OnHandsSlotEnergizedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_GearTooltips_C_OnHandsSlotEnergizedChanged final
{
public:
	bool                                          NewEnergizedState;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_OnHandsSlotEnergizedChanged) == 0x000001, "Wrong alignment on WBP_GearTooltips_C_OnHandsSlotEnergizedChanged");
static_assert(sizeof(WBP_GearTooltips_C_OnHandsSlotEnergizedChanged) == 0x000001, "Wrong size on WBP_GearTooltips_C_OnHandsSlotEnergizedChanged");
static_assert(offsetof(WBP_GearTooltips_C_OnHandsSlotEnergizedChanged, NewEnergizedState) == 0x000000, "Member 'WBP_GearTooltips_C_OnHandsSlotEnergizedChanged::NewEnergizedState' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_GearTooltips_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_GearTooltips_C_PreConstruct");
static_assert(sizeof(WBP_GearTooltips_C_PreConstruct) == 0x000001, "Wrong size on WBP_GearTooltips_C_PreConstruct");
static_assert(offsetof(WBP_GearTooltips_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_GearTooltips_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.Set Overloaded Styling
// 0x0070 (0x0070 - 0x0000)
struct WBP_GearTooltips_C_Set_Overloaded_Styling final
{
public:
	bool                                          bIsOverloaded;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             OverloadedSlotDescription;                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 OverloadedSlotIcon;                                // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             OverloadedSlotHeader;                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x0048(0x0014)()
	struct FSlateColor                            K2Node_Select_Default_2;                           // 0x005C(0x0014)()
};
static_assert(alignof(WBP_GearTooltips_C_Set_Overloaded_Styling) == 0x000008, "Wrong alignment on WBP_GearTooltips_C_Set_Overloaded_Styling");
static_assert(sizeof(WBP_GearTooltips_C_Set_Overloaded_Styling) == 0x000070, "Wrong size on WBP_GearTooltips_C_Set_Overloaded_Styling");
static_assert(offsetof(WBP_GearTooltips_C_Set_Overloaded_Styling, bIsOverloaded) == 0x000000, "Member 'WBP_GearTooltips_C_Set_Overloaded_Styling::bIsOverloaded' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_Set_Overloaded_Styling, OverloadedSlotDescription) == 0x000008, "Member 'WBP_GearTooltips_C_Set_Overloaded_Styling::OverloadedSlotDescription' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_Set_Overloaded_Styling, OverloadedSlotIcon) == 0x000010, "Member 'WBP_GearTooltips_C_Set_Overloaded_Styling::OverloadedSlotIcon' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_Set_Overloaded_Styling, OverloadedSlotHeader) == 0x000018, "Member 'WBP_GearTooltips_C_Set_Overloaded_Styling::OverloadedSlotHeader' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_Set_Overloaded_Styling, Temp_bool_Variable) == 0x000020, "Member 'WBP_GearTooltips_C_Set_Overloaded_Styling::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_Set_Overloaded_Styling, Temp_bool_Variable_1) == 0x000021, "Member 'WBP_GearTooltips_C_Set_Overloaded_Styling::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_Set_Overloaded_Styling, Temp_object_Variable) == 0x000028, "Member 'WBP_GearTooltips_C_Set_Overloaded_Styling::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_Set_Overloaded_Styling, Temp_object_Variable_1) == 0x000030, "Member 'WBP_GearTooltips_C_Set_Overloaded_Styling::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_Set_Overloaded_Styling, Temp_bool_Variable_2) == 0x000038, "Member 'WBP_GearTooltips_C_Set_Overloaded_Styling::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_Set_Overloaded_Styling, K2Node_Select_Default) == 0x000040, "Member 'WBP_GearTooltips_C_Set_Overloaded_Styling::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_Set_Overloaded_Styling, K2Node_Select_Default_1) == 0x000048, "Member 'WBP_GearTooltips_C_Set_Overloaded_Styling::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_Set_Overloaded_Styling, K2Node_Select_Default_2) == 0x00005C, "Member 'WBP_GearTooltips_C_Set_Overloaded_Styling::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.ShowTooltip
// 0x0001 (0x0001 - 0x0000)
struct WBP_GearTooltips_C_ShowTooltip final
{
public:
	bool                                          Show_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_ShowTooltip) == 0x000001, "Wrong alignment on WBP_GearTooltips_C_ShowTooltip");
static_assert(sizeof(WBP_GearTooltips_C_ShowTooltip) == 0x000001, "Wrong size on WBP_GearTooltips_C_ShowTooltip");
static_assert(offsetof(WBP_GearTooltips_C_ShowTooltip, Show_0) == 0x000000, "Member 'WBP_GearTooltips_C_ShowTooltip::Show_0' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.Unbind Feet CategoryData
// 0x0008 (0x0008 - 0x0000)
struct WBP_GearTooltips_C_Unbind_Feet_CategoryData final
{
public:
	class UMatchaInventoryCategoryUIData*         OldCategoryUIData;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_Unbind_Feet_CategoryData) == 0x000008, "Wrong alignment on WBP_GearTooltips_C_Unbind_Feet_CategoryData");
static_assert(sizeof(WBP_GearTooltips_C_Unbind_Feet_CategoryData) == 0x000008, "Wrong size on WBP_GearTooltips_C_Unbind_Feet_CategoryData");
static_assert(offsetof(WBP_GearTooltips_C_Unbind_Feet_CategoryData, OldCategoryUIData) == 0x000000, "Member 'WBP_GearTooltips_C_Unbind_Feet_CategoryData::OldCategoryUIData' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.UnbindBodyCategoryData
// 0x0008 (0x0008 - 0x0000)
struct WBP_GearTooltips_C_UnbindBodyCategoryData final
{
public:
	class UMatchaInventoryCategoryUIData*         OldCategoryUIData;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_UnbindBodyCategoryData) == 0x000008, "Wrong alignment on WBP_GearTooltips_C_UnbindBodyCategoryData");
static_assert(sizeof(WBP_GearTooltips_C_UnbindBodyCategoryData) == 0x000008, "Wrong size on WBP_GearTooltips_C_UnbindBodyCategoryData");
static_assert(offsetof(WBP_GearTooltips_C_UnbindBodyCategoryData, OldCategoryUIData) == 0x000000, "Member 'WBP_GearTooltips_C_UnbindBodyCategoryData::OldCategoryUIData' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.UnbindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_GearTooltips_C_UnbindData final
{
public:
	class UOdyUIData*                             OldUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_UnbindData) == 0x000008, "Wrong alignment on WBP_GearTooltips_C_UnbindData");
static_assert(sizeof(WBP_GearTooltips_C_UnbindData) == 0x000008, "Wrong size on WBP_GearTooltips_C_UnbindData");
static_assert(offsetof(WBP_GearTooltips_C_UnbindData, OldUIData) == 0x000000, "Member 'WBP_GearTooltips_C_UnbindData::OldUIData' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.UnbindHackCategoryData
// 0x0008 (0x0008 - 0x0000)
struct WBP_GearTooltips_C_UnbindHackCategoryData final
{
public:
	class UMatchaInventoryCategoryUIData*         OldCategoryUIData;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_UnbindHackCategoryData) == 0x000008, "Wrong alignment on WBP_GearTooltips_C_UnbindHackCategoryData");
static_assert(sizeof(WBP_GearTooltips_C_UnbindHackCategoryData) == 0x000008, "Wrong size on WBP_GearTooltips_C_UnbindHackCategoryData");
static_assert(offsetof(WBP_GearTooltips_C_UnbindHackCategoryData, OldCategoryUIData) == 0x000000, "Member 'WBP_GearTooltips_C_UnbindHackCategoryData::OldCategoryUIData' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.UnbindHandsCategoryData
// 0x0008 (0x0008 - 0x0000)
struct WBP_GearTooltips_C_UnbindHandsCategoryData final
{
public:
	class UMatchaInventoryCategoryUIData*         OldCategoryUIData;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_UnbindHandsCategoryData) == 0x000008, "Wrong alignment on WBP_GearTooltips_C_UnbindHandsCategoryData");
static_assert(sizeof(WBP_GearTooltips_C_UnbindHandsCategoryData) == 0x000008, "Wrong size on WBP_GearTooltips_C_UnbindHandsCategoryData");
static_assert(offsetof(WBP_GearTooltips_C_UnbindHandsCategoryData, OldCategoryUIData) == 0x000000, "Member 'WBP_GearTooltips_C_UnbindHandsCategoryData::OldCategoryUIData' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.UpdateEnergizedTooltipColor
// 0x0020 (0x0020 - 0x0000)
struct WBP_GearTooltips_C_UpdateEnergizedTooltipColor final
{
public:
	class UTextBlock*                             TextBlock;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnergized;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x000C(0x0014)()
};
static_assert(alignof(WBP_GearTooltips_C_UpdateEnergizedTooltipColor) == 0x000008, "Wrong alignment on WBP_GearTooltips_C_UpdateEnergizedTooltipColor");
static_assert(sizeof(WBP_GearTooltips_C_UpdateEnergizedTooltipColor) == 0x000020, "Wrong size on WBP_GearTooltips_C_UpdateEnergizedTooltipColor");
static_assert(offsetof(WBP_GearTooltips_C_UpdateEnergizedTooltipColor, TextBlock) == 0x000000, "Member 'WBP_GearTooltips_C_UpdateEnergizedTooltipColor::TextBlock' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_UpdateEnergizedTooltipColor, IsEnergized) == 0x000008, "Member 'WBP_GearTooltips_C_UpdateEnergizedTooltipColor::IsEnergized' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_UpdateEnergizedTooltipColor, Temp_bool_Variable) == 0x000009, "Member 'WBP_GearTooltips_C_UpdateEnergizedTooltipColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_UpdateEnergizedTooltipColor, K2Node_Select_Default) == 0x00000C, "Member 'WBP_GearTooltips_C_UpdateEnergizedTooltipColor::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GearTooltips.WBP_GearTooltips_C.UpdateEnergizedTooltipText
// 0x0028 (0x0028 - 0x0000)
struct WBP_GearTooltips_C_UpdateEnergizedTooltipText final
{
public:
	class UPanelWidget*                           RootPanel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   NewValue;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GearTooltips_C_UpdateEnergizedTooltipText) == 0x000008, "Wrong alignment on WBP_GearTooltips_C_UpdateEnergizedTooltipText");
static_assert(sizeof(WBP_GearTooltips_C_UpdateEnergizedTooltipText) == 0x000028, "Wrong size on WBP_GearTooltips_C_UpdateEnergizedTooltipText");
static_assert(offsetof(WBP_GearTooltips_C_UpdateEnergizedTooltipText, RootPanel) == 0x000000, "Member 'WBP_GearTooltips_C_UpdateEnergizedTooltipText::RootPanel' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_UpdateEnergizedTooltipText, TextBlock) == 0x000008, "Member 'WBP_GearTooltips_C_UpdateEnergizedTooltipText::TextBlock' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_UpdateEnergizedTooltipText, NewValue) == 0x000010, "Member 'WBP_GearTooltips_C_UpdateEnergizedTooltipText::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_GearTooltips_C_UpdateEnergizedTooltipText, CallFunc_TextIsEmpty_ReturnValue) == 0x000020, "Member 'WBP_GearTooltips_C_UpdateEnergizedTooltipText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

}

