#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterRenderer_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Matcha_structs.hpp"
#include "Matcha_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CharacterRenderer_Base.CharacterRenderer_Base_C
// 0x03B8 (0x0C40 - 0x0888)
class ACharacterRenderer_Base_C : public AMatchaSnapNetCharacterRenderer
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0888(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      TempTooltipCollider;                               // 0x0890(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       ChannelBarAndPromptsUI;                            // 0x0898(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       TempHeldItemUI;                                    // 0x08A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFX_ZipLine_L;                                     // 0x08A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFX_ZipLine_R;                                     // 0x08B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       ButtonWidget;                                      // 0x08B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFX_DataStream;                                    // 0x08C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      ProgressNiagara;                                   // 0x08C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      ButtonNiagara;                                     // 0x08D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFX_Knockback;                                     // 0x08D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFX_GlitchDamage;                                  // 0x08E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        VFXSceneRoot;                                      // 0x08E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFX_GlitchDrillTell;                               // 0x08F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFX_Slowed;                                        // 0x08F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFX_ObscuraPortal;                                 // 0x0900(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       TeamAttackIndicators;                              // 0x0908(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       ItemThrowDirectionUI;                              // 0x0910(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       HealthBar;                                         // 0x0918(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       BottomPlate;                                       // 0x0920(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      WorldDynamicCapsule;                               // 0x0928(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       PIO_Collider;                                      // 0x0930(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         LethalHitIn_In_B7B1A27F4BBF6A54FE223F9EF29D066E;   // 0x0938(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            LethalHitIn__Direction_B7B1A27F4BBF6A54FE223F9EF29D066E; // 0x093C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93D[0x3];                                      // 0x093D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     LethalHitIn;                                       // 0x0940(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         LethalHItOut_Out_D1E296DD4B6A5F5DB5E7BFB20DCBA27F; // 0x0948(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            LethalHItOut__Direction_D1E296DD4B6A5F5DB5E7BFB20DCBA27F; // 0x094C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94D[0x3];                                      // 0x094D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     LethalHItOut;                                      // 0x0950(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Timeline_0_ColorCue_12664CB746713615CC572BB444454742; // 0x0958(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Cue_12664CB746713615CC572BB444454742;   // 0x0968(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_12664CB746713615CC572BB444454742; // 0x096C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96D[0x3];                                      // 0x096D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0970(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Timeline_ColorCue_65B860454D2857E1FC3B85A9D4997C63; // 0x0978(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Cue_65B860454D2857E1FC3B85A9D4997C63;     // 0x0988(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_65B860454D2857E1FC3B85A9D4997C63; // 0x098C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98D[0x3];                                      // 0x098D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x0990(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 MinimapIndicatorWidget;                            // 0x0998(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               OutlineMaterial;                                   // 0x09A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        CameraFOV;                                         // 0x09A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastTeam;                                          // 0x09B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B4[0x4];                                      // 0x09B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               ShieldMaterial;                                    // 0x09B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnInfoChanged;                                     // 0x09C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWBP_FloatingIndicators_Panel_C*        IndicatorsPanel;                                   // 0x09D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          InPlayersTeam;                                     // 0x09D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D9[0x7];                                      // 0x09D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HurtBallRadius;                                    // 0x09E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HurtBallScale;                                     // 0x09E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9EC[0x4];                                      // 0x09EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LastLocation;                                      // 0x09F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MovementDirection;                                 // 0x0A08(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReflectionPoint;                                   // 0x0A20(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReflectionPlaneNormal;                             // 0x0A38(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               HurtBallMaterial;                                  // 0x0A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AMatchaSnapNetPlayerController*         ViewingPlayerController;                           // 0x0A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CameraRotation;                                    // 0x0A60(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                DefaultMaxViewExtents;                             // 0x0A78(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DefaultMinViewExtents;                             // 0x0A90(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CameraAspectRatio;                                 // 0x0AA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraCurrentTargetLocation;                       // 0x0AB0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraPreviousTargetLocation;                      // 0x0AC8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastKnownCapsuleHalfHeight;                        // 0x0AE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE4[0x4];                                      // 0x0AE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SnapNetPlayerBottomPlate_C*        BottomPlateBlueprint;                              // 0x0AE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_SnapNetTempHeldItemUI_C*           TempHeldItemUIBluePrint;                           // 0x0AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastTickPosition;                                  // 0x0AF8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LastTickXVelocity;                                 // 0x0B10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LastTickZVelocity;                                 // 0x0B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastDamage;                                        // 0x0B20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DidAllyOutline;                                    // 0x0B24(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DidEnemyOutline;                                   // 0x0B25(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B26[0x2];                                      // 0x0B26(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterEntity_Base_C*                OwnerCharacterEntity;                              // 0x0B28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocalPlayer;                                     // 0x0B30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAliveState                                   LastAliveState;                                    // 0x0B31(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B32[0x6];                                      // 0x0B32(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_TeamAttackIndicators_C*            TeamAttackIndicatorsWidget;                        // 0x0B38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        EnemiesIndicatorDistance;                          // 0x0B40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DiveBombMinViewExtents;                            // 0x0B48(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DiveBombMaxViewExtents;                            // 0x0B60(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DiveBombVerticalOffSet;                            // 0x0B78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         VFXKnockout;                                       // 0x0B80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CurrentlyOverlappingVisTriggers;                   // 0x0B88(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          InLethalKnockBack;                                 // 0x0B98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B99[0x7];                                      // 0x0B99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         VFXKnockoutMesh;                                   // 0x0BA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HoldingEdibleItem;                                 // 0x0BA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETraversalEntityType                          LastTransversalEntityType;                         // 0x0BA9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETraversalEntityType                          CurrentTransversalEntityType;                      // 0x0BAA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BAB[0x1];                                      // 0x0BAB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Player_Index;                                      // 0x0BAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasGlitchDashing;                                  // 0x0BB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasStartedItemChannel;                            // 0x0BB1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB2[0x6];                                      // 0x0BB2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PlayerChannelBarAndPrompts_C*      ChannelBarAndPromptsUIBP;                          // 0x0BB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          FaceChanged;                                       // 0x0BC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasStartedObscuraPortalSFX;                       // 0x0BC1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC2[0x6];                                      // 0x0BC2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   SequencerPlayer;                                   // 0x0BC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    SequenceActor;                                     // 0x0BD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayingGlitchLaserCeremony;                      // 0x0BD8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD9[0x7];                                      // 0x0BD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       GlitchLaserCamera;                                 // 0x0BE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayedCrackedSFX;                                 // 0x0BE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableGlitchLaserCameraZoom;                       // 0x0BE9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BEA[0x6];                                      // 0x0BEA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Glitch_Beam_Max_View_Extents;                      // 0x0BF0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Glitch_Laser_Min_View_Extents;                     // 0x0C08(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TooltipUI_IntroDelayTimeSeconds;                   // 0x0C20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TooltipUI_OutroDelayTimeSeconds;                   // 0x0C24(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TooltipUI_IntroDelayTimerHandle;                   // 0x0C28(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        TooltipUI_LastHiddenTime;                          // 0x0C30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         GlitchBeamSequence;                                // 0x0C38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	TSubclassOf<class UOdyCompassIndicatorWidget> GetCompassIndicatorWidgetClass();
	TSubclassOf<class UOdyMinimapIndicatorWidget> GetIndicatorWidgetClass();
	void TooltipUI_OnSpectatedPlayerChanged(int32 OldValue, int32 NewValue);
	void TooltipUI_IntroDelayComplete();
	void TooltipUI_CheckForTooltip();
	void SetupTooltipUI();
	void HandleCrackedSFX(double Damage_0);
	void FinishGlitchCannonCeremony();
	void LoopGlitchCannonCeremony();
	void StartGlitchCannonCeremony();
	void HandleObscuraPortalSFX(bool bActive);
	void UpdateSoulFace();
	void Play_Glitch_Grave_FX();
	void PlayDeathVFX();
	void UpdateTargetedGlitchDashMovementVisuals();
	void UpdateTransversalMovementVisuals();
	void IsVisibleBasedOnVisTriggers(class ACharacterRenderer_Base_C* ViewerRenderer, bool* IsVisible);
	void UpdateVelocityVariables(double DeltaSeconds);
	void UpdateHurtBallState();
	void SetupDefaults();
	void SetupMaterials();
	void SetupTeamAttackIndictators();
	void SetupDisguiseHealthBar();
	void Setup_ChannelBarAndTemp_Held_Item_UI();
	void SetupBottomUI();
	void UpdateSlowedVFX_TEMP();
	void HandleOtherGameplayPrompt_HACK();
	void UpdateMaterialOverrideColors();
	void UpdateTeamVisuals(int32 NewTeamNumber, int32 OldTeamNum);
	void UpdateKnockbackVFX();
	void TryToShowGameplayPrompt_TEMP(int32 PromptId);
	void UpdateNameplateVisibility(class AMatchaSnapNetCharacterEntity* CharacterEntity);
	void UpdateHeldItemUI(int32 PlayerIndex, class ACharacterEntity_Base_C* Character, class UMatchaItemAsset* ItemAsset);
	void TryUpdateNamePlateHeights(double HalfHeight);
	void K2_CalcCamera(float DeltaTime, struct FMinimalViewInfo* OutResult);
	void HurtBallParamsUpdate();
	void HurtBallDeform(const struct FVector& ReflectionPoint_0, const struct FVector& ReflectionPlaneNormal_0, const struct FVector& Direction);
	void Timeline__FinishedFunc();
	void Timeline__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void LethalHItOut__FinishedFunc();
	void LethalHItOut__UpdateFunc();
	void LethalHitIn__FinishedFunc();
	void LethalHitIn__UpdateFunc();
	void BndEvt__CharacterRenderer_MatchaSnapNet_EntityRendererComponent_K2Node_ComponentBoundEvent_0_UpdateFromEntityDynamicDelegate__DelegateSignature(const class USnapNetEntityComponent* EntityComponent, float DeltaSeconds, bool Teleported);
	void K2_OnBecomeViewTarget(class APlayerController* PC);
	void K2_OnEndViewTarget(class APlayerController* PC);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UpdateDamageVFX();
	void OnTeamAttackWarningChanged(bool bShouldShowWarning);
	void OnTeamAttackTargetChanged(bool bCurrentlyTargeted, bool bTargetedByAlly);
	void OnHasInteractTargetChanged(bool bHasInteractTarget);
	void OnInteractionProgressChanged(bool bIsProgressingInteraction, float InteractionTotalTime, float InteractionCurrentTime);
	void OnInstigatedHitInfoChanged(const class AActor* NewHitCauser, const class AActor* NewHitReceiver, uint8 NewHitFlags, float NewHitFreezeSeconds);
	void OnReceivedHitInfoChanged(const class AActor* NewHitCauser, uint8 NewHitFlags, float NewHitFreezeSeconds);
	void OnGlitchMarkChanged(bool bNewHasGlitchMark);
	void OnZoneStateChanged(bool bNewInsideZone);
	void OnAliveStateChanged(EAliveState OldAliveState, EAliveState NewAliveState);
	void OnAliveStateInitialized(EAliveState CurrentAliveState);
	void OnStartGlitchCannon();
	void OnInfoChanged__DelegateSignature();
	void ExecuteUbergraph_CharacterRenderer_Base(int32 EntryPoint);

	void SetupIndicatorInstance(class UOdyMinimapIndicatorWidget* IndicatorInstance) const;
	void TickIndicator(class UOdyMinimapIndicatorWidget* WidgetInstance) const;
	struct FVector GetIndicatorWorldExtent() const;
	struct FVector GetIndicatorWorldPosition() const;
	bool ShouldCompassIndicatorBeVisible(class APlayerController* InPlayerController) const;
	bool ShouldIndicatorBeVisible(class APlayerController* InPlayerController) const;
	void UpdateBPOnlyComponentsGameplayVisibility(bool bIsGameplayVisible) const;
	bool IsGameplayVisibleToSpectatedPlayer() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CharacterRenderer_Base_C">();
	}
	static class ACharacterRenderer_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACharacterRenderer_Base_C>();
	}
};
static_assert(alignof(ACharacterRenderer_Base_C) == 0x000008, "Wrong alignment on ACharacterRenderer_Base_C");
static_assert(sizeof(ACharacterRenderer_Base_C) == 0x000C40, "Wrong size on ACharacterRenderer_Base_C");
static_assert(offsetof(ACharacterRenderer_Base_C, UberGraphFrame) == 0x000888, "Member 'ACharacterRenderer_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, TempTooltipCollider) == 0x000890, "Member 'ACharacterRenderer_Base_C::TempTooltipCollider' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, ChannelBarAndPromptsUI) == 0x000898, "Member 'ACharacterRenderer_Base_C::ChannelBarAndPromptsUI' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, TempHeldItemUI) == 0x0008A0, "Member 'ACharacterRenderer_Base_C::TempHeldItemUI' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, VFX_ZipLine_L) == 0x0008A8, "Member 'ACharacterRenderer_Base_C::VFX_ZipLine_L' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, VFX_ZipLine_R) == 0x0008B0, "Member 'ACharacterRenderer_Base_C::VFX_ZipLine_R' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, ButtonWidget) == 0x0008B8, "Member 'ACharacterRenderer_Base_C::ButtonWidget' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, VFX_DataStream) == 0x0008C0, "Member 'ACharacterRenderer_Base_C::VFX_DataStream' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, ProgressNiagara) == 0x0008C8, "Member 'ACharacterRenderer_Base_C::ProgressNiagara' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, ButtonNiagara) == 0x0008D0, "Member 'ACharacterRenderer_Base_C::ButtonNiagara' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, VFX_Knockback) == 0x0008D8, "Member 'ACharacterRenderer_Base_C::VFX_Knockback' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, VFX_GlitchDamage) == 0x0008E0, "Member 'ACharacterRenderer_Base_C::VFX_GlitchDamage' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, VFXSceneRoot) == 0x0008E8, "Member 'ACharacterRenderer_Base_C::VFXSceneRoot' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, VFX_GlitchDrillTell) == 0x0008F0, "Member 'ACharacterRenderer_Base_C::VFX_GlitchDrillTell' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, VFX_Slowed) == 0x0008F8, "Member 'ACharacterRenderer_Base_C::VFX_Slowed' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, VFX_ObscuraPortal) == 0x000900, "Member 'ACharacterRenderer_Base_C::VFX_ObscuraPortal' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, TeamAttackIndicators) == 0x000908, "Member 'ACharacterRenderer_Base_C::TeamAttackIndicators' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, ItemThrowDirectionUI) == 0x000910, "Member 'ACharacterRenderer_Base_C::ItemThrowDirectionUI' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, HealthBar) == 0x000918, "Member 'ACharacterRenderer_Base_C::HealthBar' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, BottomPlate) == 0x000920, "Member 'ACharacterRenderer_Base_C::BottomPlate' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, WorldDynamicCapsule) == 0x000928, "Member 'ACharacterRenderer_Base_C::WorldDynamicCapsule' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, PIO_Collider) == 0x000930, "Member 'ACharacterRenderer_Base_C::PIO_Collider' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, LethalHitIn_In_B7B1A27F4BBF6A54FE223F9EF29D066E) == 0x000938, "Member 'ACharacterRenderer_Base_C::LethalHitIn_In_B7B1A27F4BBF6A54FE223F9EF29D066E' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, LethalHitIn__Direction_B7B1A27F4BBF6A54FE223F9EF29D066E) == 0x00093C, "Member 'ACharacterRenderer_Base_C::LethalHitIn__Direction_B7B1A27F4BBF6A54FE223F9EF29D066E' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, LethalHitIn) == 0x000940, "Member 'ACharacterRenderer_Base_C::LethalHitIn' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, LethalHItOut_Out_D1E296DD4B6A5F5DB5E7BFB20DCBA27F) == 0x000948, "Member 'ACharacterRenderer_Base_C::LethalHItOut_Out_D1E296DD4B6A5F5DB5E7BFB20DCBA27F' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, LethalHItOut__Direction_D1E296DD4B6A5F5DB5E7BFB20DCBA27F) == 0x00094C, "Member 'ACharacterRenderer_Base_C::LethalHItOut__Direction_D1E296DD4B6A5F5DB5E7BFB20DCBA27F' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, LethalHItOut) == 0x000950, "Member 'ACharacterRenderer_Base_C::LethalHItOut' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, Timeline_0_ColorCue_12664CB746713615CC572BB444454742) == 0x000958, "Member 'ACharacterRenderer_Base_C::Timeline_0_ColorCue_12664CB746713615CC572BB444454742' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, Timeline_0_Cue_12664CB746713615CC572BB444454742) == 0x000968, "Member 'ACharacterRenderer_Base_C::Timeline_0_Cue_12664CB746713615CC572BB444454742' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, Timeline_0__Direction_12664CB746713615CC572BB444454742) == 0x00096C, "Member 'ACharacterRenderer_Base_C::Timeline_0__Direction_12664CB746713615CC572BB444454742' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, Timeline_0) == 0x000970, "Member 'ACharacterRenderer_Base_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, Timeline_ColorCue_65B860454D2857E1FC3B85A9D4997C63) == 0x000978, "Member 'ACharacterRenderer_Base_C::Timeline_ColorCue_65B860454D2857E1FC3B85A9D4997C63' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, Timeline_Cue_65B860454D2857E1FC3B85A9D4997C63) == 0x000988, "Member 'ACharacterRenderer_Base_C::Timeline_Cue_65B860454D2857E1FC3B85A9D4997C63' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, Timeline__Direction_65B860454D2857E1FC3B85A9D4997C63) == 0x00098C, "Member 'ACharacterRenderer_Base_C::Timeline__Direction_65B860454D2857E1FC3B85A9D4997C63' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, Timeline) == 0x000990, "Member 'ACharacterRenderer_Base_C::Timeline' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, MinimapIndicatorWidget) == 0x000998, "Member 'ACharacterRenderer_Base_C::MinimapIndicatorWidget' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, OutlineMaterial) == 0x0009A0, "Member 'ACharacterRenderer_Base_C::OutlineMaterial' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, CameraFOV) == 0x0009A8, "Member 'ACharacterRenderer_Base_C::CameraFOV' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, LastTeam) == 0x0009B0, "Member 'ACharacterRenderer_Base_C::LastTeam' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, ShieldMaterial) == 0x0009B8, "Member 'ACharacterRenderer_Base_C::ShieldMaterial' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, OnInfoChanged) == 0x0009C0, "Member 'ACharacterRenderer_Base_C::OnInfoChanged' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, IndicatorsPanel) == 0x0009D0, "Member 'ACharacterRenderer_Base_C::IndicatorsPanel' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, InPlayersTeam) == 0x0009D8, "Member 'ACharacterRenderer_Base_C::InPlayersTeam' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, HurtBallRadius) == 0x0009E0, "Member 'ACharacterRenderer_Base_C::HurtBallRadius' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, HurtBallScale) == 0x0009E8, "Member 'ACharacterRenderer_Base_C::HurtBallScale' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, LastLocation) == 0x0009F0, "Member 'ACharacterRenderer_Base_C::LastLocation' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, MovementDirection) == 0x000A08, "Member 'ACharacterRenderer_Base_C::MovementDirection' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, ReflectionPoint) == 0x000A20, "Member 'ACharacterRenderer_Base_C::ReflectionPoint' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, ReflectionPlaneNormal) == 0x000A38, "Member 'ACharacterRenderer_Base_C::ReflectionPlaneNormal' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, HurtBallMaterial) == 0x000A50, "Member 'ACharacterRenderer_Base_C::HurtBallMaterial' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, ViewingPlayerController) == 0x000A58, "Member 'ACharacterRenderer_Base_C::ViewingPlayerController' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, CameraRotation) == 0x000A60, "Member 'ACharacterRenderer_Base_C::CameraRotation' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, DefaultMaxViewExtents) == 0x000A78, "Member 'ACharacterRenderer_Base_C::DefaultMaxViewExtents' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, DefaultMinViewExtents) == 0x000A90, "Member 'ACharacterRenderer_Base_C::DefaultMinViewExtents' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, CameraAspectRatio) == 0x000AA8, "Member 'ACharacterRenderer_Base_C::CameraAspectRatio' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, CameraCurrentTargetLocation) == 0x000AB0, "Member 'ACharacterRenderer_Base_C::CameraCurrentTargetLocation' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, CameraPreviousTargetLocation) == 0x000AC8, "Member 'ACharacterRenderer_Base_C::CameraPreviousTargetLocation' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, LastKnownCapsuleHalfHeight) == 0x000AE0, "Member 'ACharacterRenderer_Base_C::LastKnownCapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, BottomPlateBlueprint) == 0x000AE8, "Member 'ACharacterRenderer_Base_C::BottomPlateBlueprint' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, TempHeldItemUIBluePrint) == 0x000AF0, "Member 'ACharacterRenderer_Base_C::TempHeldItemUIBluePrint' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, LastTickPosition) == 0x000AF8, "Member 'ACharacterRenderer_Base_C::LastTickPosition' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, LastTickXVelocity) == 0x000B10, "Member 'ACharacterRenderer_Base_C::LastTickXVelocity' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, LastTickZVelocity) == 0x000B18, "Member 'ACharacterRenderer_Base_C::LastTickZVelocity' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, LastDamage) == 0x000B20, "Member 'ACharacterRenderer_Base_C::LastDamage' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, DidAllyOutline) == 0x000B24, "Member 'ACharacterRenderer_Base_C::DidAllyOutline' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, DidEnemyOutline) == 0x000B25, "Member 'ACharacterRenderer_Base_C::DidEnemyOutline' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, OwnerCharacterEntity) == 0x000B28, "Member 'ACharacterRenderer_Base_C::OwnerCharacterEntity' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, IsLocalPlayer) == 0x000B30, "Member 'ACharacterRenderer_Base_C::IsLocalPlayer' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, LastAliveState) == 0x000B31, "Member 'ACharacterRenderer_Base_C::LastAliveState' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, TeamAttackIndicatorsWidget) == 0x000B38, "Member 'ACharacterRenderer_Base_C::TeamAttackIndicatorsWidget' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, EnemiesIndicatorDistance) == 0x000B40, "Member 'ACharacterRenderer_Base_C::EnemiesIndicatorDistance' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, DiveBombMinViewExtents) == 0x000B48, "Member 'ACharacterRenderer_Base_C::DiveBombMinViewExtents' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, DiveBombMaxViewExtents) == 0x000B60, "Member 'ACharacterRenderer_Base_C::DiveBombMaxViewExtents' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, DiveBombVerticalOffSet) == 0x000B78, "Member 'ACharacterRenderer_Base_C::DiveBombVerticalOffSet' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, VFXKnockout) == 0x000B80, "Member 'ACharacterRenderer_Base_C::VFXKnockout' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, CurrentlyOverlappingVisTriggers) == 0x000B88, "Member 'ACharacterRenderer_Base_C::CurrentlyOverlappingVisTriggers' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, InLethalKnockBack) == 0x000B98, "Member 'ACharacterRenderer_Base_C::InLethalKnockBack' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, VFXKnockoutMesh) == 0x000BA0, "Member 'ACharacterRenderer_Base_C::VFXKnockoutMesh' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, HoldingEdibleItem) == 0x000BA8, "Member 'ACharacterRenderer_Base_C::HoldingEdibleItem' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, LastTransversalEntityType) == 0x000BA9, "Member 'ACharacterRenderer_Base_C::LastTransversalEntityType' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, CurrentTransversalEntityType) == 0x000BAA, "Member 'ACharacterRenderer_Base_C::CurrentTransversalEntityType' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, Player_Index) == 0x000BAC, "Member 'ACharacterRenderer_Base_C::Player_Index' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, WasGlitchDashing) == 0x000BB0, "Member 'ACharacterRenderer_Base_C::WasGlitchDashing' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, bHasStartedItemChannel) == 0x000BB1, "Member 'ACharacterRenderer_Base_C::bHasStartedItemChannel' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, ChannelBarAndPromptsUIBP) == 0x000BB8, "Member 'ACharacterRenderer_Base_C::ChannelBarAndPromptsUIBP' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, FaceChanged) == 0x000BC0, "Member 'ACharacterRenderer_Base_C::FaceChanged' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, bHasStartedObscuraPortalSFX) == 0x000BC1, "Member 'ACharacterRenderer_Base_C::bHasStartedObscuraPortalSFX' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, SequencerPlayer) == 0x000BC8, "Member 'ACharacterRenderer_Base_C::SequencerPlayer' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, SequenceActor) == 0x000BD0, "Member 'ACharacterRenderer_Base_C::SequenceActor' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, IsPlayingGlitchLaserCeremony) == 0x000BD8, "Member 'ACharacterRenderer_Base_C::IsPlayingGlitchLaserCeremony' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, GlitchLaserCamera) == 0x000BE0, "Member 'ACharacterRenderer_Base_C::GlitchLaserCamera' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, bPlayedCrackedSFX) == 0x000BE8, "Member 'ACharacterRenderer_Base_C::bPlayedCrackedSFX' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, EnableGlitchLaserCameraZoom) == 0x000BE9, "Member 'ACharacterRenderer_Base_C::EnableGlitchLaserCameraZoom' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, Glitch_Beam_Max_View_Extents) == 0x000BF0, "Member 'ACharacterRenderer_Base_C::Glitch_Beam_Max_View_Extents' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, Glitch_Laser_Min_View_Extents) == 0x000C08, "Member 'ACharacterRenderer_Base_C::Glitch_Laser_Min_View_Extents' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, TooltipUI_IntroDelayTimeSeconds) == 0x000C20, "Member 'ACharacterRenderer_Base_C::TooltipUI_IntroDelayTimeSeconds' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, TooltipUI_OutroDelayTimeSeconds) == 0x000C24, "Member 'ACharacterRenderer_Base_C::TooltipUI_OutroDelayTimeSeconds' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, TooltipUI_IntroDelayTimerHandle) == 0x000C28, "Member 'ACharacterRenderer_Base_C::TooltipUI_IntroDelayTimerHandle' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, TooltipUI_LastHiddenTime) == 0x000C30, "Member 'ACharacterRenderer_Base_C::TooltipUI_LastHiddenTime' has a wrong offset!");
static_assert(offsetof(ACharacterRenderer_Base_C, GlitchBeamSequence) == 0x000C38, "Member 'ACharacterRenderer_Base_C::GlitchBeamSequence' has a wrong offset!");

}

