#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Settings_OptionTypeBase

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_Settings_OptionTypeBase.WBP_Settings_OptionTypeBase_C.ExecuteUbergraph_WBP_Settings_OptionTypeBase
// 0x0140 (0x0140 - 0x0000)
struct WBP_Settings_OptionTypeBase_C_ExecuteUbergraph_WBP_Settings_OptionTypeBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0040(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00B8(0x0078)(ConstParm)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_OptionTypeBase_C_ExecuteUbergraph_WBP_Settings_OptionTypeBase) == 0x000008, "Wrong alignment on WBP_Settings_OptionTypeBase_C_ExecuteUbergraph_WBP_Settings_OptionTypeBase");
static_assert(sizeof(WBP_Settings_OptionTypeBase_C_ExecuteUbergraph_WBP_Settings_OptionTypeBase) == 0x000140, "Wrong size on WBP_Settings_OptionTypeBase_C_ExecuteUbergraph_WBP_Settings_OptionTypeBase");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_ExecuteUbergraph_WBP_Settings_OptionTypeBase, EntryPoint) == 0x000000, "Member 'WBP_Settings_OptionTypeBase_C_ExecuteUbergraph_WBP_Settings_OptionTypeBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_ExecuteUbergraph_WBP_Settings_OptionTypeBase, K2Node_Event_MyGeometry) == 0x000004, "Member 'WBP_Settings_OptionTypeBase_C_ExecuteUbergraph_WBP_Settings_OptionTypeBase::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_ExecuteUbergraph_WBP_Settings_OptionTypeBase, K2Node_Event_MouseEvent_1) == 0x000040, "Member 'WBP_Settings_OptionTypeBase_C_ExecuteUbergraph_WBP_Settings_OptionTypeBase::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_ExecuteUbergraph_WBP_Settings_OptionTypeBase, K2Node_Event_MouseEvent) == 0x0000B8, "Member 'WBP_Settings_OptionTypeBase_C_ExecuteUbergraph_WBP_Settings_OptionTypeBase::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_ExecuteUbergraph_WBP_Settings_OptionTypeBase, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000130, "Member 'WBP_Settings_OptionTypeBase_C_ExecuteUbergraph_WBP_Settings_OptionTypeBase::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_ExecuteUbergraph_WBP_Settings_OptionTypeBase, K2Node_Event_IsDesignTime) == 0x000138, "Member 'WBP_Settings_OptionTypeBase_C_ExecuteUbergraph_WBP_Settings_OptionTypeBase::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_Settings_OptionTypeBase.WBP_Settings_OptionTypeBase_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_Settings_OptionTypeBase_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Settings_OptionTypeBase_C_OnMouseEnter) == 0x000008, "Wrong alignment on WBP_Settings_OptionTypeBase_C_OnMouseEnter");
static_assert(sizeof(WBP_Settings_OptionTypeBase_C_OnMouseEnter) == 0x0000B0, "Wrong size on WBP_Settings_OptionTypeBase_C_OnMouseEnter");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WBP_Settings_OptionTypeBase_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WBP_Settings_OptionTypeBase_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WBP_Settings_OptionTypeBase.WBP_Settings_OptionTypeBase_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct WBP_Settings_OptionTypeBase_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Settings_OptionTypeBase_C_OnMouseLeave) == 0x000008, "Wrong alignment on WBP_Settings_OptionTypeBase_C_OnMouseLeave");
static_assert(sizeof(WBP_Settings_OptionTypeBase_C_OnMouseLeave) == 0x000078, "Wrong size on WBP_Settings_OptionTypeBase_C_OnMouseLeave");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WBP_Settings_OptionTypeBase_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WBP_Settings_OptionTypeBase.WBP_Settings_OptionTypeBase_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Settings_OptionTypeBase_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_OptionTypeBase_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Settings_OptionTypeBase_C_PreConstruct");
static_assert(sizeof(WBP_Settings_OptionTypeBase_C_PreConstruct) == 0x000001, "Wrong size on WBP_Settings_OptionTypeBase_C_PreConstruct");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Settings_OptionTypeBase_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Settings_OptionTypeBase.WBP_Settings_OptionTypeBase_C.SetTitle
// 0x0010 (0x0010 - 0x0000)
struct WBP_Settings_OptionTypeBase_C_SetTitle final
{
public:
	class FText                                   TitleText_0;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Settings_OptionTypeBase_C_SetTitle) == 0x000008, "Wrong alignment on WBP_Settings_OptionTypeBase_C_SetTitle");
static_assert(sizeof(WBP_Settings_OptionTypeBase_C_SetTitle) == 0x000010, "Wrong size on WBP_Settings_OptionTypeBase_C_SetTitle");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_SetTitle, TitleText_0) == 0x000000, "Member 'WBP_Settings_OptionTypeBase_C_SetTitle::TitleText_0' has a wrong offset!");

// Function WBP_Settings_OptionTypeBase.WBP_Settings_OptionTypeBase_C.SetVisual
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_Settings_OptionTypeBase_C_SetVisual final
{
public:
	bool                                          IsSelected;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x006C(0x0014)()
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_OptionTypeBase_C_SetVisual) == 0x000008, "Wrong alignment on WBP_Settings_OptionTypeBase_C_SetVisual");
static_assert(sizeof(WBP_Settings_OptionTypeBase_C_SetVisual) == 0x0000F0, "Wrong size on WBP_Settings_OptionTypeBase_C_SetVisual");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_SetVisual, IsSelected) == 0x000000, "Member 'WBP_Settings_OptionTypeBase_C_SetVisual::IsSelected' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_SetVisual, Temp_bool_Variable) == 0x000001, "Member 'WBP_Settings_OptionTypeBase_C_SetVisual::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_SetVisual, Temp_struct_Variable) == 0x000004, "Member 'WBP_Settings_OptionTypeBase_C_SetVisual::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_SetVisual, Temp_struct_Variable_1) == 0x000014, "Member 'WBP_Settings_OptionTypeBase_C_SetVisual::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_SetVisual, Temp_bool_Variable_1) == 0x000024, "Member 'WBP_Settings_OptionTypeBase_C_SetVisual::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_SetVisual, K2Node_Select_Default) == 0x000028, "Member 'WBP_Settings_OptionTypeBase_C_SetVisual::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_SetVisual, Temp_struct_Variable_2) == 0x000038, "Member 'WBP_Settings_OptionTypeBase_C_SetVisual::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_SetVisual, Temp_struct_Variable_3) == 0x000048, "Member 'WBP_Settings_OptionTypeBase_C_SetVisual::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_SetVisual, Temp_bool_Variable_2) == 0x000058, "Member 'WBP_Settings_OptionTypeBase_C_SetVisual::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_SetVisual, K2Node_Select_Default_1) == 0x00005C, "Member 'WBP_Settings_OptionTypeBase_C_SetVisual::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_SetVisual, K2Node_MakeStruct_SlateColor) == 0x00006C, "Member 'WBP_Settings_OptionTypeBase_C_SetVisual::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_SetVisual, Temp_struct_Variable_4) == 0x000080, "Member 'WBP_Settings_OptionTypeBase_C_SetVisual::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_SetVisual, Temp_struct_Variable_5) == 0x000090, "Member 'WBP_Settings_OptionTypeBase_C_SetVisual::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_SetVisual, Temp_struct_Variable_6) == 0x0000A0, "Member 'WBP_Settings_OptionTypeBase_C_SetVisual::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_SetVisual, K2Node_Select_Default_2) == 0x0000B0, "Member 'WBP_Settings_OptionTypeBase_C_SetVisual::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_SetVisual, Temp_struct_Variable_7) == 0x0000C0, "Member 'WBP_Settings_OptionTypeBase_C_SetVisual::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_SetVisual, Temp_bool_Variable_3) == 0x0000D0, "Member 'WBP_Settings_OptionTypeBase_C_SetVisual::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_SetVisual, K2Node_Select_Default_3) == 0x0000D4, "Member 'WBP_Settings_OptionTypeBase_C_SetVisual::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionTypeBase_C_SetVisual, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000E8, "Member 'WBP_Settings_OptionTypeBase_C_SetVisual::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

}

