#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TeammateUI

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_TeammateUI.WBP_TeammateUI_C.BindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_TeammateUI_C_BindData final
{
public:
	class UOdyUIData*                             NewUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TeammateUI_C_BindData) == 0x000008, "Wrong alignment on WBP_TeammateUI_C_BindData");
static_assert(sizeof(WBP_TeammateUI_C_BindData) == 0x000008, "Wrong size on WBP_TeammateUI_C_BindData");
static_assert(offsetof(WBP_TeammateUI_C_BindData, NewUIData) == 0x000000, "Member 'WBP_TeammateUI_C_BindData::NewUIData' has a wrong offset!");

// Function WBP_TeammateUI.WBP_TeammateUI_C.ExecuteUbergraph_WBP_TeammateUI
// 0x0038 (0x0038 - 0x0000)
struct WBP_TeammateUI_C_ExecuteUbergraph_WBP_TeammateUI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             K2Node_Event_OldUIData;                            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaGameWorldUIData*                 K2Node_DynamicCast_AsMatcha_Game_World_UI_Data;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             K2Node_Event_NewUIData;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaGameWorldUIData*                 K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_1;  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TeammateUI_C_ExecuteUbergraph_WBP_TeammateUI) == 0x000008, "Wrong alignment on WBP_TeammateUI_C_ExecuteUbergraph_WBP_TeammateUI");
static_assert(sizeof(WBP_TeammateUI_C_ExecuteUbergraph_WBP_TeammateUI) == 0x000038, "Wrong size on WBP_TeammateUI_C_ExecuteUbergraph_WBP_TeammateUI");
static_assert(offsetof(WBP_TeammateUI_C_ExecuteUbergraph_WBP_TeammateUI, EntryPoint) == 0x000000, "Member 'WBP_TeammateUI_C_ExecuteUbergraph_WBP_TeammateUI::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TeammateUI_C_ExecuteUbergraph_WBP_TeammateUI, K2Node_Event_OldUIData) == 0x000008, "Member 'WBP_TeammateUI_C_ExecuteUbergraph_WBP_TeammateUI::K2Node_Event_OldUIData' has a wrong offset!");
static_assert(offsetof(WBP_TeammateUI_C_ExecuteUbergraph_WBP_TeammateUI, K2Node_DynamicCast_AsMatcha_Game_World_UI_Data) == 0x000010, "Member 'WBP_TeammateUI_C_ExecuteUbergraph_WBP_TeammateUI::K2Node_DynamicCast_AsMatcha_Game_World_UI_Data' has a wrong offset!");
static_assert(offsetof(WBP_TeammateUI_C_ExecuteUbergraph_WBP_TeammateUI, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_TeammateUI_C_ExecuteUbergraph_WBP_TeammateUI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TeammateUI_C_ExecuteUbergraph_WBP_TeammateUI, K2Node_Event_NewUIData) == 0x000020, "Member 'WBP_TeammateUI_C_ExecuteUbergraph_WBP_TeammateUI::K2Node_Event_NewUIData' has a wrong offset!");
static_assert(offsetof(WBP_TeammateUI_C_ExecuteUbergraph_WBP_TeammateUI, K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_1) == 0x000028, "Member 'WBP_TeammateUI_C_ExecuteUbergraph_WBP_TeammateUI::K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_1' has a wrong offset!");
static_assert(offsetof(WBP_TeammateUI_C_ExecuteUbergraph_WBP_TeammateUI, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WBP_TeammateUI_C_ExecuteUbergraph_WBP_TeammateUI::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WBP_TeammateUI.WBP_TeammateUI_C.Set Player UI
// 0x0038 (0x0038 - 0x0000)
struct WBP_TeammateUI_C_Set_Player_UI final
{
public:
	class UWBP_PlayerUI_C*                        PlayerUIRef;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AllyNum;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMatchaPlayerUIData*                    InputUIData;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TeammateUI_C_Set_Player_UI) == 0x000008, "Wrong alignment on WBP_TeammateUI_C_Set_Player_UI");
static_assert(sizeof(WBP_TeammateUI_C_Set_Player_UI) == 0x000038, "Wrong size on WBP_TeammateUI_C_Set_Player_UI");
static_assert(offsetof(WBP_TeammateUI_C_Set_Player_UI, PlayerUIRef) == 0x000000, "Member 'WBP_TeammateUI_C_Set_Player_UI::PlayerUIRef' has a wrong offset!");
static_assert(offsetof(WBP_TeammateUI_C_Set_Player_UI, IsValid) == 0x000008, "Member 'WBP_TeammateUI_C_Set_Player_UI::IsValid' has a wrong offset!");
static_assert(offsetof(WBP_TeammateUI_C_Set_Player_UI, AllyNum) == 0x00000C, "Member 'WBP_TeammateUI_C_Set_Player_UI::AllyNum' has a wrong offset!");
static_assert(offsetof(WBP_TeammateUI_C_Set_Player_UI, InputUIData) == 0x000010, "Member 'WBP_TeammateUI_C_Set_Player_UI::InputUIData' has a wrong offset!");
static_assert(offsetof(WBP_TeammateUI_C_Set_Player_UI, Temp_int_Variable) == 0x000018, "Member 'WBP_TeammateUI_C_Set_Player_UI::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TeammateUI_C_Set_Player_UI, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_TeammateUI_C_Set_Player_UI::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TeammateUI_C_Set_Player_UI, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00001D, "Member 'WBP_TeammateUI_C_Set_Player_UI::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TeammateUI_C_Set_Player_UI, Temp_int_Variable_1) == 0x000020, "Member 'WBP_TeammateUI_C_Set_Player_UI::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TeammateUI_C_Set_Player_UI, K2Node_Select_Default) == 0x000028, "Member 'WBP_TeammateUI_C_Set_Player_UI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_TeammateUI_C_Set_Player_UI, K2Node_Select_Default_1) == 0x000030, "Member 'WBP_TeammateUI_C_Set_Player_UI::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_TeammateUI.WBP_TeammateUI_C.UnbindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_TeammateUI_C_UnbindData final
{
public:
	class UOdyUIData*                             OldUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TeammateUI_C_UnbindData) == 0x000008, "Wrong alignment on WBP_TeammateUI_C_UnbindData");
static_assert(sizeof(WBP_TeammateUI_C_UnbindData) == 0x000008, "Wrong size on WBP_TeammateUI_C_UnbindData");
static_assert(offsetof(WBP_TeammateUI_C_UnbindData, OldUIData) == 0x000000, "Member 'WBP_TeammateUI_C_UnbindData::OldUIData' has a wrong offset!");

}

