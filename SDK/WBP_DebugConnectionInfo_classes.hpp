#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DebugConnectionInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "OdyUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_DebugConnectionInfo.WBP_DebugConnectionInfo_C
// 0x0090 (0x0428 - 0x0398)
class UWBP_DebugConnectionInfo_C final : public UOdyWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0398(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UOdyTextBlock*                          FrameTimeText;                                     // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOdyTextBlock*                          InputDelayText;                                    // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOdyTextBlock*                          JitterText;                                        // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOdyTextBlock*                          LatencyText;                                       // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOdyTextBlock*                          MatchState;                                        // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOdyTextBlock*                          PacketLossText;                                    // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOdyTextBlock*                          PlayerId;                                          // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOdyTextBlock*                          PredictedText;                                     // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOdyTextBlock*                          VersionText;                                       // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            GoodColor;                                         // 0x03E8(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            WarningColor;                                      // 0x03FC(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            BadColor;                                          // 0x0410(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BindData(class UOdyUIData* NewUIData);
	void ExecuteUbergraph_WBP_DebugConnectionInfo(int32 EntryPoint);
	void OnFrameTimeChanged(float OldValue, float NewValue);
	void OnInitialized();
	void OnJitterChanged(float OldValue, float NewValue);
	void OnLatencyChanged(float OldValue, float NewValue);
	void OnPacketLossChanged(float OldValue, float NewValue);
	void OnPlayerIdChanged(class FName OldValue, class FName NewValue);
	void UnbindData(class UOdyUIData* OldUIData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_DebugConnectionInfo_C">();
	}
	static class UWBP_DebugConnectionInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_DebugConnectionInfo_C>();
	}
};
static_assert(alignof(UWBP_DebugConnectionInfo_C) == 0x000008, "Wrong alignment on UWBP_DebugConnectionInfo_C");
static_assert(sizeof(UWBP_DebugConnectionInfo_C) == 0x000428, "Wrong size on UWBP_DebugConnectionInfo_C");
static_assert(offsetof(UWBP_DebugConnectionInfo_C, UberGraphFrame) == 0x000398, "Member 'UWBP_DebugConnectionInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_DebugConnectionInfo_C, FrameTimeText) == 0x0003A0, "Member 'UWBP_DebugConnectionInfo_C::FrameTimeText' has a wrong offset!");
static_assert(offsetof(UWBP_DebugConnectionInfo_C, InputDelayText) == 0x0003A8, "Member 'UWBP_DebugConnectionInfo_C::InputDelayText' has a wrong offset!");
static_assert(offsetof(UWBP_DebugConnectionInfo_C, JitterText) == 0x0003B0, "Member 'UWBP_DebugConnectionInfo_C::JitterText' has a wrong offset!");
static_assert(offsetof(UWBP_DebugConnectionInfo_C, LatencyText) == 0x0003B8, "Member 'UWBP_DebugConnectionInfo_C::LatencyText' has a wrong offset!");
static_assert(offsetof(UWBP_DebugConnectionInfo_C, MatchState) == 0x0003C0, "Member 'UWBP_DebugConnectionInfo_C::MatchState' has a wrong offset!");
static_assert(offsetof(UWBP_DebugConnectionInfo_C, PacketLossText) == 0x0003C8, "Member 'UWBP_DebugConnectionInfo_C::PacketLossText' has a wrong offset!");
static_assert(offsetof(UWBP_DebugConnectionInfo_C, PlayerId) == 0x0003D0, "Member 'UWBP_DebugConnectionInfo_C::PlayerId' has a wrong offset!");
static_assert(offsetof(UWBP_DebugConnectionInfo_C, PredictedText) == 0x0003D8, "Member 'UWBP_DebugConnectionInfo_C::PredictedText' has a wrong offset!");
static_assert(offsetof(UWBP_DebugConnectionInfo_C, VersionText) == 0x0003E0, "Member 'UWBP_DebugConnectionInfo_C::VersionText' has a wrong offset!");
static_assert(offsetof(UWBP_DebugConnectionInfo_C, GoodColor) == 0x0003E8, "Member 'UWBP_DebugConnectionInfo_C::GoodColor' has a wrong offset!");
static_assert(offsetof(UWBP_DebugConnectionInfo_C, WarningColor) == 0x0003FC, "Member 'UWBP_DebugConnectionInfo_C::WarningColor' has a wrong offset!");
static_assert(offsetof(UWBP_DebugConnectionInfo_C, BadColor) == 0x000410, "Member 'UWBP_DebugConnectionInfo_C::BadColor' has a wrong offset!");

}

