#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: E_Trap_FreezeGrenadeZone

#include "Basic.hpp"


namespace SDK::Params
{

// Function E_Trap_FreezeGrenadeZone.E_Trap_FreezeGrenadeZone_C.ExecuteUbergraph_E_Trap_FreezeGrenadeZone
// 0x0040 (0x0040 - 0x0000)
struct E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AMatchaSnapNetCharacterEntity*>  CallFunc_GetOverlappingCharacters_ReturnValue;     // 0x0010(0x0010)(ReferenceParm)
	class AMatchaSnapNetCharacterEntity*          CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMatchaSnapNetCharacterEntity*          K2Node_Event_OverlappedCharacter_1;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMatchaSnapNetCharacterEntity*          K2Node_Event_OverlappedCharacter;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone) == 0x000008, "Wrong alignment on E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone");
static_assert(sizeof(E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone) == 0x000040, "Wrong size on E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone");
static_assert(offsetof(E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone, EntryPoint) == 0x000000, "Member 'E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone::EntryPoint' has a wrong offset!");
static_assert(offsetof(E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone, Temp_int_Array_Index_Variable) == 0x000004, "Member 'E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone, CallFunc_GetOverlappingCharacters_ReturnValue) == 0x000010, "Member 'E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone::CallFunc_GetOverlappingCharacters_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone, CallFunc_Array_Get_Item) == 0x000020, "Member 'E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone, K2Node_Event_OverlappedCharacter_1) == 0x000030, "Member 'E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone::K2Node_Event_OverlappedCharacter_1' has a wrong offset!");
static_assert(offsetof(E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone, K2Node_Event_OverlappedCharacter) == 0x000038, "Member 'E_Trap_FreezeGrenadeZone_C_ExecuteUbergraph_E_Trap_FreezeGrenadeZone::K2Node_Event_OverlappedCharacter' has a wrong offset!");

// Function E_Trap_FreezeGrenadeZone.E_Trap_FreezeGrenadeZone_C.OnCharacterOverlapEnded
// 0x0008 (0x0008 - 0x0000)
struct E_Trap_FreezeGrenadeZone_C_OnCharacterOverlapEnded final
{
public:
	class AMatchaSnapNetCharacterEntity*          OverlappedCharacter;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(E_Trap_FreezeGrenadeZone_C_OnCharacterOverlapEnded) == 0x000008, "Wrong alignment on E_Trap_FreezeGrenadeZone_C_OnCharacterOverlapEnded");
static_assert(sizeof(E_Trap_FreezeGrenadeZone_C_OnCharacterOverlapEnded) == 0x000008, "Wrong size on E_Trap_FreezeGrenadeZone_C_OnCharacterOverlapEnded");
static_assert(offsetof(E_Trap_FreezeGrenadeZone_C_OnCharacterOverlapEnded, OverlappedCharacter) == 0x000000, "Member 'E_Trap_FreezeGrenadeZone_C_OnCharacterOverlapEnded::OverlappedCharacter' has a wrong offset!");

// Function E_Trap_FreezeGrenadeZone.E_Trap_FreezeGrenadeZone_C.OnCharacterOverlapStarted
// 0x0008 (0x0008 - 0x0000)
struct E_Trap_FreezeGrenadeZone_C_OnCharacterOverlapStarted final
{
public:
	class AMatchaSnapNetCharacterEntity*          OverlappedCharacter;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(E_Trap_FreezeGrenadeZone_C_OnCharacterOverlapStarted) == 0x000008, "Wrong alignment on E_Trap_FreezeGrenadeZone_C_OnCharacterOverlapStarted");
static_assert(sizeof(E_Trap_FreezeGrenadeZone_C_OnCharacterOverlapStarted) == 0x000008, "Wrong size on E_Trap_FreezeGrenadeZone_C_OnCharacterOverlapStarted");
static_assert(offsetof(E_Trap_FreezeGrenadeZone_C_OnCharacterOverlapStarted, OverlappedCharacter) == 0x000000, "Member 'E_Trap_FreezeGrenadeZone_C_OnCharacterOverlapStarted::OverlappedCharacter' has a wrong offset!");

}

