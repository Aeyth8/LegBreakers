#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BUF_Hack_CoreStrikeGlove

#include "Basic.hpp"

#include "Matcha_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BUF_Hack_CoreStrikeGlove.BUF_Hack_CoreStrikeGlove_C.IsAnySmashAttackMontage
// 0x0007 (0x0007 - 0x0000)
struct BUF_Hack_CoreStrikeGlove_C_IsAnySmashAttackMontage final
{
public:
	EMatchaCharacterMontageType                   MontageType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSmashMontage;                                    // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BUF_Hack_CoreStrikeGlove_C_IsAnySmashAttackMontage) == 0x000001, "Wrong alignment on BUF_Hack_CoreStrikeGlove_C_IsAnySmashAttackMontage");
static_assert(sizeof(BUF_Hack_CoreStrikeGlove_C_IsAnySmashAttackMontage) == 0x000007, "Wrong size on BUF_Hack_CoreStrikeGlove_C_IsAnySmashAttackMontage");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_IsAnySmashAttackMontage, MontageType) == 0x000000, "Member 'BUF_Hack_CoreStrikeGlove_C_IsAnySmashAttackMontage::MontageType' has a wrong offset!");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_IsAnySmashAttackMontage, IsSmashMontage) == 0x000001, "Member 'BUF_Hack_CoreStrikeGlove_C_IsAnySmashAttackMontage::IsSmashMontage' has a wrong offset!");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_IsAnySmashAttackMontage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BUF_Hack_CoreStrikeGlove_C_IsAnySmashAttackMontage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_IsAnySmashAttackMontage, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'BUF_Hack_CoreStrikeGlove_C_IsAnySmashAttackMontage::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_IsAnySmashAttackMontage, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000004, "Member 'BUF_Hack_CoreStrikeGlove_C_IsAnySmashAttackMontage::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_IsAnySmashAttackMontage, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'BUF_Hack_CoreStrikeGlove_C_IsAnySmashAttackMontage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_IsAnySmashAttackMontage, CallFunc_BooleanOR_ReturnValue_1) == 0x000006, "Member 'BUF_Hack_CoreStrikeGlove_C_IsAnySmashAttackMontage::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BUF_Hack_CoreStrikeGlove.BUF_Hack_CoreStrikeGlove_C.OnBuffApplied
// 0x0010 (0x0010 - 0x0000)
struct BUF_Hack_CoreStrikeGlove_C_OnBuffApplied final
{
public:
	class AMatchaSnapNetCharacterEntity*          BuffedCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EObjectRarity                                 BuffRarity;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BUF_Hack_CoreStrikeGlove_C_OnBuffApplied) == 0x000008, "Wrong alignment on BUF_Hack_CoreStrikeGlove_C_OnBuffApplied");
static_assert(sizeof(BUF_Hack_CoreStrikeGlove_C_OnBuffApplied) == 0x000010, "Wrong size on BUF_Hack_CoreStrikeGlove_C_OnBuffApplied");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_OnBuffApplied, BuffedCharacter) == 0x000000, "Member 'BUF_Hack_CoreStrikeGlove_C_OnBuffApplied::BuffedCharacter' has a wrong offset!");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_OnBuffApplied, BuffRarity) == 0x000008, "Member 'BUF_Hack_CoreStrikeGlove_C_OnBuffApplied::BuffRarity' has a wrong offset!");

// Function BUF_Hack_CoreStrikeGlove.BUF_Hack_CoreStrikeGlove_C.OnBuffRemoved
// 0x0010 (0x0010 - 0x0000)
struct BUF_Hack_CoreStrikeGlove_C_OnBuffRemoved final
{
public:
	class AMatchaSnapNetCharacterEntity*          BuffedCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EObjectRarity                                 BuffRarity;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BUF_Hack_CoreStrikeGlove_C_OnBuffRemoved) == 0x000008, "Wrong alignment on BUF_Hack_CoreStrikeGlove_C_OnBuffRemoved");
static_assert(sizeof(BUF_Hack_CoreStrikeGlove_C_OnBuffRemoved) == 0x000010, "Wrong size on BUF_Hack_CoreStrikeGlove_C_OnBuffRemoved");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_OnBuffRemoved, BuffedCharacter) == 0x000000, "Member 'BUF_Hack_CoreStrikeGlove_C_OnBuffRemoved::BuffedCharacter' has a wrong offset!");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_OnBuffRemoved, BuffRarity) == 0x000008, "Member 'BUF_Hack_CoreStrikeGlove_C_OnBuffRemoved::BuffRarity' has a wrong offset!");

// Function BUF_Hack_CoreStrikeGlove.BUF_Hack_CoreStrikeGlove_C.OnCharacterMontageStart
// 0x0010 (0x0010 - 0x0000)
struct BUF_Hack_CoreStrikeGlove_C_OnCharacterMontageStart final
{
public:
	class AMatchaSnapNetCharacterEntity*          BuffedCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         MontageDuration;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMatchaCharacterMontageType                   MontageType;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMatchaCharacterMontageType                   PreviousMontageType;                               // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EObjectRarity                                 BuffRarity;                                        // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnySmashAttackMontage_IsSmashMontage;   // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BUF_Hack_CoreStrikeGlove_C_OnCharacterMontageStart) == 0x000008, "Wrong alignment on BUF_Hack_CoreStrikeGlove_C_OnCharacterMontageStart");
static_assert(sizeof(BUF_Hack_CoreStrikeGlove_C_OnCharacterMontageStart) == 0x000010, "Wrong size on BUF_Hack_CoreStrikeGlove_C_OnCharacterMontageStart");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_OnCharacterMontageStart, BuffedCharacter) == 0x000000, "Member 'BUF_Hack_CoreStrikeGlove_C_OnCharacterMontageStart::BuffedCharacter' has a wrong offset!");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_OnCharacterMontageStart, MontageDuration) == 0x000008, "Member 'BUF_Hack_CoreStrikeGlove_C_OnCharacterMontageStart::MontageDuration' has a wrong offset!");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_OnCharacterMontageStart, MontageType) == 0x00000C, "Member 'BUF_Hack_CoreStrikeGlove_C_OnCharacterMontageStart::MontageType' has a wrong offset!");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_OnCharacterMontageStart, PreviousMontageType) == 0x00000D, "Member 'BUF_Hack_CoreStrikeGlove_C_OnCharacterMontageStart::PreviousMontageType' has a wrong offset!");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_OnCharacterMontageStart, BuffRarity) == 0x00000E, "Member 'BUF_Hack_CoreStrikeGlove_C_OnCharacterMontageStart::BuffRarity' has a wrong offset!");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_OnCharacterMontageStart, CallFunc_IsAnySmashAttackMontage_IsSmashMontage) == 0x00000F, "Member 'BUF_Hack_CoreStrikeGlove_C_OnCharacterMontageStart::CallFunc_IsAnySmashAttackMontage_IsSmashMontage' has a wrong offset!");

// Function BUF_Hack_CoreStrikeGlove.BUF_Hack_CoreStrikeGlove_C.OnMontageSpawnedHitBox
// 0x00B8 (0x00B8 - 0x0000)
struct BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox final
{
public:
	class AMatchaSnapNetCharacterEntity*          BuffedCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMatchaCharacterMontageType                   MontageType;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MontageHitBoxCount;                                // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EObjectRarity                                 BuffRarity;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnySmashAttackMontage_IsSmashMontage;   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCombinedFXInfo                        K2Node_MakeStruct_CombinedFXInfo;                  // 0x0030(0x0088)(NoDestructor)
};
static_assert(alignof(BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox) == 0x000008, "Wrong alignment on BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox");
static_assert(sizeof(BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox) == 0x0000B8, "Wrong size on BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox, BuffedCharacter) == 0x000000, "Member 'BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox::BuffedCharacter' has a wrong offset!");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox, MontageType) == 0x000008, "Member 'BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox::MontageType' has a wrong offset!");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox, MontageHitBoxCount) == 0x00000C, "Member 'BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox::MontageHitBoxCount' has a wrong offset!");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox, BuffRarity) == 0x000010, "Member 'BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox::BuffRarity' has a wrong offset!");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000011, "Member 'BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox, CallFunc_IsAnySmashAttackMontage_IsSmashMontage) == 0x000012, "Member 'BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox::CallFunc_IsAnySmashAttackMontage_IsSmashMontage' has a wrong offset!");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox, K2Node_MakeStruct_CombinedFXInfo) == 0x000030, "Member 'BUF_Hack_CoreStrikeGlove_C_OnMontageSpawnedHitBox::K2Node_MakeStruct_CombinedFXInfo' has a wrong offset!");

}

