#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Gear_Inventory

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WBP_Gear_Inventory.WBP_Gear_Inventory_C.BindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_Gear_Inventory_C_BindData final
{
public:
	class UOdyUIData*                             NewUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Gear_Inventory_C_BindData) == 0x000008, "Wrong alignment on WBP_Gear_Inventory_C_BindData");
static_assert(sizeof(WBP_Gear_Inventory_C_BindData) == 0x000008, "Wrong size on WBP_Gear_Inventory_C_BindData");
static_assert(offsetof(WBP_Gear_Inventory_C_BindData, NewUIData) == 0x000000, "Member 'WBP_Gear_Inventory_C_BindData::NewUIData' has a wrong offset!");

// Function WBP_Gear_Inventory.WBP_Gear_Inventory_C.ExecuteUbergraph_WBP_Gear_Inventory
// 0x0138 (0x0138 - 0x0000)
struct WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0008(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	class UOdyUIData*                             K2Node_Event_NewUIData;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOdyUIData*                             K2Node_Event_OldUIData;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaInventoryUIData*                 K2Node_DynamicCast_AsMatcha_Inventory_UI_Data;     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventoryUIData*                 K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_1;   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CallFunc_Map_Keys_Keys;                            // 0x0050(0x0010)(ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventorySlot_C*                   CallFunc_Map_Find_Value;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool NewEnergizedState)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             CallFunc_GetUIData_ReturnValue;                    // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaInventoryUIData*                 K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_2;   // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnergized_bIsEnergized;                 // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventoryCategoryUIData*         CallFunc_Map_Find_Value_1;                         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnergized_bIsEnergized_1;               // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventorySlotUIData*             CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnergized_bIsEnergized_2;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewEnergizedState_2;            // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewEnergizedState_1;            // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewEnergizedState;              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool NewEnergizedState)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x00E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool NewEnergizedState)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOdyUIData*                             CallFunc_GetUIData_ReturnValue_1;                  // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaInventoryUIData*                 K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_3;   // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventoryCategoryUIData*         CallFunc_Map_Find_Value_2;                         // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventorySlotUIData*             CallFunc_Array_Get_Item_2;                         // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoolBinding_GetValue_ReturnValue;         // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanNAND_ReturnValue;                  // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory) == 0x000008, "Wrong alignment on WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory");
static_assert(sizeof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory) == 0x000138, "Wrong size on WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, EntryPoint) == 0x000000, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, Temp_struct_Variable) == 0x000008, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, K2Node_Event_NewUIData) == 0x000010, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::K2Node_Event_NewUIData' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, K2Node_Event_OldUIData) == 0x000018, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::K2Node_Event_OldUIData' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, K2Node_DynamicCast_AsMatcha_Inventory_UI_Data) == 0x000020, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::K2Node_DynamicCast_AsMatcha_Inventory_UI_Data' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_1) == 0x000030, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_1' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_Map_Keys_Keys) == 0x000050, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_Array_Get_Item) == 0x000060, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, K2Node_CreateDelegate_OutputDelegate_1) == 0x000074, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_Map_Find_Value) == 0x000088, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_Map_Find_ReturnValue) == 0x000090, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, K2Node_CreateDelegate_OutputDelegate_2) == 0x000094, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_GetUIData_ReturnValue) == 0x0000A8, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_GetUIData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_2) == 0x0000B0, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_2' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, K2Node_DynamicCast_bSuccess_2) == 0x0000B8, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_IsEnergized_bIsEnergized) == 0x0000B9, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_IsEnergized_bIsEnergized' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_Map_Find_Value_1) == 0x0000C0, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_Map_Find_ReturnValue_1) == 0x0000C8, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_IsValid_ReturnValue) == 0x0000C9, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_IsEnergized_bIsEnergized_1) == 0x0000CA, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_IsEnergized_bIsEnergized_1' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_IsEnergized_bIsEnergized_2) == 0x0000D8, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_IsEnergized_bIsEnergized_2' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000D9, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, K2Node_CustomEvent_NewEnergizedState_2) == 0x0000DA, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::K2Node_CustomEvent_NewEnergizedState_2' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, K2Node_CustomEvent_NewEnergizedState_1) == 0x0000DB, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::K2Node_CustomEvent_NewEnergizedState_1' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, K2Node_CustomEvent_NewEnergizedState) == 0x0000DC, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::K2Node_CustomEvent_NewEnergizedState' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000E0, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000F0, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_GetUIData_ReturnValue_1) == 0x000100, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_GetUIData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_3) == 0x000108, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_3' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, K2Node_DynamicCast_bSuccess_3) == 0x000110, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_Map_Find_Value_2) == 0x000118, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_Map_Find_ReturnValue_2) == 0x000120, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_Array_Get_Item_2) == 0x000128, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_BoolBinding_GetValue_ReturnValue) == 0x000130, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_BoolBinding_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory, CallFunc_BooleanNAND_ReturnValue) == 0x000131, "Member 'WBP_Gear_Inventory_C_ExecuteUbergraph_WBP_Gear_Inventory::CallFunc_BooleanNAND_ReturnValue' has a wrong offset!");

// Function WBP_Gear_Inventory.WBP_Gear_Inventory_C.OnBodySlotEnergizedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_Gear_Inventory_C_OnBodySlotEnergizedChanged final
{
public:
	bool                                          NewEnergizedState;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Gear_Inventory_C_OnBodySlotEnergizedChanged) == 0x000001, "Wrong alignment on WBP_Gear_Inventory_C_OnBodySlotEnergizedChanged");
static_assert(sizeof(WBP_Gear_Inventory_C_OnBodySlotEnergizedChanged) == 0x000001, "Wrong size on WBP_Gear_Inventory_C_OnBodySlotEnergizedChanged");
static_assert(offsetof(WBP_Gear_Inventory_C_OnBodySlotEnergizedChanged, NewEnergizedState) == 0x000000, "Member 'WBP_Gear_Inventory_C_OnBodySlotEnergizedChanged::NewEnergizedState' has a wrong offset!");

// Function WBP_Gear_Inventory.WBP_Gear_Inventory_C.OnFeetSlotEnergizedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_Gear_Inventory_C_OnFeetSlotEnergizedChanged final
{
public:
	bool                                          NewEnergizedState;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Gear_Inventory_C_OnFeetSlotEnergizedChanged) == 0x000001, "Wrong alignment on WBP_Gear_Inventory_C_OnFeetSlotEnergizedChanged");
static_assert(sizeof(WBP_Gear_Inventory_C_OnFeetSlotEnergizedChanged) == 0x000001, "Wrong size on WBP_Gear_Inventory_C_OnFeetSlotEnergizedChanged");
static_assert(offsetof(WBP_Gear_Inventory_C_OnFeetSlotEnergizedChanged, NewEnergizedState) == 0x000000, "Member 'WBP_Gear_Inventory_C_OnFeetSlotEnergizedChanged::NewEnergizedState' has a wrong offset!");

// Function WBP_Gear_Inventory.WBP_Gear_Inventory_C.OnHandsSlotEnergizedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_Gear_Inventory_C_OnHandsSlotEnergizedChanged final
{
public:
	bool                                          NewEnergizedState;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Gear_Inventory_C_OnHandsSlotEnergizedChanged) == 0x000001, "Wrong alignment on WBP_Gear_Inventory_C_OnHandsSlotEnergizedChanged");
static_assert(sizeof(WBP_Gear_Inventory_C_OnHandsSlotEnergizedChanged) == 0x000001, "Wrong size on WBP_Gear_Inventory_C_OnHandsSlotEnergizedChanged");
static_assert(offsetof(WBP_Gear_Inventory_C_OnHandsSlotEnergizedChanged, NewEnergizedState) == 0x000000, "Member 'WBP_Gear_Inventory_C_OnHandsSlotEnergizedChanged::NewEnergizedState' has a wrong offset!");

// Function WBP_Gear_Inventory.WBP_Gear_Inventory_C.Set Hack Slot Visibility
// 0x0028 (0x0028 - 0x0000)
struct WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility final
{
public:
	bool                                          bIsEmpty;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility) == 0x000008, "Wrong alignment on WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility");
static_assert(sizeof(WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility) == 0x000028, "Wrong size on WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility");
static_assert(offsetof(WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility, bIsEmpty) == 0x000000, "Member 'WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility::bIsEmpty' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility, Temp_bool_Variable) == 0x000001, "Member 'WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility, Temp_byte_Variable) == 0x000002, "Member 'WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility, Temp_bool_Variable_1) == 0x000004, "Member 'WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility, K2Node_Select_Default) == 0x000005, "Member 'WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility, Temp_real_Variable) == 0x000008, "Member 'WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility, Temp_real_Variable_1) == 0x00000C, "Member 'WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility, K2Node_Select_Default_1) == 0x000010, "Member 'WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000018, "Member 'WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility, CallFunc_PlayAnimationForward_ReturnValue) == 0x000020, "Member 'WBP_Gear_Inventory_C_Set_Hack_Slot_Visibility::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_Gear_Inventory.WBP_Gear_Inventory_C.UnbindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_Gear_Inventory_C_UnbindData final
{
public:
	class UOdyUIData*                             OldUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Gear_Inventory_C_UnbindData) == 0x000008, "Wrong alignment on WBP_Gear_Inventory_C_UnbindData");
static_assert(sizeof(WBP_Gear_Inventory_C_UnbindData) == 0x000008, "Wrong size on WBP_Gear_Inventory_C_UnbindData");
static_assert(offsetof(WBP_Gear_Inventory_C_UnbindData, OldUIData) == 0x000000, "Member 'WBP_Gear_Inventory_C_UnbindData::OldUIData' has a wrong offset!");

}

