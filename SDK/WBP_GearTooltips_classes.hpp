#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GearTooltips

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OdyUI_structs.hpp"
#include "OdyUI_classes.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_GearTooltips.WBP_GearTooltips_C
// 0x0188 (0x0520 - 0x0398)
class UWBP_GearTooltips_C final : public UOdyWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0398(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             BodyOverloadedDescription;                         // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           BodyOverloadedPanel;                               // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventorySlot_C*                   BodySlot;                                          // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BodyToolTIp;                                       // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BootsOverloadedDescription;                        // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           BootsOverloadedPanel;                              // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BootsToolTip;                                      // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventorySlot_C*                   FeetSlot;                                          // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               GearTooltipOverlay;                                // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             GlovesToolTip;                                     // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventorySlot_C*                   HackSlot;                                          // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           HackSlotContainer;                                 // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HackToolTip;                                       // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HandsOverloadedDescription;                        // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           HandsOverloadedPanel;                              // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventorySlot_C*                   HandsSlot;                                         // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             OverloadedHeaderBodySlot;                          // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             OverloadedHeaderBootsSlot;                         // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             OverloadedHeaderHandsSlot;                         // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SparkIconBodySlot;                                 // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SparkIconBootsSlot;                                // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SparkIconHandsSlot;                                // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMatchaInventoryCategoryUIData*         BoundFeetCategoryUIData;                           // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMatchaInventoryCategoryUIData*         BoundHandsCategoryUIData;                          // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMatchaInventoryCategoryUIData*         BoundBodyCategoryUIData;                           // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             CallSetToolTIp;                                    // 0x0468(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ToolTips;                                          // 0x0478(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventoryCategoryUIData*         BoundHackCategoryUIData;                           // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FOdyUIBoolBinding                      Is_Empty;                                          // 0x0488(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsEmptyHackSlot;                                   // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A9[0x3];                                      // 0x04A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            OverloadedActiveFontColor;                         // 0x04AC(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            OverloadedInactiveFontColor;                       // 0x04C0(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           OverloadedInactiveIconOpacity;                     // 0x04D4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OverloadedActiveIconOpacity;                       // 0x04E4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugBodyOverloaded;                              // 0x04F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugHandsOverloaded;                             // 0x04F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugBootsOverloaded;                             // 0x04F6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F7[0x1];                                      // 0x04F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            OverloadedActiveIconTint;                          // 0x04F8(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            OverloadedInactiveIconTint;                        // 0x050C(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Bind_Feet_Category_Data(class UMatchaInventoryCategoryUIData* CategoryUIData);
	void Bind_Hands_Category_Data(class UMatchaInventoryCategoryUIData* CategoryUIData);
	void BindBodyCategoryData(class UMatchaInventoryCategoryUIData* CategoryUIData);
	void BindData(class UOdyUIData* NewUIData);
	void BindHackCategoryData(class UMatchaInventoryCategoryUIData* CategoryUIData);
	void CallSetToolTIp__DelegateSignature();
	void Construct();
	void ExecuteUbergraph_WBP_GearTooltips(int32 EntryPoint);
	void On_Feet_Slot_Updated();
	void OnBodyEnergizedChanged(bool OldValue, bool NewValue);
	void OnBodyEnergizedTooltipChanged(const class FText& OldValue, const class FText& NewValue);
	void OnBodySlotEnergizedChanged(bool NewEnergizedState);
	void OnBodySlotUpdated();
	void OnBootsEnergizedChanged(bool OldValue, bool NewValue);
	void OnCategoriesUpdated();
	void OnFeetEnergizedTooltipChanged(const class FText& OldValue, const class FText& NewValue);
	void OnFeetSlotEnergizedChanged(bool NewEnergizedState);
	void OnHackSlotIsEmptyChanged(bool OldValue, bool NewValue);
	void OnHackSlotUpdated();
	void OnHandsEnergizedChanged(bool OldValue, bool NewValue);
	void OnHandsEnergizedTooltipChanged(const class FText& OldValue, const class FText& NewValue);
	void OnHandsSlotEnergizedChanged(bool NewEnergizedState);
	void OnHandsSlotUpdated();
	void OnInitialized();
	void PreConstruct(bool IsDesignTime);
	void ResetUI();
	void Set_Overloaded_Styling(bool bIsOverloaded, class UTextBlock* OverloadedSlotDescription, class UImage* OverloadedSlotIcon, class UTextBlock* OverloadedSlotHeader);
	void ShowTooltip(bool Show_0);
	void Unbind_Feet_CategoryData(class UMatchaInventoryCategoryUIData* OldCategoryUIData);
	void UnbindBodyCategoryData(class UMatchaInventoryCategoryUIData* OldCategoryUIData);
	void UnbindData(class UOdyUIData* OldUIData);
	void UnbindHackCategoryData(class UMatchaInventoryCategoryUIData* OldCategoryUIData);
	void UnbindHandsCategoryData(class UMatchaInventoryCategoryUIData* OldCategoryUIData);
	void UpdatedBodySlotTooltip();
	void UpdateEnergizedTooltipColor(class UTextBlock* TextBlock, bool IsEnergized);
	void UpdateEnergizedTooltipText(class UPanelWidget* RootPanel, class UTextBlock* TextBlock, const class FText& NewValue);
	void UpdateFeetSlotToolTip();
	void UpdateHackSlotTooltip();
	void UpdateHandSlotTooltip();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_GearTooltips_C">();
	}
	static class UWBP_GearTooltips_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_GearTooltips_C>();
	}
};
static_assert(alignof(UWBP_GearTooltips_C) == 0x000008, "Wrong alignment on UWBP_GearTooltips_C");
static_assert(sizeof(UWBP_GearTooltips_C) == 0x000520, "Wrong size on UWBP_GearTooltips_C");
static_assert(offsetof(UWBP_GearTooltips_C, UberGraphFrame) == 0x000398, "Member 'UWBP_GearTooltips_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, BodyOverloadedDescription) == 0x0003A0, "Member 'UWBP_GearTooltips_C::BodyOverloadedDescription' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, BodyOverloadedPanel) == 0x0003A8, "Member 'UWBP_GearTooltips_C::BodyOverloadedPanel' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, BodySlot) == 0x0003B0, "Member 'UWBP_GearTooltips_C::BodySlot' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, BodyToolTIp) == 0x0003B8, "Member 'UWBP_GearTooltips_C::BodyToolTIp' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, BootsOverloadedDescription) == 0x0003C0, "Member 'UWBP_GearTooltips_C::BootsOverloadedDescription' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, BootsOverloadedPanel) == 0x0003C8, "Member 'UWBP_GearTooltips_C::BootsOverloadedPanel' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, BootsToolTip) == 0x0003D0, "Member 'UWBP_GearTooltips_C::BootsToolTip' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, FeetSlot) == 0x0003D8, "Member 'UWBP_GearTooltips_C::FeetSlot' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, GearTooltipOverlay) == 0x0003E0, "Member 'UWBP_GearTooltips_C::GearTooltipOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, GlovesToolTip) == 0x0003E8, "Member 'UWBP_GearTooltips_C::GlovesToolTip' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, HackSlot) == 0x0003F0, "Member 'UWBP_GearTooltips_C::HackSlot' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, HackSlotContainer) == 0x0003F8, "Member 'UWBP_GearTooltips_C::HackSlotContainer' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, HackToolTip) == 0x000400, "Member 'UWBP_GearTooltips_C::HackToolTip' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, HandsOverloadedDescription) == 0x000408, "Member 'UWBP_GearTooltips_C::HandsOverloadedDescription' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, HandsOverloadedPanel) == 0x000410, "Member 'UWBP_GearTooltips_C::HandsOverloadedPanel' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, HandsSlot) == 0x000418, "Member 'UWBP_GearTooltips_C::HandsSlot' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, OverloadedHeaderBodySlot) == 0x000420, "Member 'UWBP_GearTooltips_C::OverloadedHeaderBodySlot' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, OverloadedHeaderBootsSlot) == 0x000428, "Member 'UWBP_GearTooltips_C::OverloadedHeaderBootsSlot' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, OverloadedHeaderHandsSlot) == 0x000430, "Member 'UWBP_GearTooltips_C::OverloadedHeaderHandsSlot' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, SparkIconBodySlot) == 0x000438, "Member 'UWBP_GearTooltips_C::SparkIconBodySlot' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, SparkIconBootsSlot) == 0x000440, "Member 'UWBP_GearTooltips_C::SparkIconBootsSlot' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, SparkIconHandsSlot) == 0x000448, "Member 'UWBP_GearTooltips_C::SparkIconHandsSlot' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, BoundFeetCategoryUIData) == 0x000450, "Member 'UWBP_GearTooltips_C::BoundFeetCategoryUIData' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, BoundHandsCategoryUIData) == 0x000458, "Member 'UWBP_GearTooltips_C::BoundHandsCategoryUIData' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, BoundBodyCategoryUIData) == 0x000460, "Member 'UWBP_GearTooltips_C::BoundBodyCategoryUIData' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, CallSetToolTIp) == 0x000468, "Member 'UWBP_GearTooltips_C::CallSetToolTIp' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, ToolTips) == 0x000478, "Member 'UWBP_GearTooltips_C::ToolTips' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, BoundHackCategoryUIData) == 0x000480, "Member 'UWBP_GearTooltips_C::BoundHackCategoryUIData' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, Is_Empty) == 0x000488, "Member 'UWBP_GearTooltips_C::Is_Empty' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, IsEmptyHackSlot) == 0x0004A8, "Member 'UWBP_GearTooltips_C::IsEmptyHackSlot' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, OverloadedActiveFontColor) == 0x0004AC, "Member 'UWBP_GearTooltips_C::OverloadedActiveFontColor' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, OverloadedInactiveFontColor) == 0x0004C0, "Member 'UWBP_GearTooltips_C::OverloadedInactiveFontColor' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, OverloadedInactiveIconOpacity) == 0x0004D4, "Member 'UWBP_GearTooltips_C::OverloadedInactiveIconOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, OverloadedActiveIconOpacity) == 0x0004E4, "Member 'UWBP_GearTooltips_C::OverloadedActiveIconOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, bDebugBodyOverloaded) == 0x0004F4, "Member 'UWBP_GearTooltips_C::bDebugBodyOverloaded' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, bDebugHandsOverloaded) == 0x0004F5, "Member 'UWBP_GearTooltips_C::bDebugHandsOverloaded' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, bDebugBootsOverloaded) == 0x0004F6, "Member 'UWBP_GearTooltips_C::bDebugBootsOverloaded' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, OverloadedActiveIconTint) == 0x0004F8, "Member 'UWBP_GearTooltips_C::OverloadedActiveIconTint' has a wrong offset!");
static_assert(offsetof(UWBP_GearTooltips_C, OverloadedInactiveIconTint) == 0x00050C, "Member 'UWBP_GearTooltips_C::OverloadedInactiveIconTint' has a wrong offset!");

}

