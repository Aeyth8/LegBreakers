#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: E_TunnelGate

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SnapNet_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InteractiveEntity_Base_classes.hpp"
#include "Matcha_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass E_TunnelGate.E_TunnelGate_C
// 0x0198 (0x0658 - 0x04C0)
class AE_TunnelGate_C final : public AInteractiveEntity_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_E_TunnelGate_C;                     // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_Door;                                           // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PlayerCollider;                                    // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        OpenHoldTimeSeconds;                               // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSnapNetPropertyVector                 PlayerCollisionExtents;                            // 0x04E0(0x0080)(Edit, BlueprintVisible)
	struct FSnapNetPropertyVector                 InteratablesCollisionExtents;                      // 0x0560(0x0080)(Edit, BlueprintVisible)
	bool                                          DidSetCollisionExtents;                            // 0x05E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSnapNetPropertyFloat                  RemainingOpenTime;                                 // 0x05E8(0x0040)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	struct FVector                                PlayerColliderOrigin;                              // 0x0628(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlayerColliderBounds;                              // 0x0640(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__E_TunnelGate_EntityComponent_K2Node_ComponentBoundEvent_0_SnapNetPropertiesModifiedDynamicDelegate__DelegateSignature();
	void ExecuteUbergraph_E_TunnelGate(int32 EntryPoint);
	void InteractionCompleted(class AActor* InteractingActor);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void UpdateCollision();
	void UserConstructionScript();

	bool CanStartInteraction(class AActor* InteractingActor) const;
	void GetPlayerColliderBounds(struct FVector* OutOrigin, struct FVector* OutBounds) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"E_TunnelGate_C">();
	}
	static class AE_TunnelGate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AE_TunnelGate_C>();
	}
};
static_assert(alignof(AE_TunnelGate_C) == 0x000008, "Wrong alignment on AE_TunnelGate_C");
static_assert(sizeof(AE_TunnelGate_C) == 0x000658, "Wrong size on AE_TunnelGate_C");
static_assert(offsetof(AE_TunnelGate_C, UberGraphFrame_E_TunnelGate_C) == 0x0004C0, "Member 'AE_TunnelGate_C::UberGraphFrame_E_TunnelGate_C' has a wrong offset!");
static_assert(offsetof(AE_TunnelGate_C, SM_Door) == 0x0004C8, "Member 'AE_TunnelGate_C::SM_Door' has a wrong offset!");
static_assert(offsetof(AE_TunnelGate_C, PlayerCollider) == 0x0004D0, "Member 'AE_TunnelGate_C::PlayerCollider' has a wrong offset!");
static_assert(offsetof(AE_TunnelGate_C, OpenHoldTimeSeconds) == 0x0004D8, "Member 'AE_TunnelGate_C::OpenHoldTimeSeconds' has a wrong offset!");
static_assert(offsetof(AE_TunnelGate_C, PlayerCollisionExtents) == 0x0004E0, "Member 'AE_TunnelGate_C::PlayerCollisionExtents' has a wrong offset!");
static_assert(offsetof(AE_TunnelGate_C, InteratablesCollisionExtents) == 0x000560, "Member 'AE_TunnelGate_C::InteratablesCollisionExtents' has a wrong offset!");
static_assert(offsetof(AE_TunnelGate_C, DidSetCollisionExtents) == 0x0005E0, "Member 'AE_TunnelGate_C::DidSetCollisionExtents' has a wrong offset!");
static_assert(offsetof(AE_TunnelGate_C, RemainingOpenTime) == 0x0005E8, "Member 'AE_TunnelGate_C::RemainingOpenTime' has a wrong offset!");
static_assert(offsetof(AE_TunnelGate_C, PlayerColliderOrigin) == 0x000628, "Member 'AE_TunnelGate_C::PlayerColliderOrigin' has a wrong offset!");
static_assert(offsetof(AE_TunnelGate_C, PlayerColliderBounds) == 0x000640, "Member 'AE_TunnelGate_C::PlayerColliderBounds' has a wrong offset!");

}

