#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_CameraUtils

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPL_CameraUtils.BPL_CameraUtils_C.AddExtraCameraActors
// 0x0040 (0x0040 - 0x0000)
struct BPL_CameraUtils_C_AddExtraCameraActors final
{
public:
	TArray<class AActor*>                         Actors;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AActor*                                 CameraActor;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacterRenderer_Base_C*              K2Node_DynamicCast_AsCharacter_Renderer_Base;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetEntityRendererByIndex_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_CameraUtils_C_AddExtraCameraActors) == 0x000008, "Wrong alignment on BPL_CameraUtils_C_AddExtraCameraActors");
static_assert(sizeof(BPL_CameraUtils_C_AddExtraCameraActors) == 0x000040, "Wrong size on BPL_CameraUtils_C_AddExtraCameraActors");
static_assert(offsetof(BPL_CameraUtils_C_AddExtraCameraActors, Actors) == 0x000000, "Member 'BPL_CameraUtils_C_AddExtraCameraActors::Actors' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_AddExtraCameraActors, CameraActor) == 0x000010, "Member 'BPL_CameraUtils_C_AddExtraCameraActors::CameraActor' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_AddExtraCameraActors, __WorldContext) == 0x000018, "Member 'BPL_CameraUtils_C_AddExtraCameraActors::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_AddExtraCameraActors, K2Node_DynamicCast_AsCharacter_Renderer_Base) == 0x000020, "Member 'BPL_CameraUtils_C_AddExtraCameraActors::K2Node_DynamicCast_AsCharacter_Renderer_Base' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_AddExtraCameraActors, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_CameraUtils_C_AddExtraCameraActors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_AddExtraCameraActors, CallFunc_GetEntityRendererByIndex_ReturnValue) == 0x000030, "Member 'BPL_CameraUtils_C_AddExtraCameraActors::CallFunc_GetEntityRendererByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_AddExtraCameraActors, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BPL_CameraUtils_C_AddExtraCameraActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_AddExtraCameraActors, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'BPL_CameraUtils_C_AddExtraCameraActors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BPL_CameraUtils.BPL_CameraUtils_C.ComputeBaseHeightOffset
// 0x0060 (0x0060 - 0x0000)
struct BPL_CameraUtils_C_ComputeBaseHeightOffset final
{
public:
	double                                        CameraPitch;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CameraYLocation;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        HeightOffset;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegCos_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Square_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Square_ReturnValue_1;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sqrt_ReturnValue;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_CameraUtils_C_ComputeBaseHeightOffset) == 0x000008, "Wrong alignment on BPL_CameraUtils_C_ComputeBaseHeightOffset");
static_assert(sizeof(BPL_CameraUtils_C_ComputeBaseHeightOffset) == 0x000060, "Wrong size on BPL_CameraUtils_C_ComputeBaseHeightOffset");
static_assert(offsetof(BPL_CameraUtils_C_ComputeBaseHeightOffset, CameraPitch) == 0x000000, "Member 'BPL_CameraUtils_C_ComputeBaseHeightOffset::CameraPitch' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeBaseHeightOffset, CameraYLocation) == 0x000008, "Member 'BPL_CameraUtils_C_ComputeBaseHeightOffset::CameraYLocation' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeBaseHeightOffset, __WorldContext) == 0x000010, "Member 'BPL_CameraUtils_C_ComputeBaseHeightOffset::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeBaseHeightOffset, HeightOffset) == 0x000018, "Member 'BPL_CameraUtils_C_ComputeBaseHeightOffset::HeightOffset' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeBaseHeightOffset, CallFunc_Abs_ReturnValue) == 0x000020, "Member 'BPL_CameraUtils_C_ComputeBaseHeightOffset::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeBaseHeightOffset, CallFunc_Abs_ReturnValue_1) == 0x000028, "Member 'BPL_CameraUtils_C_ComputeBaseHeightOffset::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeBaseHeightOffset, CallFunc_DegCos_ReturnValue) == 0x000030, "Member 'BPL_CameraUtils_C_ComputeBaseHeightOffset::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeBaseHeightOffset, CallFunc_Square_ReturnValue) == 0x000038, "Member 'BPL_CameraUtils_C_ComputeBaseHeightOffset::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeBaseHeightOffset, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'BPL_CameraUtils_C_ComputeBaseHeightOffset::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeBaseHeightOffset, CallFunc_Square_ReturnValue_1) == 0x000048, "Member 'BPL_CameraUtils_C_ComputeBaseHeightOffset::CallFunc_Square_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeBaseHeightOffset, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'BPL_CameraUtils_C_ComputeBaseHeightOffset::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeBaseHeightOffset, CallFunc_Sqrt_ReturnValue) == 0x000058, "Member 'BPL_CameraUtils_C_ComputeBaseHeightOffset::CallFunc_Sqrt_ReturnValue' has a wrong offset!");

// Function BPL_CameraUtils.BPL_CameraUtils_C.CheckGround
// 0x0528 (0x0528 - 0x0000)
struct BPL_CameraUtils_C_CheckGround final
{
public:
	class AActor*                                 CameraTarget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Ground;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TraceDepth;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleRadius;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GroundCheck1;                                      // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Actors;                                            // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x00C8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleByProfile_OutHit;          // 0x0160(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleByProfile_ReturnValue;     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0260(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x035A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B[0x1];                                      // 0x035B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_432[0x2];                                      // 0x0432(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0458(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0488(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x04A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x04A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x04B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4[0x4];                                      // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0509(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x050A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue_1;                // 0x050B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeVector_X_ImplicitCast;                // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_X_ImplicitCast_1;              // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_CameraUtils_C_CheckGround) == 0x000008, "Wrong alignment on BPL_CameraUtils_C_CheckGround");
static_assert(sizeof(BPL_CameraUtils_C_CheckGround) == 0x000528, "Wrong size on BPL_CameraUtils_C_CheckGround");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CameraTarget) == 0x000000, "Member 'BPL_CameraUtils_C_CheckGround::CameraTarget' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, __WorldContext) == 0x000008, "Member 'BPL_CameraUtils_C_CheckGround::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, Ground) == 0x000010, "Member 'BPL_CameraUtils_C_CheckGround::Ground' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, TraceDepth) == 0x000018, "Member 'BPL_CameraUtils_C_CheckGround::TraceDepth' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CapsuleRadius) == 0x000020, "Member 'BPL_CameraUtils_C_CheckGround::CapsuleRadius' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, GroundCheck1) == 0x000024, "Member 'BPL_CameraUtils_C_CheckGround::GroundCheck1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, Actors) == 0x000028, "Member 'BPL_CameraUtils_C_CheckGround::Actors' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, Temp_object_Variable) == 0x000038, "Member 'BPL_CameraUtils_C_CheckGround::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_MakeVector_ReturnValue_1) == 0x000078, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000A8, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, Temp_object_Variable_1) == 0x0000C8, "Member 'BPL_CameraUtils_C_CheckGround::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_MakeVector_ReturnValue_2) == 0x0000D8, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_MakeVector_ReturnValue_3) == 0x0000F0, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000108, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000120, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000138, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, K2Node_MakeArray_Array) == 0x000150, "Member 'BPL_CameraUtils_C_CheckGround::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_LineTraceSingleByProfile_OutHit) == 0x000160, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_LineTraceSingleByProfile_OutHit' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_LineTraceSingleByProfile_ReturnValue) == 0x000258, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_LineTraceSingleByProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000260, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000358, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_bBlockingHit) == 0x000359, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_bInitialOverlap) == 0x00035A, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_Time) == 0x00035C, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_Distance) == 0x000360, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_Location) == 0x000368, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_ImpactPoint) == 0x000380, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_Normal) == 0x000398, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_ImpactNormal) == 0x0003B0, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_PhysMat) == 0x0003C8, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_HitActor) == 0x0003D0, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_HitComponent) == 0x0003D8, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_HitBoneName) == 0x0003E0, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_BoneName) == 0x0003E8, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_HitItem) == 0x0003F0, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_ElementIndex) == 0x0003F4, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_FaceIndex) == 0x0003F8, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_TraceStart) == 0x000400, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_TraceEnd) == 0x000418, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000430, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000431, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_Time_1) == 0x000434, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_Distance_1) == 0x000438, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_Location_1) == 0x000440, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000458, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_Normal_1) == 0x000470, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000488, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_PhysMat_1) == 0x0004A0, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_HitActor_1) == 0x0004A8, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_HitComponent_1) == 0x0004B0, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_HitBoneName_1) == 0x0004B8, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_BoneName_1) == 0x0004C0, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_HitItem_1) == 0x0004C8, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_ElementIndex_1) == 0x0004CC, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_FaceIndex_1) == 0x0004D0, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_TraceStart_1) == 0x0004D8, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_BreakHitResult_TraceEnd_1) == 0x0004F0, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_IsValid_ReturnValue) == 0x000508, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_IsValid_ReturnValue_1) == 0x000509, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_ActorHasTag_ReturnValue) == 0x00050A, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_ActorHasTag_ReturnValue_1) == 0x00050B, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_ActorHasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_MakeVector_X_ImplicitCast) == 0x000510, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_MakeVector_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_MakeVector_X_ImplicitCast_1) == 0x000518, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_MakeVector_X_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CheckGround, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000520, "Member 'BPL_CameraUtils_C_CheckGround::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BPL_CameraUtils.BPL_CameraUtils_C.ComputeViewParamsForPointsOfInterest
// 0x0460 (0x0460 - 0x0000)
struct BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest final
{
public:
	TArray<class AActor*>                         PointsOfInterest;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                MinimumVisibleAreaExtents;                         // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MaximumVisibleAreaExtents;                         // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ViewTargetOrigin;                                  // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ViewExtents;                                       // 0x0060(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RelativeZSpeedToViewTarget;                        // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDownwardsBubbleZSpeedThreshold;                 // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxUpwardsBubbleZSpeedThreshold;                   // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ViewTargetOriginPos;                               // 0x0090(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ComputedViewExtents;                               // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MaximumPointOfInterest;                            // 0x00C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MinimumPointOfInterest;                            // 0x00D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMatchaSnapNetCharacterRenderer*        K2Node_DynamicCast_AsMatcha_Snap_Net_Character_Renderer; // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMatchaSnapNetCharacterRenderer*        K2Node_DynamicCast_AsMatcha_Snap_Net_Character_Renderer_1; // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_2;                          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_5;                          // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23B[0x1];                                      // 0x023B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_6;                          // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_6;                          // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_6;                          // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_7;                          // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_7;                          // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_7;                          // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0283(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_8;                          // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_8;                          // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_8;                          // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_9;                          // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_9;                          // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_9;                          // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_10;                         // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_10;                         // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_10;                         // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_11;                         // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_11;                         // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_11;                         // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_12;                         // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_12;                         // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_12;                         // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_13;                         // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_13;                         // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_13;                         // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_2;                       // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_3;                       // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_4;                       // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_5;                       // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_14;                         // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_14;                         // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_14;                         // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_1;                       // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_2;                       // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0448(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest) == 0x000008, "Wrong alignment on BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest");
static_assert(sizeof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest) == 0x000460, "Wrong size on BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, PointsOfInterest) == 0x000000, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::PointsOfInterest' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, MinimumVisibleAreaExtents) == 0x000010, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::MinimumVisibleAreaExtents' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, MaximumVisibleAreaExtents) == 0x000028, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::MaximumVisibleAreaExtents' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, ViewTargetOrigin) == 0x000040, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::ViewTargetOrigin' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, __WorldContext) == 0x000058, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, ViewExtents) == 0x000060, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::ViewExtents' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, RelativeZSpeedToViewTarget) == 0x000078, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::RelativeZSpeedToViewTarget' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, MaxDownwardsBubbleZSpeedThreshold) == 0x000080, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::MaxDownwardsBubbleZSpeedThreshold' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, MaxUpwardsBubbleZSpeedThreshold) == 0x000088, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::MaxUpwardsBubbleZSpeedThreshold' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, ViewTargetOriginPos) == 0x000090, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::ViewTargetOriginPos' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, ComputedViewExtents) == 0x0000A8, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::ComputedViewExtents' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, MaximumPointOfInterest) == 0x0000C0, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::MaximumPointOfInterest' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, MinimumPointOfInterest) == 0x0000D8, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::MinimumPointOfInterest' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, Temp_int_Array_Index_Variable) == 0x0000F4, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, K2Node_DynamicCast_AsMatcha_Snap_Net_Character_Renderer) == 0x000100, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::K2Node_DynamicCast_AsMatcha_Snap_Net_Character_Renderer' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000110, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000128, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_X) == 0x000140, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Y) == 0x000148, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Z) == 0x000150, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_X_1) == 0x000158, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Y_1) == 0x000160, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Z_1) == 0x000168, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000170, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, K2Node_DynamicCast_AsMatcha_Snap_Net_Character_Renderer_1) == 0x000188, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::K2Node_DynamicCast_AsMatcha_Snap_Net_Character_Renderer_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, K2Node_DynamicCast_bSuccess_1) == 0x000190, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_X_2) == 0x000198, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Y_2) == 0x0001A0, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Z_2) == 0x0001A8, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0001B0, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0001C8, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_X_3) == 0x0001E0, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Y_3) == 0x0001E8, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Z_3) == 0x0001F0, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_X_4) == 0x0001F8, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Y_4) == 0x000200, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Z_4) == 0x000208, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000210, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, Temp_int_Loop_Counter_Variable) == 0x000218, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_X_5) == 0x000220, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Y_5) == 0x000228, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Z_5) == 0x000230, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_Less_IntInt_ReturnValue) == 0x000238, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000239, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BooleanAND_ReturnValue) == 0x00023A, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_Add_IntInt_ReturnValue) == 0x00023C, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_SelectFloat_ReturnValue) == 0x000240, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000248, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_X_6) == 0x000250, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Y_6) == 0x000258, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Z_6) == 0x000260, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_X_7) == 0x000268, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Y_7) == 0x000270, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Z_7) == 0x000278, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000280, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000281, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BooleanAND_ReturnValue_1) == 0x000282, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BooleanAND_ReturnValue_2) == 0x000283, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_SelectFloat_ReturnValue_1) == 0x000288, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_SelectFloat_ReturnValue_2) == 0x000290, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000298, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0002A0, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_X_8) == 0x0002A8, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Y_8) == 0x0002B0, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Z_8) == 0x0002B8, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x0002C0, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0002C8, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BooleanAND_ReturnValue_3) == 0x0002E0, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_SelectFloat_ReturnValue_3) == 0x0002E8, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0002F0, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0002F8, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_X_9) == 0x000310, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Y_9) == 0x000318, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Z_9) == 0x000320, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_X_10) == 0x000328, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_X_10' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Y_10) == 0x000330, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Y_10' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Z_10) == 0x000338, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Z_10' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_X_11) == 0x000340, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_X_11' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Y_11) == 0x000348, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Y_11' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Z_11) == 0x000350, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Z_11' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_X_12) == 0x000358, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_X_12' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Y_12) == 0x000360, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Y_12' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Z_12) == 0x000368, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Z_12' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_X_13) == 0x000370, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_X_13' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Y_13) == 0x000378, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Y_13' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Z_13) == 0x000380, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Z_13' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_FMax_ReturnValue) == 0x000388, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_FMax_ReturnValue_1) == 0x000390, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000398, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_FMax_ReturnValue_2) == 0x0003A0, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_FClamp_ReturnValue) == 0x0003A8, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_FMax_ReturnValue_3) == 0x0003B0, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_FMax_ReturnValue_4) == 0x0003B8, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_FMax_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_MakeVector_ReturnValue) == 0x0003C0, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0003D8, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_FClamp_ReturnValue_1) == 0x0003E0, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_FMax_ReturnValue_5) == 0x0003E8, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_FMax_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0003F0, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_X_14) == 0x0003F8, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_X_14' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Y_14) == 0x000400, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Y_14' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_BreakVector_Z_14) == 0x000408, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_BreakVector_Z_14' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_FClamp_ReturnValue_2) == 0x000410, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_FMin_ReturnValue) == 0x000418, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_MakeVector_ReturnValue_1) == 0x000420, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_FMin_ReturnValue_1) == 0x000438, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_FMin_ReturnValue_2) == 0x000440, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_FMin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest, CallFunc_MakeVector_ReturnValue_2) == 0x000448, "Member 'BPL_CameraUtils_C_ComputeViewParamsForPointsOfInterest::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");

// Function BPL_CameraUtils.BPL_CameraUtils_C.CollectPointsOfInterest
// 0x0188 (0x0188 - 0x0000)
struct BPL_CameraUtils_C_CollectPointsOfInterest final
{
public:
	class AActor*                                 CameraTarget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocationOffset;                              // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MaxSearchRange;                                    // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CombatMode;                                        // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         PointsOfInterest;                                  // 0x0048(0x0010)(Parm, OutParm)
	class ACharacterRenderer_Base_C*              CameraTargetAsCRenderer;                           // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Characters;                                        // 0x0060(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Team;                                              // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Actors;                                            // 0x0078(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterRenderer_Base_C*              K2Node_DynamicCast_AsCharacter_Renderer_Base;      // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00A8(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterRenderer_Base_C*              K2Node_DynamicCast_AsCharacter_Renderer_Base_1;    // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CharRenderShouldBeGameplayVisibleToViewerRender_ShouldBeVisible; // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0138(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_BoxOverlapActors_OutActors;               // 0x0148(0x0010)(ReferenceParm)
	bool                                          CallFunc_BoxOverlapActors_ReturnValue;             // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_2;                          // 0x0160(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_BoxOverlapActors_OutActors_1;             // 0x0170(0x0010)(ReferenceParm)
	bool                                          CallFunc_BoxOverlapActors_ReturnValue_1;           // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_CameraUtils_C_CollectPointsOfInterest) == 0x000008, "Wrong alignment on BPL_CameraUtils_C_CollectPointsOfInterest");
static_assert(sizeof(BPL_CameraUtils_C_CollectPointsOfInterest) == 0x000188, "Wrong size on BPL_CameraUtils_C_CollectPointsOfInterest");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CameraTarget) == 0x000000, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CameraTarget' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, TargetLocationOffset) == 0x000008, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::TargetLocationOffset' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, MaxSearchRange) == 0x000020, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::MaxSearchRange' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CombatMode) == 0x000038, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CombatMode' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, __WorldContext) == 0x000040, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, PointsOfInterest) == 0x000048, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::PointsOfInterest' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CameraTargetAsCRenderer) == 0x000058, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CameraTargetAsCRenderer' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, Characters) == 0x000060, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::Characters' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, Team) == 0x000070, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::Team' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, Actors) == 0x000078, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::Actors' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, K2Node_DynamicCast_AsCharacter_Renderer_Base) == 0x000090, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::K2Node_DynamicCast_AsCharacter_Renderer_Base' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_Subtract_IntInt_ReturnValue) == 0x00009C, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, Temp_int_Array_Index_Variable) == 0x0000A4, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, Temp_object_Variable) == 0x0000A8, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000C4, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000C8, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, K2Node_DynamicCast_AsCharacter_Renderer_Base_1) == 0x0000D0, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::K2Node_DynamicCast_AsCharacter_Renderer_Base_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_Max_ReturnValue) == 0x0000DC, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000E1, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000E2, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_BooleanOR_ReturnValue) == 0x0000E3, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_CharRenderShouldBeGameplayVisibleToViewerRender_ShouldBeVisible) == 0x0000E4, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_CharRenderShouldBeGameplayVisibleToViewerRender_ShouldBeVisible' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_Not_PreBool_ReturnValue) == 0x0000E5, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000E6, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_BooleanOR_ReturnValue_1) == 0x0000E7, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_BooleanOR_ReturnValue_2) == 0x0000E8, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000F0, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_BooleanOR_ReturnValue_3) == 0x000108, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_Add_VectorVector_ReturnValue) == 0x000110, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, K2Node_MakeArray_Array) == 0x000128, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, K2Node_MakeArray_Array_1) == 0x000138, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_BoxOverlapActors_OutActors) == 0x000148, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_BoxOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_BoxOverlapActors_ReturnValue) == 0x000158, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_BoxOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, K2Node_MakeArray_Array_2) == 0x000160, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_BoxOverlapActors_OutActors_1) == 0x000170, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_BoxOverlapActors_OutActors_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_CollectPointsOfInterest, CallFunc_BoxOverlapActors_ReturnValue_1) == 0x000180, "Member 'BPL_CameraUtils_C_CollectPointsOfInterest::CallFunc_BoxOverlapActors_ReturnValue_1' has a wrong offset!");

// Function BPL_CameraUtils.BPL_CameraUtils_C.GetNextCameraTarget
// 0x0018 (0x0018 - 0x0000)
struct BPL_CameraUtils_C_GetNextCameraTarget final
{
public:
	class APlayerController_MatchaSnapNet_C*      LocalPlayerController;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CameraTarget;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_CameraUtils_C_GetNextCameraTarget) == 0x000008, "Wrong alignment on BPL_CameraUtils_C_GetNextCameraTarget");
static_assert(sizeof(BPL_CameraUtils_C_GetNextCameraTarget) == 0x000018, "Wrong size on BPL_CameraUtils_C_GetNextCameraTarget");
static_assert(offsetof(BPL_CameraUtils_C_GetNextCameraTarget, LocalPlayerController) == 0x000000, "Member 'BPL_CameraUtils_C_GetNextCameraTarget::LocalPlayerController' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetNextCameraTarget, __WorldContext) == 0x000008, "Member 'BPL_CameraUtils_C_GetNextCameraTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetNextCameraTarget, CameraTarget) == 0x000010, "Member 'BPL_CameraUtils_C_GetNextCameraTarget::CameraTarget' has a wrong offset!");

// Function BPL_CameraUtils.BPL_CameraUtils_C.GetCameraLocation
// 0x0110 (0x0110 - 0x0000)
struct BPL_CameraUtils_C_GetCameraLocation final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Camera;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraLocation;                                    // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VEase_ReturnValue;                        // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VEase_Alpha_ImplicitCast;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_CameraUtils_C_GetCameraLocation) == 0x000008, "Wrong alignment on BPL_CameraUtils_C_GetCameraLocation");
static_assert(sizeof(BPL_CameraUtils_C_GetCameraLocation) == 0x000110, "Wrong size on BPL_CameraUtils_C_GetCameraLocation");
static_assert(offsetof(BPL_CameraUtils_C_GetCameraLocation, Target) == 0x000000, "Member 'BPL_CameraUtils_C_GetCameraLocation::Target' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetCameraLocation, Alpha) == 0x000008, "Member 'BPL_CameraUtils_C_GetCameraLocation::Alpha' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetCameraLocation, Camera) == 0x000010, "Member 'BPL_CameraUtils_C_GetCameraLocation::Camera' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetCameraLocation, __WorldContext) == 0x000018, "Member 'BPL_CameraUtils_C_GetCameraLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetCameraLocation, Location) == 0x000020, "Member 'BPL_CameraUtils_C_GetCameraLocation::Location' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetCameraLocation, CameraLocation) == 0x000038, "Member 'BPL_CameraUtils_C_GetCameraLocation::CameraLocation' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetCameraLocation, TargetLocation) == 0x000050, "Member 'BPL_CameraUtils_C_GetCameraLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetCameraLocation, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BPL_CameraUtils_C_GetCameraLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetCameraLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'BPL_CameraUtils_C_GetCameraLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetCameraLocation, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'BPL_CameraUtils_C_GetCameraLocation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetCameraLocation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000090, "Member 'BPL_CameraUtils_C_GetCameraLocation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetCameraLocation, CallFunc_BreakVector_X) == 0x0000A8, "Member 'BPL_CameraUtils_C_GetCameraLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetCameraLocation, CallFunc_BreakVector_Y) == 0x0000B0, "Member 'BPL_CameraUtils_C_GetCameraLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetCameraLocation, CallFunc_BreakVector_Z) == 0x0000B8, "Member 'BPL_CameraUtils_C_GetCameraLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetCameraLocation, CallFunc_VEase_ReturnValue) == 0x0000C0, "Member 'BPL_CameraUtils_C_GetCameraLocation::CallFunc_VEase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetCameraLocation, CallFunc_BreakVector_X_1) == 0x0000D8, "Member 'BPL_CameraUtils_C_GetCameraLocation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetCameraLocation, CallFunc_BreakVector_Y_1) == 0x0000E0, "Member 'BPL_CameraUtils_C_GetCameraLocation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetCameraLocation, CallFunc_BreakVector_Z_1) == 0x0000E8, "Member 'BPL_CameraUtils_C_GetCameraLocation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetCameraLocation, CallFunc_MakeVector_ReturnValue) == 0x0000F0, "Member 'BPL_CameraUtils_C_GetCameraLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CameraUtils_C_GetCameraLocation, CallFunc_VEase_Alpha_ImplicitCast) == 0x000108, "Member 'BPL_CameraUtils_C_GetCameraLocation::CallFunc_VEase_Alpha_ImplicitCast' has a wrong offset!");

}

