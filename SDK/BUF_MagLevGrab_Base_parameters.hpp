#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BUF_MagLevGrab_Base

#include "Basic.hpp"

#include "Matcha_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BUF_MagLevGrab_Base.BUF_MagLevGrab_Base_C.OnCharacterMontageStart
// 0x0030 (0x0030 - 0x0000)
struct BUF_MagLevGrab_Base_C_OnCharacterMontageStart final
{
public:
	class AMatchaSnapNetCharacterEntity*          BuffedCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         MontageDuration;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMatchaCharacterMontageType                   MontageType;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMatchaCharacterMontageType                   PreviousMontageType;                               // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EObjectRarity                                 BuffRarity;                                        // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BUF_MagLevGrab_Base_C_OnCharacterMontageStart) == 0x000008, "Wrong alignment on BUF_MagLevGrab_Base_C_OnCharacterMontageStart");
static_assert(sizeof(BUF_MagLevGrab_Base_C_OnCharacterMontageStart) == 0x000030, "Wrong size on BUF_MagLevGrab_Base_C_OnCharacterMontageStart");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnCharacterMontageStart, BuffedCharacter) == 0x000000, "Member 'BUF_MagLevGrab_Base_C_OnCharacterMontageStart::BuffedCharacter' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnCharacterMontageStart, MontageDuration) == 0x000008, "Member 'BUF_MagLevGrab_Base_C_OnCharacterMontageStart::MontageDuration' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnCharacterMontageStart, MontageType) == 0x00000C, "Member 'BUF_MagLevGrab_Base_C_OnCharacterMontageStart::MontageType' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnCharacterMontageStart, PreviousMontageType) == 0x00000D, "Member 'BUF_MagLevGrab_Base_C_OnCharacterMontageStart::PreviousMontageType' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnCharacterMontageStart, BuffRarity) == 0x00000E, "Member 'BUF_MagLevGrab_Base_C_OnCharacterMontageStart::BuffRarity' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnCharacterMontageStart, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000F, "Member 'BUF_MagLevGrab_Base_C_OnCharacterMontageStart::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnCharacterMontageStart, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'BUF_MagLevGrab_Base_C_OnCharacterMontageStart::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnCharacterMontageStart, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000028, "Member 'BUF_MagLevGrab_Base_C_OnCharacterMontageStart::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BUF_MagLevGrab_Base.BUF_MagLevGrab_Base_C.OnPostApplyOutgoingHit
// 0x0120 (0x0120 - 0x0000)
struct BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit final
{
public:
	class AMatchaSnapNetCharacterEntity*          BuffedCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetHit;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 PreviousTargetHit;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMatchaHitData                         HitData;                                           // 0x0018(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	uint8                                         AppliedHitFlags;                                   // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMatchaCharacterMontageType                   MontageDuringHit;                                  // 0x0091(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EObjectRarity                                 BuffRarity;                                        // 0x0092(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetKnockBackUnitDirectionForAngle_ReturnValue; // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit) == 0x000008, "Wrong alignment on BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit");
static_assert(sizeof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit) == 0x000120, "Wrong size on BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit, BuffedCharacter) == 0x000000, "Member 'BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit::BuffedCharacter' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit, TargetHit) == 0x000008, "Member 'BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit::TargetHit' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit, PreviousTargetHit) == 0x000010, "Member 'BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit::PreviousTargetHit' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit, HitData) == 0x000018, "Member 'BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit::HitData' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit, AppliedHitFlags) == 0x000090, "Member 'BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit::AppliedHitFlags' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit, MontageDuringHit) == 0x000091, "Member 'BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit::MontageDuringHit' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit, BuffRarity) == 0x000092, "Member 'BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit::BuffRarity' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000093, "Member 'BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000098, "Member 'BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit, CallFunc_BreakRotator_Roll) == 0x0000B0, "Member 'BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit, CallFunc_BreakRotator_Pitch) == 0x0000B4, "Member 'BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit, CallFunc_BreakRotator_Yaw) == 0x0000B8, "Member 'BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0000BC, "Member 'BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000C0, "Member 'BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit, CallFunc_GetKnockBackUnitDirectionForAngle_ReturnValue) == 0x0000D8, "Member 'BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit::CallFunc_GetKnockBackUnitDirectionForAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000F0, "Member 'BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit, CallFunc_BooleanAND_ReturnValue) == 0x000108, "Member 'BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000110, "Member 'BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x000118, "Member 'BUF_MagLevGrab_Base_C_OnPostApplyOutgoingHit::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");

}

