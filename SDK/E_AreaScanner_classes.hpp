#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: E_AreaScanner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SnapNet_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InteractiveEntity_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass E_AreaScanner.E_AreaScanner_C
// 0x00A8 (0x0568 - 0x04C0)
class AE_AreaScanner_C final : public AInteractiveEntity_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_E_AreaScanner_C;                    // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   RenderPreview;                                     // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FSnapNetPropertyFloat                  InteractTime;                                      // 0x04D0(0x0040)(Edit, BlueprintVisible)
	TArray<EObjectTypeQuery>                      OverlapObjectTypes;                                // 0x0510(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                ScanActiveAOEExtents;                              // 0x0520(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScanActiveAOEOffset;                               // 0x0538(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScanModeDuration;                                  // 0x0550(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMatchaSnapNetCharacterEntity*          LastInteractorCharacter;                           // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        CancelScanModeRadius;                              // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_E_AreaScanner(int32 EntryPoint);
	void InteractionCompleted(class AActor* InteractingActor);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

	struct FMatchaInteractionRequirements GetInteractionRequirements() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"E_AreaScanner_C">();
	}
	static class AE_AreaScanner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AE_AreaScanner_C>();
	}
};
static_assert(alignof(AE_AreaScanner_C) == 0x000008, "Wrong alignment on AE_AreaScanner_C");
static_assert(sizeof(AE_AreaScanner_C) == 0x000568, "Wrong size on AE_AreaScanner_C");
static_assert(offsetof(AE_AreaScanner_C, UberGraphFrame_E_AreaScanner_C) == 0x0004C0, "Member 'AE_AreaScanner_C::UberGraphFrame_E_AreaScanner_C' has a wrong offset!");
static_assert(offsetof(AE_AreaScanner_C, RenderPreview) == 0x0004C8, "Member 'AE_AreaScanner_C::RenderPreview' has a wrong offset!");
static_assert(offsetof(AE_AreaScanner_C, InteractTime) == 0x0004D0, "Member 'AE_AreaScanner_C::InteractTime' has a wrong offset!");
static_assert(offsetof(AE_AreaScanner_C, OverlapObjectTypes) == 0x000510, "Member 'AE_AreaScanner_C::OverlapObjectTypes' has a wrong offset!");
static_assert(offsetof(AE_AreaScanner_C, ScanActiveAOEExtents) == 0x000520, "Member 'AE_AreaScanner_C::ScanActiveAOEExtents' has a wrong offset!");
static_assert(offsetof(AE_AreaScanner_C, ScanActiveAOEOffset) == 0x000538, "Member 'AE_AreaScanner_C::ScanActiveAOEOffset' has a wrong offset!");
static_assert(offsetof(AE_AreaScanner_C, ScanModeDuration) == 0x000550, "Member 'AE_AreaScanner_C::ScanModeDuration' has a wrong offset!");
static_assert(offsetof(AE_AreaScanner_C, LastInteractorCharacter) == 0x000558, "Member 'AE_AreaScanner_C::LastInteractorCharacter' has a wrong offset!");
static_assert(offsetof(AE_AreaScanner_C, CancelScanModeRadius) == 0x000560, "Member 'AE_AreaScanner_C::CancelScanModeRadius' has a wrong offset!");

}

