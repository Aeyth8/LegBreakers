#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Inventory

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "OdyUI_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WBP_Inventory.WBP_Inventory_C.ActivateGamePadRadial
// 0x0030 (0x0030 - 0x0000)
struct WBP_Inventory_C_ActivateGamePadRadial final
{
public:
	bool                                          Activate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_C_ActivateGamePadRadial) == 0x000008, "Wrong alignment on WBP_Inventory_C_ActivateGamePadRadial");
static_assert(sizeof(WBP_Inventory_C_ActivateGamePadRadial) == 0x000030, "Wrong size on WBP_Inventory_C_ActivateGamePadRadial");
static_assert(offsetof(WBP_Inventory_C_ActivateGamePadRadial, Activate) == 0x000000, "Member 'WBP_Inventory_C_ActivateGamePadRadial::Activate' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ActivateGamePadRadial, Temp_byte_Variable) == 0x000001, "Member 'WBP_Inventory_C_ActivateGamePadRadial::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ActivateGamePadRadial, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_Inventory_C_ActivateGamePadRadial::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ActivateGamePadRadial, Temp_bool_Variable) == 0x000003, "Member 'WBP_Inventory_C_ActivateGamePadRadial::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ActivateGamePadRadial, Temp_object_Variable) == 0x000008, "Member 'WBP_Inventory_C_ActivateGamePadRadial::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ActivateGamePadRadial, Temp_object_Variable_1) == 0x000010, "Member 'WBP_Inventory_C_ActivateGamePadRadial::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ActivateGamePadRadial, K2Node_Select_Default) == 0x000018, "Member 'WBP_Inventory_C_ActivateGamePadRadial::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ActivateGamePadRadial, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'WBP_Inventory_C_ActivateGamePadRadial::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ActivateGamePadRadial, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'WBP_Inventory_C_ActivateGamePadRadial::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ActivateGamePadRadial, Temp_bool_Variable_1) == 0x000022, "Member 'WBP_Inventory_C_ActivateGamePadRadial::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ActivateGamePadRadial, K2Node_Select_Default_1) == 0x000023, "Member 'WBP_Inventory_C_ActivateGamePadRadial::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ActivateGamePadRadial, CallFunc_PlayAnimation_ReturnValue) == 0x000028, "Member 'WBP_Inventory_C_ActivateGamePadRadial::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Inventory.WBP_Inventory_C.Bind Category Data
// 0x0008 (0x0008 - 0x0000)
struct WBP_Inventory_C_Bind_Category_Data final
{
public:
	class UMatchaInventoryCategoryUIData*         CategoryUIData;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_C_Bind_Category_Data) == 0x000008, "Wrong alignment on WBP_Inventory_C_Bind_Category_Data");
static_assert(sizeof(WBP_Inventory_C_Bind_Category_Data) == 0x000008, "Wrong size on WBP_Inventory_C_Bind_Category_Data");
static_assert(offsetof(WBP_Inventory_C_Bind_Category_Data, CategoryUIData) == 0x000000, "Member 'WBP_Inventory_C_Bind_Category_Data::CategoryUIData' has a wrong offset!");

// Function WBP_Inventory.WBP_Inventory_C.BindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_Inventory_C_BindData final
{
public:
	class UOdyUIData*                             NewUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_C_BindData) == 0x000008, "Wrong alignment on WBP_Inventory_C_BindData");
static_assert(sizeof(WBP_Inventory_C_BindData) == 0x000008, "Wrong size on WBP_Inventory_C_BindData");
static_assert(offsetof(WBP_Inventory_C_BindData, NewUIData) == 0x000000, "Member 'WBP_Inventory_C_BindData::NewUIData' has a wrong offset!");

// Function WBP_Inventory.WBP_Inventory_C.BindOnChangeHeldItem
// 0x0048 (0x0048 - 0x0000)
struct WBP_Inventory_C_BindOnChangeHeldItem final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_InventorySlot_C*>           CallFunc_GetQuickBarItems_Controller_Array;        // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventorySlot_C*                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_C_BindOnChangeHeldItem) == 0x000008, "Wrong alignment on WBP_Inventory_C_BindOnChangeHeldItem");
static_assert(sizeof(WBP_Inventory_C_BindOnChangeHeldItem) == 0x000048, "Wrong size on WBP_Inventory_C_BindOnChangeHeldItem");
static_assert(offsetof(WBP_Inventory_C_BindOnChangeHeldItem, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_Inventory_C_BindOnChangeHeldItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_BindOnChangeHeldItem, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Inventory_C_BindOnChangeHeldItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_BindOnChangeHeldItem, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Inventory_C_BindOnChangeHeldItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_BindOnChangeHeldItem, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WBP_Inventory_C_BindOnChangeHeldItem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_BindOnChangeHeldItem, CallFunc_GetQuickBarItems_Controller_Array) == 0x000020, "Member 'WBP_Inventory_C_BindOnChangeHeldItem::CallFunc_GetQuickBarItems_Controller_Array' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_BindOnChangeHeldItem, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_Inventory_C_BindOnChangeHeldItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_BindOnChangeHeldItem, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_Inventory_C_BindOnChangeHeldItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_BindOnChangeHeldItem, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WBP_Inventory_C_BindOnChangeHeldItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Inventory.WBP_Inventory_C.ChangeHeldItem
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_Inventory_C_ChangeHeldItem final
{
public:
	bool                                          HasHeldItem;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_InventorySlot_C*>           CallFunc_GetQuickBarItems_Controller_Array;        // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_InventorySlot_C*                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemIsGun_bIsGun;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_SelectText_ReturnValue;                   // 0x0050(0x0010)()
	class FText                                   CallFunc_SelectText_ReturnValue_1;                 // 0x0060(0x0010)()
	bool                                          CallFunc_Get_Item_Is_Throwable_bIsThrowable;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_SelectText_ReturnValue_2;                 // 0x0080(0x0010)()
	TArray<class UWBP_InventorySlot_C*>           CallFunc_GetQuickBarItems_Controller_Array_1;      // 0x0090(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_InventorySlot_C*                   CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_InventorySlot_C*>           CallFunc_GetQuickBarItems_Controller_Array_2;      // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_InventorySlot_C*                   CallFunc_Array_Get_Item_2;                         // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventorySlotUIData*             K2Node_DynamicCast_AsMatcha_Inventory_Slot_UI_Data; // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextBinding_GetValue_ReturnValue;         // 0x00E0(0x0010)()
};
static_assert(alignof(WBP_Inventory_C_ChangeHeldItem) == 0x000008, "Wrong alignment on WBP_Inventory_C_ChangeHeldItem");
static_assert(sizeof(WBP_Inventory_C_ChangeHeldItem) == 0x0000F0, "Wrong size on WBP_Inventory_C_ChangeHeldItem");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, HasHeldItem) == 0x000000, "Member 'WBP_Inventory_C_ChangeHeldItem::HasHeldItem' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Inventory_C_ChangeHeldItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'WBP_Inventory_C_ChangeHeldItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'WBP_Inventory_C_ChangeHeldItem::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'WBP_Inventory_C_ChangeHeldItem::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'WBP_Inventory_C_ChangeHeldItem::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, Temp_int_Array_Index_Variable_2) == 0x000020, "Member 'WBP_Inventory_C_ChangeHeldItem::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, Temp_byte_Variable) == 0x000024, "Member 'WBP_Inventory_C_ChangeHeldItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, Temp_byte_Variable_1) == 0x000025, "Member 'WBP_Inventory_C_ChangeHeldItem::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, Temp_bool_Variable) == 0x000026, "Member 'WBP_Inventory_C_ChangeHeldItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, Temp_byte_Variable_2) == 0x000027, "Member 'WBP_Inventory_C_ChangeHeldItem::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, Temp_byte_Variable_3) == 0x000028, "Member 'WBP_Inventory_C_ChangeHeldItem::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, Temp_bool_Variable_1) == 0x000029, "Member 'WBP_Inventory_C_ChangeHeldItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, K2Node_Select_Default) == 0x00002A, "Member 'WBP_Inventory_C_ChangeHeldItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_GetQuickBarItems_Controller_Array) == 0x000030, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_GetQuickBarItems_Controller_Array' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_GetItemIsGun_bIsGun) == 0x00004C, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_GetItemIsGun_bIsGun' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_SelectText_ReturnValue) == 0x000050, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_SelectText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_SelectText_ReturnValue_1) == 0x000060, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_SelectText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_Get_Item_Is_Throwable_bIsThrowable) == 0x000070, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_Get_Item_Is_Throwable_bIsThrowable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, Temp_int_Loop_Counter_Variable_2) == 0x000074, "Member 'WBP_Inventory_C_ChangeHeldItem::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_BooleanAND_ReturnValue) == 0x000078, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_Less_IntInt_ReturnValue) == 0x000079, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, K2Node_Select_Default_1) == 0x00007A, "Member 'WBP_Inventory_C_ChangeHeldItem::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_BooleanAND_ReturnValue_1) == 0x00007B, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_Add_IntInt_ReturnValue_2) == 0x00007C, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_SelectText_ReturnValue_2) == 0x000080, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_SelectText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_GetQuickBarItems_Controller_Array_1) == 0x000090, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_GetQuickBarItems_Controller_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000AC, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_GetQuickBarItems_Controller_Array_2) == 0x0000B0, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_GetQuickBarItems_Controller_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_Array_Get_Item_2) == 0x0000C0, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_Array_Length_ReturnValue_2) == 0x0000C8, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000CC, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, K2Node_DynamicCast_AsMatcha_Inventory_Slot_UI_Data) == 0x0000D0, "Member 'WBP_Inventory_C_ChangeHeldItem::K2Node_DynamicCast_AsMatcha_Inventory_Slot_UI_Data' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'WBP_Inventory_C_ChangeHeldItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ChangeHeldItem, CallFunc_TextBinding_GetValue_ReturnValue) == 0x0000E0, "Member 'WBP_Inventory_C_ChangeHeldItem::CallFunc_TextBinding_GetValue_ReturnValue' has a wrong offset!");

// Function WBP_Inventory.WBP_Inventory_C.ExecuteUbergraph_WBP_Inventory
// 0x0190 (0x0190 - 0x0000)
struct WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0004(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             CallFunc_GetUIData_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaInventoryUIData*                 K2Node_DynamicCast_AsMatcha_Inventory_UI_Data;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventoryCategoryUIData*         CallFunc_Map_Find_Value;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventoryCategoryUIData*         K2Node_CustomEvent_CategoryUIData_2;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaInventoryCategoryUIData*         K2Node_CustomEvent_OldCategoryUIData;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOdyUIData*                             K2Node_Event_OldUIData;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaInventoryUIData*                 K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_1;   // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOdyUIData*                             K2Node_Event_NewUIData;                            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaInventoryUIData*                 K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_2;   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventorySlotUIData*             CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventoryCategoryUIData*         K2Node_CustomEvent_CategoryUIData_1;               // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventorySlotUIData*             CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EInputMethod InputMethod)>     K2Node_CreateDelegate_OutputDelegate_3;            // 0x00DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF[0x1];                                       // 0x00EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventoryCategoryUIData*         K2Node_CustomEvent_CategoryUIData;                 // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x1];                                       // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x00FC(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventoryCategoryUIData*         CallFunc_Map_Find_Value_1;                         // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventorySlotUIData*             CallFunc_Array_Get_Item_2;                         // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_CustomEvent_InVisibility;                   // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             Temp_object_Variable;                              // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOdyUIData*                             K2Node_Select_Default;                             // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_C*                   K2Node_Select_Default_1;                           // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_C*                   K2Node_Select_Default_2;                           // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x0158(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	class UMatchaInventoryCategoryUIData*         CallFunc_Map_Find_Value_2;                         // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaUISubsystem*                     CallFunc_GetUISubsystem_ReturnValue;               // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EInputMethod                                  K2Node_CustomEvent_InputMethod;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputMethod                                  CallFunc_GetInputMethod_ReturnValue;               // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0180(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory) == 0x000008, "Wrong alignment on WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory");
static_assert(sizeof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory) == 0x000190, "Wrong size on WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, EntryPoint) == 0x000000, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, Temp_struct_Variable) == 0x000004, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_GetUIData_ReturnValue) == 0x000010, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_GetUIData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_DynamicCast_AsMatcha_Inventory_UI_Data) == 0x000018, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_DynamicCast_AsMatcha_Inventory_UI_Data' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_Map_Find_Value) == 0x000028, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_CustomEvent_CategoryUIData_2) == 0x000048, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_CustomEvent_CategoryUIData_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_CustomEvent_OldCategoryUIData) == 0x000050, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_CustomEvent_OldCategoryUIData' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, Temp_int_Variable) == 0x00005C, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_Event_OldUIData) == 0x000060, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_Event_OldUIData' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_1) == 0x000068, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000071, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_Event_NewUIData) == 0x000078, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_Event_NewUIData' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_2) == 0x000080, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_DynamicCast_AsMatcha_Inventory_UI_Data_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_CreateDelegate_OutputDelegate_1) == 0x00008C, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_IsValid_ReturnValue_2) == 0x00009C, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000A8, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000AC, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_CustomEvent_CategoryUIData_1) == 0x0000C0, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_CustomEvent_CategoryUIData_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000C8, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_IsValid_ReturnValue_3) == 0x0000C9, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0000D8, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000DC, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, Temp_byte_Variable) == 0x0000EC, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_IsValid_ReturnValue_4) == 0x0000ED, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, Temp_byte_Variable_1) == 0x0000EE, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_CustomEvent_CategoryUIData) == 0x0000F0, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_CustomEvent_CategoryUIData' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, Temp_bool_Variable) == 0x0000F8, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000F9, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_IsValid_ReturnValue_5) == 0x0000FA, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, Temp_struct_Variable_1) == 0x0000FC, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_IsValid_ReturnValue_6) == 0x000104, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_Map_Find_Value_1) == 0x000108, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_Map_Find_ReturnValue_1) == 0x000110, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_Array_Get_Item_2) == 0x000118, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000120, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, Temp_byte_Variable_2) == 0x000121, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, Temp_byte_Variable_3) == 0x000122, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, Temp_bool_Variable_1) == 0x000123, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, Temp_int_Variable_1) == 0x000124, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_CustomEvent_InVisibility) == 0x000128, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_CustomEvent_InVisibility' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, Temp_object_Variable) == 0x000130, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, Temp_bool_Variable_2) == 0x000138, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, Temp_int_Variable_2) == 0x00013C, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_Select_Default) == 0x000140, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_Select_Default_1) == 0x000148, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_Select_Default_2) == 0x000150, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, Temp_struct_Variable_2) == 0x000158, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_Map_Find_Value_2) == 0x000160, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_Map_Find_ReturnValue_2) == 0x000168, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000169, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_GetUISubsystem_ReturnValue) == 0x000170, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_GetUISubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_CustomEvent_InputMethod) == 0x000178, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_CustomEvent_InputMethod' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_GetInputMethod_ReturnValue) == 0x000179, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_GetInputMethod_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00017A, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_Select_Default_3) == 0x00017B, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_Select_Default_4) == 0x00017C, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory, K2Node_CreateDelegate_OutputDelegate_4) == 0x000180, "Member 'WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");

// Function WBP_Inventory.WBP_Inventory_C.GetQuickBarItems_Controller
// 0x0020 (0x0020 - 0x0000)
struct WBP_Inventory_C_GetQuickBarItems_Controller final
{
public:
	TArray<class UWBP_InventorySlot_C*>           Array;                                             // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UWBP_InventorySlot_C*>           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_Inventory_C_GetQuickBarItems_Controller) == 0x000008, "Wrong alignment on WBP_Inventory_C_GetQuickBarItems_Controller");
static_assert(sizeof(WBP_Inventory_C_GetQuickBarItems_Controller) == 0x000020, "Wrong size on WBP_Inventory_C_GetQuickBarItems_Controller");
static_assert(offsetof(WBP_Inventory_C_GetQuickBarItems_Controller, Array) == 0x000000, "Member 'WBP_Inventory_C_GetQuickBarItems_Controller::Array' has a wrong offset!");
static_assert(offsetof(WBP_Inventory_C_GetQuickBarItems_Controller, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_Inventory_C_GetQuickBarItems_Controller::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_Inventory.WBP_Inventory_C.HeldItemVisChange
// 0x0001 (0x0001 - 0x0000)
struct WBP_Inventory_C_HeldItemVisChange final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_C_HeldItemVisChange) == 0x000001, "Wrong alignment on WBP_Inventory_C_HeldItemVisChange");
static_assert(sizeof(WBP_Inventory_C_HeldItemVisChange) == 0x000001, "Wrong size on WBP_Inventory_C_HeldItemVisChange");
static_assert(offsetof(WBP_Inventory_C_HeldItemVisChange, InVisibility) == 0x000000, "Member 'WBP_Inventory_C_HeldItemVisChange::InVisibility' has a wrong offset!");

// Function WBP_Inventory.WBP_Inventory_C.OnHeldCategoryUpdated
// 0x0008 (0x0008 - 0x0000)
struct WBP_Inventory_C_OnHeldCategoryUpdated final
{
public:
	class UMatchaInventoryCategoryUIData*         CategoryUIData;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_C_OnHeldCategoryUpdated) == 0x000008, "Wrong alignment on WBP_Inventory_C_OnHeldCategoryUpdated");
static_assert(sizeof(WBP_Inventory_C_OnHeldCategoryUpdated) == 0x000008, "Wrong size on WBP_Inventory_C_OnHeldCategoryUpdated");
static_assert(offsetof(WBP_Inventory_C_OnHeldCategoryUpdated, CategoryUIData) == 0x000000, "Member 'WBP_Inventory_C_OnHeldCategoryUpdated::CategoryUIData' has a wrong offset!");

// Function WBP_Inventory.WBP_Inventory_C.OnInputMethodChanged_Event
// 0x0001 (0x0001 - 0x0000)
struct WBP_Inventory_C_OnInputMethodChanged_Event final
{
public:
	EInputMethod                                  InputMethod;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_C_OnInputMethodChanged_Event) == 0x000001, "Wrong alignment on WBP_Inventory_C_OnInputMethodChanged_Event");
static_assert(sizeof(WBP_Inventory_C_OnInputMethodChanged_Event) == 0x000001, "Wrong size on WBP_Inventory_C_OnInputMethodChanged_Event");
static_assert(offsetof(WBP_Inventory_C_OnInputMethodChanged_Event, InputMethod) == 0x000000, "Member 'WBP_Inventory_C_OnInputMethodChanged_Event::InputMethod' has a wrong offset!");

// Function WBP_Inventory.WBP_Inventory_C.OnSoulCategoryUpdated
// 0x0008 (0x0008 - 0x0000)
struct WBP_Inventory_C_OnSoulCategoryUpdated final
{
public:
	class UMatchaInventoryCategoryUIData*         CategoryUIData;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_C_OnSoulCategoryUpdated) == 0x000008, "Wrong alignment on WBP_Inventory_C_OnSoulCategoryUpdated");
static_assert(sizeof(WBP_Inventory_C_OnSoulCategoryUpdated) == 0x000008, "Wrong size on WBP_Inventory_C_OnSoulCategoryUpdated");
static_assert(offsetof(WBP_Inventory_C_OnSoulCategoryUpdated, CategoryUIData) == 0x000000, "Member 'WBP_Inventory_C_OnSoulCategoryUpdated::CategoryUIData' has a wrong offset!");

// Function WBP_Inventory.WBP_Inventory_C.UnbindCategoryData
// 0x0008 (0x0008 - 0x0000)
struct WBP_Inventory_C_UnbindCategoryData final
{
public:
	class UMatchaInventoryCategoryUIData*         OldCategoryUIData;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_C_UnbindCategoryData) == 0x000008, "Wrong alignment on WBP_Inventory_C_UnbindCategoryData");
static_assert(sizeof(WBP_Inventory_C_UnbindCategoryData) == 0x000008, "Wrong size on WBP_Inventory_C_UnbindCategoryData");
static_assert(offsetof(WBP_Inventory_C_UnbindCategoryData, OldCategoryUIData) == 0x000000, "Member 'WBP_Inventory_C_UnbindCategoryData::OldCategoryUIData' has a wrong offset!");

// Function WBP_Inventory.WBP_Inventory_C.UnbindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_Inventory_C_UnbindData final
{
public:
	class UOdyUIData*                             OldUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Inventory_C_UnbindData) == 0x000008, "Wrong alignment on WBP_Inventory_C_UnbindData");
static_assert(sizeof(WBP_Inventory_C_UnbindData) == 0x000008, "Wrong size on WBP_Inventory_C_UnbindData");
static_assert(offsetof(WBP_Inventory_C_UnbindData, OldUIData) == 0x000000, "Member 'WBP_Inventory_C_UnbindData::OldUIData' has a wrong offset!");

}

