#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PlayerUI

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_PlayerUI.WBP_PlayerUI_C.BindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerUI_C_BindData final
{
public:
	class UOdyUIData*                             NewUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerUI_C_BindData) == 0x000008, "Wrong alignment on WBP_PlayerUI_C_BindData");
static_assert(sizeof(WBP_PlayerUI_C_BindData) == 0x000008, "Wrong size on WBP_PlayerUI_C_BindData");
static_assert(offsetof(WBP_PlayerUI_C_BindData, NewUIData) == 0x000000, "Member 'WBP_PlayerUI_C_BindData::NewUIData' has a wrong offset!");

// Function WBP_PlayerUI.WBP_PlayerUI_C.CalculateNewMaxEnergyRatio
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_PlayerUI_C_CalculateNewMaxEnergyRatio final
{
public:
	double                                        MaxRatio;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxMaxEnergy;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LegendaryMaxEnergy;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EpicMaxEnergy;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RareMaxEnergy;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BaseMaxEnergy;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_1;     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_2;     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_3;     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio) == 0x000008, "Wrong alignment on WBP_PlayerUI_C_CalculateNewMaxEnergyRatio");
static_assert(sizeof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio) == 0x0000B8, "Wrong size on WBP_PlayerUI_C_CalculateNewMaxEnergyRatio");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, MaxRatio) == 0x000000, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::MaxRatio' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, MaxMaxEnergy) == 0x000008, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::MaxMaxEnergy' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, LegendaryMaxEnergy) == 0x000010, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::LegendaryMaxEnergy' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, EpicMaxEnergy) == 0x000018, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::EpicMaxEnergy' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, RareMaxEnergy) == 0x000020, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::RareMaxEnergy' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, BaseMaxEnergy) == 0x000028, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::BaseMaxEnergy' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, CallFunc_FTrunc_ReturnValue) == 0x000038, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, K2Node_SwitchInteger_CmpSuccess) == 0x00003C, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000048, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000050, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000068, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000069, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, CallFunc_SelectFloat_ReturnValue) == 0x000070, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, CallFunc_SelectFloat_ReturnValue_1) == 0x000078, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x000088, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, CallFunc_SelectFloat_ReturnValue_2) == 0x000090, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000098, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, CallFunc_Divide_DoubleDouble_A_ImplicitCast_1) == 0x0000A0, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::CallFunc_Divide_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, CallFunc_Divide_DoubleDouble_A_ImplicitCast_2) == 0x0000A8, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::CallFunc_Divide_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CalculateNewMaxEnergyRatio, CallFunc_Divide_DoubleDouble_A_ImplicitCast_3) == 0x0000B0, "Member 'WBP_PlayerUI_C_CalculateNewMaxEnergyRatio::CallFunc_Divide_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");

// Function WBP_PlayerUI.WBP_PlayerUI_C.CheckStockRemaining
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerUI_C_CheckStockRemaining final
{
public:
	int32                                         RemainingStock;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerUI_C_CheckStockRemaining) == 0x000004, "Wrong alignment on WBP_PlayerUI_C_CheckStockRemaining");
static_assert(sizeof(WBP_PlayerUI_C_CheckStockRemaining) == 0x000008, "Wrong size on WBP_PlayerUI_C_CheckStockRemaining");
static_assert(offsetof(WBP_PlayerUI_C_CheckStockRemaining, RemainingStock) == 0x000000, "Member 'WBP_PlayerUI_C_CheckStockRemaining::RemainingStock' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_CheckStockRemaining, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'WBP_PlayerUI_C_CheckStockRemaining::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_PlayerUI.WBP_PlayerUI_C.ExecuteUbergraph_WBP_PlayerUI
// 0x02A0 (0x02A0 - 0x0000)
struct WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             K2Node_Event_NewUIData;                            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOdyUIData*                             K2Node_Event_OldUIData;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaPlayerUIData*                    K2Node_DynamicCast_AsMatcha_Player_UI_Data;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaPlayerUIData*                    K2Node_DynamicCast_AsMatcha_Player_UI_Data_1;      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PreviousDamagePercent;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CurrentDamagePercent;           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorForDamagePercent_DamageColor;     // 0x0040(0x0014)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 OldValue, int32 NewValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_WasPlayerAlive;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsPlayerAlive;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool OldValue, bool NewValue)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PreviousTeamNumber;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CurrentTeamNumber;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 OldValue, int32 NewValue)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOdyUIData*                             CallFunc_GetUIData_ReturnValue;                    // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaPlayerUIData*                    K2Node_DynamicCast_AsMatcha_Player_UI_Data_2;      // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 OldValue, int32 NewValue)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaSnapNetGameInstance*             CallFunc_GetMatchaSnapNetGameInstance_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorForAllies_ReturnValue;            // 0x00D0(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorForTeamNumber_ReturnValue;        // 0x00E0(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00F0(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float OldValue, float NewValue)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x012C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OldValue_5;                     // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue_5;                     // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float OldValue, float NewValue)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0144(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OldValue_4;                     // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue_4;                     // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_TrySetNewShieldColorUI_MaxRatio;          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16B[0x1];                                      // 0x016B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float OldValue, float NewValue)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x016C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float OldValue, float NewValue)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x017C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OldValue_3;                     // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue_3;                     // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OldValue_2;                     // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue_2;                     // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculateNewMaxEnergyRatio_MaxRatio;      // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool OldValue, bool NewValue)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x01AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA[0x2];                                      // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x01DC(0x0014)()
	bool                                          K2Node_CustomEvent_OldValue_1;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue_1;                     // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F2[0x6];                                      // 0x01F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21A[0x2];                                      // 0x021A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_OldValue;                       // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewValue;                       // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0226(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0227(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMatchaUIDataModelBase*                 CallFunc_GetUIDataModel_ReturnValue;               // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IntBinding_GetValue_ReturnValue;          // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_CurrentMaxShieldRatio_ImplicitCast; // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_TryUpdateEnergyChunks_CurrentEnergy_ImplicitCast; // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_CurrentMaxEnergyRatio_ImplicitCast; // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Max_ImplicitCast;                  // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI) == 0x000008, "Wrong alignment on WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI");
static_assert(sizeof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI) == 0x0002A0, "Wrong size on WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, EntryPoint) == 0x000000, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_Event_NewUIData) == 0x000008, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_Event_NewUIData' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_Event_OldUIData) == 0x000010, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_Event_OldUIData' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_DynamicCast_AsMatcha_Player_UI_Data) == 0x000018, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_DynamicCast_AsMatcha_Player_UI_Data' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_DynamicCast_AsMatcha_Player_UI_Data_1) == 0x000028, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_DynamicCast_AsMatcha_Player_UI_Data_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_Event_IsDesignTime) == 0x000031, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, Temp_byte_Variable) == 0x000032, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, Temp_byte_Variable_1) == 0x000033, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, Temp_bool_Variable) == 0x000034, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CustomEvent_PreviousDamagePercent) == 0x000038, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CustomEvent_PreviousDamagePercent' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CustomEvent_CurrentDamagePercent) == 0x00003C, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CustomEvent_CurrentDamagePercent' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_GetColorForDamagePercent_DamageColor) == 0x000040, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_GetColorForDamagePercent_DamageColor' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_Select_Default) == 0x000054, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, Temp_byte_Variable_2) == 0x000055, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CustomEvent_WasPlayerAlive) == 0x000068, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CustomEvent_WasPlayerAlive' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CustomEvent_IsPlayerAlive) == 0x000069, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CustomEvent_IsPlayerAlive' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CreateDelegate_OutputDelegate_1) == 0x00006C, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, Temp_byte_Variable_3) == 0x00007C, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CustomEvent_PreviousTeamNumber) == 0x000080, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CustomEvent_PreviousTeamNumber' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CustomEvent_CurrentTeamNumber) == 0x000084, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CustomEvent_CurrentTeamNumber' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CreateDelegate_OutputDelegate_2) == 0x000088, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_GetUIData_ReturnValue) == 0x000098, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_GetUIData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, Temp_bool_Variable_1) == 0x0000A0, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_DynamicCast_AsMatcha_Player_UI_Data_2) == 0x0000A8, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_DynamicCast_AsMatcha_Player_UI_Data_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000B4, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_GetMatchaSnapNetGameInstance_ReturnValue) == 0x0000C8, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_GetMatchaSnapNetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_GetColorForAllies_ReturnValue) == 0x0000D0, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_GetColorForAllies_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_GetColorForTeamNumber_ReturnValue) == 0x0000E0, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_GetColorForTeamNumber_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_Event_MyGeometry) == 0x0000F0, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_Event_InDeltaTime) == 0x000128, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CreateDelegate_OutputDelegate_4) == 0x00012C, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CustomEvent_OldValue_5) == 0x00013C, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CustomEvent_OldValue_5' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CustomEvent_NewValue_5) == 0x000140, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CustomEvent_NewValue_5' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CreateDelegate_OutputDelegate_5) == 0x000144, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CustomEvent_OldValue_4) == 0x000154, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CustomEvent_OldValue_4' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CustomEvent_NewValue_4) == 0x000158, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CustomEvent_NewValue_4' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_TrySetNewShieldColorUI_MaxRatio) == 0x000160, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_TrySetNewShieldColorUI_MaxRatio' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, Temp_byte_Variable_4) == 0x000168, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, Temp_byte_Variable_5) == 0x000169, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, Temp_bool_Variable_2) == 0x00016A, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CreateDelegate_OutputDelegate_6) == 0x00016C, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CreateDelegate_OutputDelegate_7) == 0x00017C, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CustomEvent_OldValue_3) == 0x00018C, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CustomEvent_OldValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CustomEvent_NewValue_3) == 0x000190, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CustomEvent_NewValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CustomEvent_OldValue_2) == 0x000194, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CustomEvent_OldValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CustomEvent_NewValue_2) == 0x000198, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CustomEvent_NewValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_CalculateNewMaxEnergyRatio_MaxRatio) == 0x0001A0, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_CalculateNewMaxEnergyRatio_MaxRatio' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001A8, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CreateDelegate_OutputDelegate_8) == 0x0001AC, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0001C0, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001C8, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_FClamp_ReturnValue) == 0x0001D0, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, Temp_bool_Variable_3) == 0x0001D8, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, Temp_byte_Variable_6) == 0x0001D9, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_Select_Default_1) == 0x0001DC, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CustomEvent_OldValue_1) == 0x0001F0, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CustomEvent_OldValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CustomEvent_NewValue_1) == 0x0001F1, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CustomEvent_NewValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_SafeDivide_ReturnValue) == 0x0001F8, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_Select_Default_2) == 0x000200, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_MakeVector2D_ReturnValue) == 0x000208, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000218, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, Temp_byte_Variable_7) == 0x000219, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CustomEvent_OldValue) == 0x00021C, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_CustomEvent_NewValue) == 0x000220, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000224, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, Temp_bool_Variable_4) == 0x000225, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_Select_Default_3) == 0x000226, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_Select_Default_4) == 0x000227, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_GetUIDataModel_ReturnValue) == 0x000228, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_GetUIDataModel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_IntBinding_GetValue_ReturnValue) == 0x000230, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_IntBinding_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000234, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_SelectColor_ReturnValue) == 0x000238, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_SafeDivide_A_ImplicitCast) == 0x000248, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_VariableSet_CurrentMaxShieldRatio_ImplicitCast) == 0x000250, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_VariableSet_CurrentMaxShieldRatio_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_TryUpdateEnergyChunks_CurrentEnergy_ImplicitCast) == 0x000258, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_TryUpdateEnergyChunks_CurrentEnergy_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000260, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, K2Node_VariableSet_CurrentMaxEnergyRatio_ImplicitCast) == 0x000268, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::K2Node_VariableSet_CurrentMaxEnergyRatio_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000270, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000278, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000280, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_FClamp_Max_ImplicitCast) == 0x000288, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_FClamp_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000290, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI, CallFunc_SafeDivide_B_ImplicitCast) == 0x000298, "Member 'WBP_PlayerUI_C_ExecuteUbergraph_WBP_PlayerUI::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");

// Function WBP_PlayerUI.WBP_PlayerUI_C.GetColorForDamagePercent
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_PlayerUI_C_GetColorForDamagePercent final
{
public:
	int32                                         DamagePercent;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocalPlayer_0;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            DamageColor;                                       // 0x0008(0x0014)(Parm, OutParm)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0040(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0010)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerUI_C_GetColorForDamagePercent) == 0x000008, "Wrong alignment on WBP_PlayerUI_C_GetColorForDamagePercent");
static_assert(sizeof(WBP_PlayerUI_C_GetColorForDamagePercent) == 0x0000C8, "Wrong size on WBP_PlayerUI_C_GetColorForDamagePercent");
static_assert(offsetof(WBP_PlayerUI_C_GetColorForDamagePercent, DamagePercent) == 0x000000, "Member 'WBP_PlayerUI_C_GetColorForDamagePercent::DamagePercent' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_GetColorForDamagePercent, IsLocalPlayer_0) == 0x000004, "Member 'WBP_PlayerUI_C_GetColorForDamagePercent::IsLocalPlayer_0' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_GetColorForDamagePercent, DamageColor) == 0x000008, "Member 'WBP_PlayerUI_C_GetColorForDamagePercent::DamageColor' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_GetColorForDamagePercent, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'WBP_PlayerUI_C_GetColorForDamagePercent::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_GetColorForDamagePercent, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_PlayerUI_C_GetColorForDamagePercent::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_GetColorForDamagePercent, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_PlayerUI_C_GetColorForDamagePercent::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_GetColorForDamagePercent, CallFunc_FTrunc_ReturnValue) == 0x000038, "Member 'WBP_PlayerUI_C_GetColorForDamagePercent::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_GetColorForDamagePercent, CallFunc_Conv_IntToText_ReturnValue) == 0x000040, "Member 'WBP_PlayerUI_C_GetColorForDamagePercent::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_GetColorForDamagePercent, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'WBP_PlayerUI_C_GetColorForDamagePercent::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_GetColorForDamagePercent, K2Node_MakeArray_Array) == 0x000098, "Member 'WBP_PlayerUI_C_GetColorForDamagePercent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_GetColorForDamagePercent, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'WBP_PlayerUI_C_GetColorForDamagePercent::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_GetColorForDamagePercent, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'WBP_PlayerUI_C_GetColorForDamagePercent::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_GetColorForDamagePercent, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000C0, "Member 'WBP_PlayerUI_C_GetColorForDamagePercent::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_PlayerUI.WBP_PlayerUI_C.OnIsSpectatedChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_PlayerUI_C_OnIsSpectatedChanged final
{
public:
	bool                                          OldValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewValue;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerUI_C_OnIsSpectatedChanged) == 0x000001, "Wrong alignment on WBP_PlayerUI_C_OnIsSpectatedChanged");
static_assert(sizeof(WBP_PlayerUI_C_OnIsSpectatedChanged) == 0x000002, "Wrong size on WBP_PlayerUI_C_OnIsSpectatedChanged");
static_assert(offsetof(WBP_PlayerUI_C_OnIsSpectatedChanged, OldValue) == 0x000000, "Member 'WBP_PlayerUI_C_OnIsSpectatedChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_OnIsSpectatedChanged, NewValue) == 0x000001, "Member 'WBP_PlayerUI_C_OnIsSpectatedChanged::NewValue' has a wrong offset!");

// Function WBP_PlayerUI.WBP_PlayerUI_C.OnPlayerIndexChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerUI_C_OnPlayerIndexChanged final
{
public:
	int32                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerUI_C_OnPlayerIndexChanged) == 0x000004, "Wrong alignment on WBP_PlayerUI_C_OnPlayerIndexChanged");
static_assert(sizeof(WBP_PlayerUI_C_OnPlayerIndexChanged) == 0x000008, "Wrong size on WBP_PlayerUI_C_OnPlayerIndexChanged");
static_assert(offsetof(WBP_PlayerUI_C_OnPlayerIndexChanged, OldValue) == 0x000000, "Member 'WBP_PlayerUI_C_OnPlayerIndexChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_OnPlayerIndexChanged, NewValue) == 0x000004, "Member 'WBP_PlayerUI_C_OnPlayerIndexChanged::NewValue' has a wrong offset!");

// Function WBP_PlayerUI.WBP_PlayerUI_C.OnPlayerLivenessChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_PlayerUI_C_OnPlayerLivenessChanged final
{
public:
	bool                                          WasPlayerAlive;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayerAlive;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerUI_C_OnPlayerLivenessChanged) == 0x000001, "Wrong alignment on WBP_PlayerUI_C_OnPlayerLivenessChanged");
static_assert(sizeof(WBP_PlayerUI_C_OnPlayerLivenessChanged) == 0x000002, "Wrong size on WBP_PlayerUI_C_OnPlayerLivenessChanged");
static_assert(offsetof(WBP_PlayerUI_C_OnPlayerLivenessChanged, WasPlayerAlive) == 0x000000, "Member 'WBP_PlayerUI_C_OnPlayerLivenessChanged::WasPlayerAlive' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_OnPlayerLivenessChanged, IsPlayerAlive) == 0x000001, "Member 'WBP_PlayerUI_C_OnPlayerLivenessChanged::IsPlayerAlive' has a wrong offset!");

// Function WBP_PlayerUI.WBP_PlayerUI_C.OnTeamNumberChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerUI_C_OnTeamNumberChanged final
{
public:
	int32                                         PreviousTeamNumber;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentTeamNumber;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerUI_C_OnTeamNumberChanged) == 0x000004, "Wrong alignment on WBP_PlayerUI_C_OnTeamNumberChanged");
static_assert(sizeof(WBP_PlayerUI_C_OnTeamNumberChanged) == 0x000008, "Wrong size on WBP_PlayerUI_C_OnTeamNumberChanged");
static_assert(offsetof(WBP_PlayerUI_C_OnTeamNumberChanged, PreviousTeamNumber) == 0x000000, "Member 'WBP_PlayerUI_C_OnTeamNumberChanged::PreviousTeamNumber' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_OnTeamNumberChanged, CurrentTeamNumber) == 0x000004, "Member 'WBP_PlayerUI_C_OnTeamNumberChanged::CurrentTeamNumber' has a wrong offset!");

// Function WBP_PlayerUI.WBP_PlayerUI_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_PlayerUI_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerUI_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_PlayerUI_C_PreConstruct");
static_assert(sizeof(WBP_PlayerUI_C_PreConstruct) == 0x000001, "Wrong size on WBP_PlayerUI_C_PreConstruct");
static_assert(offsetof(WBP_PlayerUI_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_PlayerUI_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_PlayerUI.WBP_PlayerUI_C.SetColorsForDamagePercent
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerUI_C_SetColorsForDamagePercent final
{
public:
	int32                                         PreviousDamagePercent;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentDamagePercent;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerUI_C_SetColorsForDamagePercent) == 0x000004, "Wrong alignment on WBP_PlayerUI_C_SetColorsForDamagePercent");
static_assert(sizeof(WBP_PlayerUI_C_SetColorsForDamagePercent) == 0x000008, "Wrong size on WBP_PlayerUI_C_SetColorsForDamagePercent");
static_assert(offsetof(WBP_PlayerUI_C_SetColorsForDamagePercent, PreviousDamagePercent) == 0x000000, "Member 'WBP_PlayerUI_C_SetColorsForDamagePercent::PreviousDamagePercent' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_SetColorsForDamagePercent, CurrentDamagePercent) == 0x000004, "Member 'WBP_PlayerUI_C_SetColorsForDamagePercent::CurrentDamagePercent' has a wrong offset!");

// Function WBP_PlayerUI.WBP_PlayerUI_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_PlayerUI_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerUI_C_Tick) == 0x000004, "Wrong alignment on WBP_PlayerUI_C_Tick");
static_assert(sizeof(WBP_PlayerUI_C_Tick) == 0x00003C, "Wrong size on WBP_PlayerUI_C_Tick");
static_assert(offsetof(WBP_PlayerUI_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_PlayerUI_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_PlayerUI_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_PlayerUI.WBP_PlayerUI_C.TrySetNewShieldColorUI
// 0x0078 (0x0078 - 0x0000)
struct WBP_PlayerUI_C_TrySetNewShieldColorUI final
{
public:
	double                                        MaxRatio;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LegendaryMaxShield;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EpicMaxShield;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RareMaxShield;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BaseMaxShield;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_2; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerUI_C_TrySetNewShieldColorUI) == 0x000008, "Wrong alignment on WBP_PlayerUI_C_TrySetNewShieldColorUI");
static_assert(sizeof(WBP_PlayerUI_C_TrySetNewShieldColorUI) == 0x000078, "Wrong size on WBP_PlayerUI_C_TrySetNewShieldColorUI");
static_assert(offsetof(WBP_PlayerUI_C_TrySetNewShieldColorUI, MaxRatio) == 0x000000, "Member 'WBP_PlayerUI_C_TrySetNewShieldColorUI::MaxRatio' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_TrySetNewShieldColorUI, LegendaryMaxShield) == 0x000008, "Member 'WBP_PlayerUI_C_TrySetNewShieldColorUI::LegendaryMaxShield' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_TrySetNewShieldColorUI, EpicMaxShield) == 0x000010, "Member 'WBP_PlayerUI_C_TrySetNewShieldColorUI::EpicMaxShield' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_TrySetNewShieldColorUI, RareMaxShield) == 0x000018, "Member 'WBP_PlayerUI_C_TrySetNewShieldColorUI::RareMaxShield' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_TrySetNewShieldColorUI, BaseMaxShield) == 0x000020, "Member 'WBP_PlayerUI_C_TrySetNewShieldColorUI::BaseMaxShield' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_TrySetNewShieldColorUI, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_PlayerUI_C_TrySetNewShieldColorUI::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_TrySetNewShieldColorUI, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000029, "Member 'WBP_PlayerUI_C_TrySetNewShieldColorUI::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_TrySetNewShieldColorUI, CallFunc_SelectColor_ReturnValue) == 0x00002C, "Member 'WBP_PlayerUI_C_TrySetNewShieldColorUI::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_TrySetNewShieldColorUI, CallFunc_SelectColor_ReturnValue_1) == 0x00003C, "Member 'WBP_PlayerUI_C_TrySetNewShieldColorUI::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_TrySetNewShieldColorUI, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x00004C, "Member 'WBP_PlayerUI_C_TrySetNewShieldColorUI::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_TrySetNewShieldColorUI, CallFunc_SelectColor_ReturnValue_2) == 0x000050, "Member 'WBP_PlayerUI_C_TrySetNewShieldColorUI::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_TrySetNewShieldColorUI, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000060, "Member 'WBP_PlayerUI_C_TrySetNewShieldColorUI::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_TrySetNewShieldColorUI, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1) == 0x000068, "Member 'WBP_PlayerUI_C_TrySetNewShieldColorUI::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_TrySetNewShieldColorUI, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_2) == 0x000070, "Member 'WBP_PlayerUI_C_TrySetNewShieldColorUI::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");

// Function WBP_PlayerUI.WBP_PlayerUI_C.TryUpdateEnergyChunks
// 0x0018 (0x0018 - 0x0000)
struct WBP_PlayerUI_C_TryUpdateEnergyChunks final
{
public:
	double                                        CurrentEnergy;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerUI_C_TryUpdateEnergyChunks) == 0x000008, "Wrong alignment on WBP_PlayerUI_C_TryUpdateEnergyChunks");
static_assert(sizeof(WBP_PlayerUI_C_TryUpdateEnergyChunks) == 0x000018, "Wrong size on WBP_PlayerUI_C_TryUpdateEnergyChunks");
static_assert(offsetof(WBP_PlayerUI_C_TryUpdateEnergyChunks, CurrentEnergy) == 0x000000, "Member 'WBP_PlayerUI_C_TryUpdateEnergyChunks::CurrentEnergy' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_TryUpdateEnergyChunks, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_PlayerUI_C_TryUpdateEnergyChunks::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_TryUpdateEnergyChunks, CallFunc_FTrunc_ReturnValue) == 0x000010, "Member 'WBP_PlayerUI_C_TryUpdateEnergyChunks::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_TryUpdateEnergyChunks, K2Node_SwitchInteger_CmpSuccess) == 0x000014, "Member 'WBP_PlayerUI_C_TryUpdateEnergyChunks::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WBP_PlayerUI.WBP_PlayerUI_C.UnbindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerUI_C_UnbindData final
{
public:
	class UOdyUIData*                             OldUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerUI_C_UnbindData) == 0x000008, "Wrong alignment on WBP_PlayerUI_C_UnbindData");
static_assert(sizeof(WBP_PlayerUI_C_UnbindData) == 0x000008, "Wrong size on WBP_PlayerUI_C_UnbindData");
static_assert(offsetof(WBP_PlayerUI_C_UnbindData, OldUIData) == 0x000000, "Member 'WBP_PlayerUI_C_UnbindData::OldUIData' has a wrong offset!");

// Function WBP_PlayerUI.WBP_PlayerUI_C.UpdateCurrentEnergy
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerUI_C_UpdateCurrentEnergy final
{
public:
	float                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerUI_C_UpdateCurrentEnergy) == 0x000004, "Wrong alignment on WBP_PlayerUI_C_UpdateCurrentEnergy");
static_assert(sizeof(WBP_PlayerUI_C_UpdateCurrentEnergy) == 0x000008, "Wrong size on WBP_PlayerUI_C_UpdateCurrentEnergy");
static_assert(offsetof(WBP_PlayerUI_C_UpdateCurrentEnergy, OldValue) == 0x000000, "Member 'WBP_PlayerUI_C_UpdateCurrentEnergy::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_UpdateCurrentEnergy, NewValue) == 0x000004, "Member 'WBP_PlayerUI_C_UpdateCurrentEnergy::NewValue' has a wrong offset!");

// Function WBP_PlayerUI.WBP_PlayerUI_C.UpdatedCurrentShieldAmount
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerUI_C_UpdatedCurrentShieldAmount final
{
public:
	float                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerUI_C_UpdatedCurrentShieldAmount) == 0x000004, "Wrong alignment on WBP_PlayerUI_C_UpdatedCurrentShieldAmount");
static_assert(sizeof(WBP_PlayerUI_C_UpdatedCurrentShieldAmount) == 0x000008, "Wrong size on WBP_PlayerUI_C_UpdatedCurrentShieldAmount");
static_assert(offsetof(WBP_PlayerUI_C_UpdatedCurrentShieldAmount, OldValue) == 0x000000, "Member 'WBP_PlayerUI_C_UpdatedCurrentShieldAmount::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_UpdatedCurrentShieldAmount, NewValue) == 0x000004, "Member 'WBP_PlayerUI_C_UpdatedCurrentShieldAmount::NewValue' has a wrong offset!");

// Function WBP_PlayerUI.WBP_PlayerUI_C.UpdateMaxEnergy
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerUI_C_UpdateMaxEnergy final
{
public:
	float                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerUI_C_UpdateMaxEnergy) == 0x000004, "Wrong alignment on WBP_PlayerUI_C_UpdateMaxEnergy");
static_assert(sizeof(WBP_PlayerUI_C_UpdateMaxEnergy) == 0x000008, "Wrong size on WBP_PlayerUI_C_UpdateMaxEnergy");
static_assert(offsetof(WBP_PlayerUI_C_UpdateMaxEnergy, OldValue) == 0x000000, "Member 'WBP_PlayerUI_C_UpdateMaxEnergy::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_UpdateMaxEnergy, NewValue) == 0x000004, "Member 'WBP_PlayerUI_C_UpdateMaxEnergy::NewValue' has a wrong offset!");

// Function WBP_PlayerUI.WBP_PlayerUI_C.UpdateMaxShieldAmount
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerUI_C_UpdateMaxShieldAmount final
{
public:
	float                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerUI_C_UpdateMaxShieldAmount) == 0x000004, "Wrong alignment on WBP_PlayerUI_C_UpdateMaxShieldAmount");
static_assert(sizeof(WBP_PlayerUI_C_UpdateMaxShieldAmount) == 0x000008, "Wrong size on WBP_PlayerUI_C_UpdateMaxShieldAmount");
static_assert(offsetof(WBP_PlayerUI_C_UpdateMaxShieldAmount, OldValue) == 0x000000, "Member 'WBP_PlayerUI_C_UpdateMaxShieldAmount::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerUI_C_UpdateMaxShieldAmount, NewValue) == 0x000004, "Member 'WBP_PlayerUI_C_UpdateMaxShieldAmount::NewValue' has a wrong offset!");

}

