#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HeaderForCategory

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_HeaderForCategory.WBP_HeaderForCategory_C.ExecuteUbergraph_WBP_HeaderForCategory
// 0x0008 (0x0008 - 0x0000)
struct WBP_HeaderForCategory_C_ExecuteUbergraph_WBP_HeaderForCategory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeaderForCategory_C_ExecuteUbergraph_WBP_HeaderForCategory) == 0x000004, "Wrong alignment on WBP_HeaderForCategory_C_ExecuteUbergraph_WBP_HeaderForCategory");
static_assert(sizeof(WBP_HeaderForCategory_C_ExecuteUbergraph_WBP_HeaderForCategory) == 0x000008, "Wrong size on WBP_HeaderForCategory_C_ExecuteUbergraph_WBP_HeaderForCategory");
static_assert(offsetof(WBP_HeaderForCategory_C_ExecuteUbergraph_WBP_HeaderForCategory, EntryPoint) == 0x000000, "Member 'WBP_HeaderForCategory_C_ExecuteUbergraph_WBP_HeaderForCategory::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_ExecuteUbergraph_WBP_HeaderForCategory, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_HeaderForCategory_C_ExecuteUbergraph_WBP_HeaderForCategory::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_HeaderForCategory.WBP_HeaderForCategory_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeaderForCategory_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeaderForCategory_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_HeaderForCategory_C_PreConstruct");
static_assert(sizeof(WBP_HeaderForCategory_C_PreConstruct) == 0x000001, "Wrong size on WBP_HeaderForCategory_C_PreConstruct");
static_assert(offsetof(WBP_HeaderForCategory_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_HeaderForCategory_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_HeaderForCategory.WBP_HeaderForCategory_C.SetForm
// 0x0078 (0x0078 - 0x0000)
struct WBP_HeaderForCategory_C_SetForm final
{
public:
	struct FLinearColor                           ColorBG;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BottomRotate;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BottomOffset;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LeftRotate;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LeftOffset;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RightRotate;                                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RightOffset;                                       // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TopRotate;                                         // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TopOffset;                                         // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_6; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_7; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeaderForCategory_C_SetForm) == 0x000008, "Wrong alignment on WBP_HeaderForCategory_C_SetForm");
static_assert(sizeof(WBP_HeaderForCategory_C_SetForm) == 0x000078, "Wrong size on WBP_HeaderForCategory_C_SetForm");
static_assert(offsetof(WBP_HeaderForCategory_C_SetForm, ColorBG) == 0x000000, "Member 'WBP_HeaderForCategory_C_SetForm::ColorBG' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetForm, BottomRotate) == 0x000010, "Member 'WBP_HeaderForCategory_C_SetForm::BottomRotate' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetForm, BottomOffset) == 0x000018, "Member 'WBP_HeaderForCategory_C_SetForm::BottomOffset' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetForm, LeftRotate) == 0x000020, "Member 'WBP_HeaderForCategory_C_SetForm::LeftRotate' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetForm, LeftOffset) == 0x000028, "Member 'WBP_HeaderForCategory_C_SetForm::LeftOffset' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetForm, RightRotate) == 0x000030, "Member 'WBP_HeaderForCategory_C_SetForm::RightRotate' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetForm, RightOffset) == 0x000038, "Member 'WBP_HeaderForCategory_C_SetForm::RightOffset' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetForm, TopRotate) == 0x000040, "Member 'WBP_HeaderForCategory_C_SetForm::TopRotate' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetForm, TopOffset) == 0x000048, "Member 'WBP_HeaderForCategory_C_SetForm::TopOffset' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetForm, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000050, "Member 'WBP_HeaderForCategory_C_SetForm::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetForm, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000058, "Member 'WBP_HeaderForCategory_C_SetForm::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetForm, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x00005C, "Member 'WBP_HeaderForCategory_C_SetForm::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetForm, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000060, "Member 'WBP_HeaderForCategory_C_SetForm::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetForm, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x000064, "Member 'WBP_HeaderForCategory_C_SetForm::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetForm, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x000068, "Member 'WBP_HeaderForCategory_C_SetForm::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetForm, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x00006C, "Member 'WBP_HeaderForCategory_C_SetForm::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetForm, CallFunc_SetScalarParameterValue_Value_ImplicitCast_6) == 0x000070, "Member 'WBP_HeaderForCategory_C_SetForm::CallFunc_SetScalarParameterValue_Value_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetForm, CallFunc_SetScalarParameterValue_Value_ImplicitCast_7) == 0x000074, "Member 'WBP_HeaderForCategory_C_SetForm::CallFunc_SetScalarParameterValue_Value_ImplicitCast_7' has a wrong offset!");

// Function WBP_HeaderForCategory.WBP_HeaderForCategory_C.SetVisual
// 0x0100 (0x0100 - 0x0000)
struct WBP_HeaderForCategory_C_SetVisual final
{
public:
	class FText                                   Text_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FLinearColor                           ColorText;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         InFontInfo;                                        // 0x0020(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FMargin                                PaddingText;                                       // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           ColorBG;                                           // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BottomRotate;                                      // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BottomOffset;                                      // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LeftRotate;                                        // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LeftOffset;                                        // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RightRotate;                                       // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RightOffset;                                       // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TopRotate;                                         // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TopOffset;                                         // 0x00D8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00E8(0x0014)()
};
static_assert(alignof(WBP_HeaderForCategory_C_SetVisual) == 0x000008, "Wrong alignment on WBP_HeaderForCategory_C_SetVisual");
static_assert(sizeof(WBP_HeaderForCategory_C_SetVisual) == 0x000100, "Wrong size on WBP_HeaderForCategory_C_SetVisual");
static_assert(offsetof(WBP_HeaderForCategory_C_SetVisual, Text_0) == 0x000000, "Member 'WBP_HeaderForCategory_C_SetVisual::Text_0' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetVisual, ColorText) == 0x000010, "Member 'WBP_HeaderForCategory_C_SetVisual::ColorText' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetVisual, InFontInfo) == 0x000020, "Member 'WBP_HeaderForCategory_C_SetVisual::InFontInfo' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetVisual, PaddingText) == 0x000080, "Member 'WBP_HeaderForCategory_C_SetVisual::PaddingText' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetVisual, ColorBG) == 0x000090, "Member 'WBP_HeaderForCategory_C_SetVisual::ColorBG' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetVisual, BottomRotate) == 0x0000A0, "Member 'WBP_HeaderForCategory_C_SetVisual::BottomRotate' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetVisual, BottomOffset) == 0x0000A8, "Member 'WBP_HeaderForCategory_C_SetVisual::BottomOffset' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetVisual, LeftRotate) == 0x0000B0, "Member 'WBP_HeaderForCategory_C_SetVisual::LeftRotate' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetVisual, LeftOffset) == 0x0000B8, "Member 'WBP_HeaderForCategory_C_SetVisual::LeftOffset' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetVisual, RightRotate) == 0x0000C0, "Member 'WBP_HeaderForCategory_C_SetVisual::RightRotate' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetVisual, RightOffset) == 0x0000C8, "Member 'WBP_HeaderForCategory_C_SetVisual::RightOffset' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetVisual, TopRotate) == 0x0000D0, "Member 'WBP_HeaderForCategory_C_SetVisual::TopRotate' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetVisual, TopOffset) == 0x0000D8, "Member 'WBP_HeaderForCategory_C_SetVisual::TopOffset' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetVisual, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x0000E0, "Member 'WBP_HeaderForCategory_C_SetVisual::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeaderForCategory_C_SetVisual, K2Node_MakeStruct_SlateColor) == 0x0000E8, "Member 'WBP_HeaderForCategory_C_SetVisual::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

