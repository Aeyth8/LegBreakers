#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Sentry

#include "Basic.hpp"

#include "Sentry_structs.hpp"


namespace SDK::Params
{

// Function Sentry.SentryAttachment.InitializeWithData
// 0x0030 (0x0030 - 0x0000)
struct SentryAttachment_InitializeWithData final
{
public:
	TArray<uint8>                                 Data;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ContentType;                                       // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryAttachment_InitializeWithData) == 0x000008, "Wrong alignment on SentryAttachment_InitializeWithData");
static_assert(sizeof(SentryAttachment_InitializeWithData) == 0x000030, "Wrong size on SentryAttachment_InitializeWithData");
static_assert(offsetof(SentryAttachment_InitializeWithData, Data) == 0x000000, "Member 'SentryAttachment_InitializeWithData::Data' has a wrong offset!");
static_assert(offsetof(SentryAttachment_InitializeWithData, Filename) == 0x000010, "Member 'SentryAttachment_InitializeWithData::Filename' has a wrong offset!");
static_assert(offsetof(SentryAttachment_InitializeWithData, ContentType) == 0x000020, "Member 'SentryAttachment_InitializeWithData::ContentType' has a wrong offset!");

// Function Sentry.SentryAttachment.InitializeWithPath
// 0x0030 (0x0030 - 0x0000)
struct SentryAttachment_InitializeWithPath final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ContentType;                                       // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryAttachment_InitializeWithPath) == 0x000008, "Wrong alignment on SentryAttachment_InitializeWithPath");
static_assert(sizeof(SentryAttachment_InitializeWithPath) == 0x000030, "Wrong size on SentryAttachment_InitializeWithPath");
static_assert(offsetof(SentryAttachment_InitializeWithPath, Path) == 0x000000, "Member 'SentryAttachment_InitializeWithPath::Path' has a wrong offset!");
static_assert(offsetof(SentryAttachment_InitializeWithPath, Filename) == 0x000010, "Member 'SentryAttachment_InitializeWithPath::Filename' has a wrong offset!");
static_assert(offsetof(SentryAttachment_InitializeWithPath, ContentType) == 0x000020, "Member 'SentryAttachment_InitializeWithPath::ContentType' has a wrong offset!");

// Function Sentry.SentryAttachment.GetContentType
// 0x0010 (0x0010 - 0x0000)
struct SentryAttachment_GetContentType final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryAttachment_GetContentType) == 0x000008, "Wrong alignment on SentryAttachment_GetContentType");
static_assert(sizeof(SentryAttachment_GetContentType) == 0x000010, "Wrong size on SentryAttachment_GetContentType");
static_assert(offsetof(SentryAttachment_GetContentType, ReturnValue) == 0x000000, "Member 'SentryAttachment_GetContentType::ReturnValue' has a wrong offset!");

// Function Sentry.SentryAttachment.GetData
// 0x0010 (0x0010 - 0x0000)
struct SentryAttachment_GetData final
{
public:
	TArray<uint8>                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryAttachment_GetData) == 0x000008, "Wrong alignment on SentryAttachment_GetData");
static_assert(sizeof(SentryAttachment_GetData) == 0x000010, "Wrong size on SentryAttachment_GetData");
static_assert(offsetof(SentryAttachment_GetData, ReturnValue) == 0x000000, "Member 'SentryAttachment_GetData::ReturnValue' has a wrong offset!");

// Function Sentry.SentryAttachment.GetFilename
// 0x0010 (0x0010 - 0x0000)
struct SentryAttachment_GetFilename final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryAttachment_GetFilename) == 0x000008, "Wrong alignment on SentryAttachment_GetFilename");
static_assert(sizeof(SentryAttachment_GetFilename) == 0x000010, "Wrong size on SentryAttachment_GetFilename");
static_assert(offsetof(SentryAttachment_GetFilename, ReturnValue) == 0x000000, "Member 'SentryAttachment_GetFilename::ReturnValue' has a wrong offset!");

// Function Sentry.SentryAttachment.GetPath
// 0x0010 (0x0010 - 0x0000)
struct SentryAttachment_GetPath final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryAttachment_GetPath) == 0x000008, "Wrong alignment on SentryAttachment_GetPath");
static_assert(sizeof(SentryAttachment_GetPath) == 0x000010, "Wrong size on SentryAttachment_GetPath");
static_assert(offsetof(SentryAttachment_GetPath, ReturnValue) == 0x000000, "Member 'SentryAttachment_GetPath::ReturnValue' has a wrong offset!");

// Function Sentry.SentryBeforeSendHandler.HandleBeforeSend
// 0x0018 (0x0018 - 0x0000)
struct SentryBeforeSendHandler_HandleBeforeSend final
{
public:
	class USentryEvent*                           Event;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USentryHint*                            Hint;                                              // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USentryEvent*                           ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryBeforeSendHandler_HandleBeforeSend) == 0x000008, "Wrong alignment on SentryBeforeSendHandler_HandleBeforeSend");
static_assert(sizeof(SentryBeforeSendHandler_HandleBeforeSend) == 0x000018, "Wrong size on SentryBeforeSendHandler_HandleBeforeSend");
static_assert(offsetof(SentryBeforeSendHandler_HandleBeforeSend, Event) == 0x000000, "Member 'SentryBeforeSendHandler_HandleBeforeSend::Event' has a wrong offset!");
static_assert(offsetof(SentryBeforeSendHandler_HandleBeforeSend, Hint) == 0x000008, "Member 'SentryBeforeSendHandler_HandleBeforeSend::Hint' has a wrong offset!");
static_assert(offsetof(SentryBeforeSendHandler_HandleBeforeSend, ReturnValue) == 0x000010, "Member 'SentryBeforeSendHandler_HandleBeforeSend::ReturnValue' has a wrong offset!");

// Function Sentry.SentryBreadcrumb.SetCategory
// 0x0010 (0x0010 - 0x0000)
struct SentryBreadcrumb_SetCategory final
{
public:
	class FString                                 Category;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryBreadcrumb_SetCategory) == 0x000008, "Wrong alignment on SentryBreadcrumb_SetCategory");
static_assert(sizeof(SentryBreadcrumb_SetCategory) == 0x000010, "Wrong size on SentryBreadcrumb_SetCategory");
static_assert(offsetof(SentryBreadcrumb_SetCategory, Category) == 0x000000, "Member 'SentryBreadcrumb_SetCategory::Category' has a wrong offset!");

// Function Sentry.SentryBreadcrumb.SetData
// 0x0050 (0x0050 - 0x0000)
struct SentryBreadcrumb_SetData final
{
public:
	TMap<class FString, class FString>            Data;                                              // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryBreadcrumb_SetData) == 0x000008, "Wrong alignment on SentryBreadcrumb_SetData");
static_assert(sizeof(SentryBreadcrumb_SetData) == 0x000050, "Wrong size on SentryBreadcrumb_SetData");
static_assert(offsetof(SentryBreadcrumb_SetData, Data) == 0x000000, "Member 'SentryBreadcrumb_SetData::Data' has a wrong offset!");

// Function Sentry.SentryBreadcrumb.SetLevel
// 0x0001 (0x0001 - 0x0000)
struct SentryBreadcrumb_SetLevel final
{
public:
	ESentryLevel                                  Level;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryBreadcrumb_SetLevel) == 0x000001, "Wrong alignment on SentryBreadcrumb_SetLevel");
static_assert(sizeof(SentryBreadcrumb_SetLevel) == 0x000001, "Wrong size on SentryBreadcrumb_SetLevel");
static_assert(offsetof(SentryBreadcrumb_SetLevel, Level) == 0x000000, "Member 'SentryBreadcrumb_SetLevel::Level' has a wrong offset!");

// Function Sentry.SentryBreadcrumb.SetMessage
// 0x0010 (0x0010 - 0x0000)
struct SentryBreadcrumb_SetMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryBreadcrumb_SetMessage) == 0x000008, "Wrong alignment on SentryBreadcrumb_SetMessage");
static_assert(sizeof(SentryBreadcrumb_SetMessage) == 0x000010, "Wrong size on SentryBreadcrumb_SetMessage");
static_assert(offsetof(SentryBreadcrumb_SetMessage, Message) == 0x000000, "Member 'SentryBreadcrumb_SetMessage::Message' has a wrong offset!");

// Function Sentry.SentryBreadcrumb.SetType
// 0x0010 (0x0010 - 0x0000)
struct SentryBreadcrumb_SetType final
{
public:
	class FString                                 Type;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryBreadcrumb_SetType) == 0x000008, "Wrong alignment on SentryBreadcrumb_SetType");
static_assert(sizeof(SentryBreadcrumb_SetType) == 0x000010, "Wrong size on SentryBreadcrumb_SetType");
static_assert(offsetof(SentryBreadcrumb_SetType, Type) == 0x000000, "Member 'SentryBreadcrumb_SetType::Type' has a wrong offset!");

// Function Sentry.SentryBreadcrumb.GetCategory
// 0x0010 (0x0010 - 0x0000)
struct SentryBreadcrumb_GetCategory final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryBreadcrumb_GetCategory) == 0x000008, "Wrong alignment on SentryBreadcrumb_GetCategory");
static_assert(sizeof(SentryBreadcrumb_GetCategory) == 0x000010, "Wrong size on SentryBreadcrumb_GetCategory");
static_assert(offsetof(SentryBreadcrumb_GetCategory, ReturnValue) == 0x000000, "Member 'SentryBreadcrumb_GetCategory::ReturnValue' has a wrong offset!");

// Function Sentry.SentryBreadcrumb.GetData
// 0x0050 (0x0050 - 0x0000)
struct SentryBreadcrumb_GetData final
{
public:
	TMap<class FString, class FString>            ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryBreadcrumb_GetData) == 0x000008, "Wrong alignment on SentryBreadcrumb_GetData");
static_assert(sizeof(SentryBreadcrumb_GetData) == 0x000050, "Wrong size on SentryBreadcrumb_GetData");
static_assert(offsetof(SentryBreadcrumb_GetData, ReturnValue) == 0x000000, "Member 'SentryBreadcrumb_GetData::ReturnValue' has a wrong offset!");

// Function Sentry.SentryBreadcrumb.GetLevel
// 0x0001 (0x0001 - 0x0000)
struct SentryBreadcrumb_GetLevel final
{
public:
	ESentryLevel                                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryBreadcrumb_GetLevel) == 0x000001, "Wrong alignment on SentryBreadcrumb_GetLevel");
static_assert(sizeof(SentryBreadcrumb_GetLevel) == 0x000001, "Wrong size on SentryBreadcrumb_GetLevel");
static_assert(offsetof(SentryBreadcrumb_GetLevel, ReturnValue) == 0x000000, "Member 'SentryBreadcrumb_GetLevel::ReturnValue' has a wrong offset!");

// Function Sentry.SentryBreadcrumb.GetMessage
// 0x0010 (0x0010 - 0x0000)
struct SentryBreadcrumb_GetMessage final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryBreadcrumb_GetMessage) == 0x000008, "Wrong alignment on SentryBreadcrumb_GetMessage");
static_assert(sizeof(SentryBreadcrumb_GetMessage) == 0x000010, "Wrong size on SentryBreadcrumb_GetMessage");
static_assert(offsetof(SentryBreadcrumb_GetMessage, ReturnValue) == 0x000000, "Member 'SentryBreadcrumb_GetMessage::ReturnValue' has a wrong offset!");

// Function Sentry.SentryBreadcrumb.GetType
// 0x0010 (0x0010 - 0x0000)
struct SentryBreadcrumb_GetType final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryBreadcrumb_GetType) == 0x000008, "Wrong alignment on SentryBreadcrumb_GetType");
static_assert(sizeof(SentryBreadcrumb_GetType) == 0x000010, "Wrong size on SentryBreadcrumb_GetType");
static_assert(offsetof(SentryBreadcrumb_GetType, ReturnValue) == 0x000000, "Member 'SentryBreadcrumb_GetType::ReturnValue' has a wrong offset!");

// Function Sentry.SentryEvent.CreateEventWithMessageAndLevel
// 0x0020 (0x0020 - 0x0000)
struct SentryEvent_CreateEventWithMessageAndLevel final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESentryLevel                                  Level;                                             // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USentryEvent*                           ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryEvent_CreateEventWithMessageAndLevel) == 0x000008, "Wrong alignment on SentryEvent_CreateEventWithMessageAndLevel");
static_assert(sizeof(SentryEvent_CreateEventWithMessageAndLevel) == 0x000020, "Wrong size on SentryEvent_CreateEventWithMessageAndLevel");
static_assert(offsetof(SentryEvent_CreateEventWithMessageAndLevel, Message) == 0x000000, "Member 'SentryEvent_CreateEventWithMessageAndLevel::Message' has a wrong offset!");
static_assert(offsetof(SentryEvent_CreateEventWithMessageAndLevel, Level) == 0x000010, "Member 'SentryEvent_CreateEventWithMessageAndLevel::Level' has a wrong offset!");
static_assert(offsetof(SentryEvent_CreateEventWithMessageAndLevel, ReturnValue) == 0x000018, "Member 'SentryEvent_CreateEventWithMessageAndLevel::ReturnValue' has a wrong offset!");

// Function Sentry.SentryEvent.SetLevel
// 0x0001 (0x0001 - 0x0000)
struct SentryEvent_SetLevel final
{
public:
	ESentryLevel                                  Level;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryEvent_SetLevel) == 0x000001, "Wrong alignment on SentryEvent_SetLevel");
static_assert(sizeof(SentryEvent_SetLevel) == 0x000001, "Wrong size on SentryEvent_SetLevel");
static_assert(offsetof(SentryEvent_SetLevel, Level) == 0x000000, "Member 'SentryEvent_SetLevel::Level' has a wrong offset!");

// Function Sentry.SentryEvent.SetMessage
// 0x0010 (0x0010 - 0x0000)
struct SentryEvent_SetMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryEvent_SetMessage) == 0x000008, "Wrong alignment on SentryEvent_SetMessage");
static_assert(sizeof(SentryEvent_SetMessage) == 0x000010, "Wrong size on SentryEvent_SetMessage");
static_assert(offsetof(SentryEvent_SetMessage, Message) == 0x000000, "Member 'SentryEvent_SetMessage::Message' has a wrong offset!");

// Function Sentry.SentryEvent.GetLevel
// 0x0001 (0x0001 - 0x0000)
struct SentryEvent_GetLevel final
{
public:
	ESentryLevel                                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryEvent_GetLevel) == 0x000001, "Wrong alignment on SentryEvent_GetLevel");
static_assert(sizeof(SentryEvent_GetLevel) == 0x000001, "Wrong size on SentryEvent_GetLevel");
static_assert(offsetof(SentryEvent_GetLevel, ReturnValue) == 0x000000, "Member 'SentryEvent_GetLevel::ReturnValue' has a wrong offset!");

// Function Sentry.SentryEvent.GetMessage
// 0x0010 (0x0010 - 0x0000)
struct SentryEvent_GetMessage final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryEvent_GetMessage) == 0x000008, "Wrong alignment on SentryEvent_GetMessage");
static_assert(sizeof(SentryEvent_GetMessage) == 0x000010, "Wrong size on SentryEvent_GetMessage");
static_assert(offsetof(SentryEvent_GetMessage, ReturnValue) == 0x000000, "Member 'SentryEvent_GetMessage::ReturnValue' has a wrong offset!");

// Function Sentry.SentryEvent.IsCrash
// 0x0001 (0x0001 - 0x0000)
struct SentryEvent_IsCrash final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryEvent_IsCrash) == 0x000001, "Wrong alignment on SentryEvent_IsCrash");
static_assert(sizeof(SentryEvent_IsCrash) == 0x000001, "Wrong size on SentryEvent_IsCrash");
static_assert(offsetof(SentryEvent_IsCrash, ReturnValue) == 0x000000, "Member 'SentryEvent_IsCrash::ReturnValue' has a wrong offset!");

// Function Sentry.SentryHint.AddAttachment
// 0x0008 (0x0008 - 0x0000)
struct SentryHint_AddAttachment final
{
public:
	class USentryAttachment*                      Attachment;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryHint_AddAttachment) == 0x000008, "Wrong alignment on SentryHint_AddAttachment");
static_assert(sizeof(SentryHint_AddAttachment) == 0x000008, "Wrong size on SentryHint_AddAttachment");
static_assert(offsetof(SentryHint_AddAttachment, Attachment) == 0x000000, "Member 'SentryHint_AddAttachment::Attachment' has a wrong offset!");

// Function Sentry.SentryId.ToString
// 0x0010 (0x0010 - 0x0000)
struct SentryId_ToString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryId_ToString) == 0x000008, "Wrong alignment on SentryId_ToString");
static_assert(sizeof(SentryId_ToString) == 0x000010, "Wrong size on SentryId_ToString");
static_assert(offsetof(SentryId_ToString, ReturnValue) == 0x000000, "Member 'SentryId_ToString::ReturnValue' has a wrong offset!");

// Function Sentry.SentryLibrary.ByteArrayToString
// 0x0020 (0x0020 - 0x0000)
struct SentryLibrary_ByteArrayToString final
{
public:
	TArray<uint8>                                 Array;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryLibrary_ByteArrayToString) == 0x000008, "Wrong alignment on SentryLibrary_ByteArrayToString");
static_assert(sizeof(SentryLibrary_ByteArrayToString) == 0x000020, "Wrong size on SentryLibrary_ByteArrayToString");
static_assert(offsetof(SentryLibrary_ByteArrayToString, Array) == 0x000000, "Member 'SentryLibrary_ByteArrayToString::Array' has a wrong offset!");
static_assert(offsetof(SentryLibrary_ByteArrayToString, ReturnValue) == 0x000010, "Member 'SentryLibrary_ByteArrayToString::ReturnValue' has a wrong offset!");

// Function Sentry.SentryLibrary.CreateSentryAttachmentWithData
// 0x0038 (0x0038 - 0x0000)
struct SentryLibrary_CreateSentryAttachmentWithData final
{
public:
	TArray<uint8>                                 Data;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ContentType;                                       // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USentryAttachment*                      ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryLibrary_CreateSentryAttachmentWithData) == 0x000008, "Wrong alignment on SentryLibrary_CreateSentryAttachmentWithData");
static_assert(sizeof(SentryLibrary_CreateSentryAttachmentWithData) == 0x000038, "Wrong size on SentryLibrary_CreateSentryAttachmentWithData");
static_assert(offsetof(SentryLibrary_CreateSentryAttachmentWithData, Data) == 0x000000, "Member 'SentryLibrary_CreateSentryAttachmentWithData::Data' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryAttachmentWithData, Filename) == 0x000010, "Member 'SentryLibrary_CreateSentryAttachmentWithData::Filename' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryAttachmentWithData, ContentType) == 0x000020, "Member 'SentryLibrary_CreateSentryAttachmentWithData::ContentType' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryAttachmentWithData, ReturnValue) == 0x000030, "Member 'SentryLibrary_CreateSentryAttachmentWithData::ReturnValue' has a wrong offset!");

// Function Sentry.SentryLibrary.CreateSentryAttachmentWithPath
// 0x0038 (0x0038 - 0x0000)
struct SentryLibrary_CreateSentryAttachmentWithPath final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ContentType;                                       // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USentryAttachment*                      ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryLibrary_CreateSentryAttachmentWithPath) == 0x000008, "Wrong alignment on SentryLibrary_CreateSentryAttachmentWithPath");
static_assert(sizeof(SentryLibrary_CreateSentryAttachmentWithPath) == 0x000038, "Wrong size on SentryLibrary_CreateSentryAttachmentWithPath");
static_assert(offsetof(SentryLibrary_CreateSentryAttachmentWithPath, Path) == 0x000000, "Member 'SentryLibrary_CreateSentryAttachmentWithPath::Path' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryAttachmentWithPath, Filename) == 0x000010, "Member 'SentryLibrary_CreateSentryAttachmentWithPath::Filename' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryAttachmentWithPath, ContentType) == 0x000020, "Member 'SentryLibrary_CreateSentryAttachmentWithPath::ContentType' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryAttachmentWithPath, ReturnValue) == 0x000030, "Member 'SentryLibrary_CreateSentryAttachmentWithPath::ReturnValue' has a wrong offset!");

// Function Sentry.SentryLibrary.CreateSentryBreadcrumb
// 0x0090 (0x0090 - 0x0000)
struct SentryLibrary_CreateSentryBreadcrumb final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Type;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Category;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            Data;                                              // 0x0030(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	ESentryLevel                                  Level;                                             // 0x0080(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USentryBreadcrumb*                      ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryLibrary_CreateSentryBreadcrumb) == 0x000008, "Wrong alignment on SentryLibrary_CreateSentryBreadcrumb");
static_assert(sizeof(SentryLibrary_CreateSentryBreadcrumb) == 0x000090, "Wrong size on SentryLibrary_CreateSentryBreadcrumb");
static_assert(offsetof(SentryLibrary_CreateSentryBreadcrumb, Message) == 0x000000, "Member 'SentryLibrary_CreateSentryBreadcrumb::Message' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryBreadcrumb, Type) == 0x000010, "Member 'SentryLibrary_CreateSentryBreadcrumb::Type' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryBreadcrumb, Category) == 0x000020, "Member 'SentryLibrary_CreateSentryBreadcrumb::Category' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryBreadcrumb, Data) == 0x000030, "Member 'SentryLibrary_CreateSentryBreadcrumb::Data' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryBreadcrumb, Level) == 0x000080, "Member 'SentryLibrary_CreateSentryBreadcrumb::Level' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryBreadcrumb, ReturnValue) == 0x000088, "Member 'SentryLibrary_CreateSentryBreadcrumb::ReturnValue' has a wrong offset!");

// Function Sentry.SentryLibrary.CreateSentryEvent
// 0x0020 (0x0020 - 0x0000)
struct SentryLibrary_CreateSentryEvent final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESentryLevel                                  Level;                                             // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USentryEvent*                           ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryLibrary_CreateSentryEvent) == 0x000008, "Wrong alignment on SentryLibrary_CreateSentryEvent");
static_assert(sizeof(SentryLibrary_CreateSentryEvent) == 0x000020, "Wrong size on SentryLibrary_CreateSentryEvent");
static_assert(offsetof(SentryLibrary_CreateSentryEvent, Message) == 0x000000, "Member 'SentryLibrary_CreateSentryEvent::Message' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryEvent, Level) == 0x000010, "Member 'SentryLibrary_CreateSentryEvent::Level' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryEvent, ReturnValue) == 0x000018, "Member 'SentryLibrary_CreateSentryEvent::ReturnValue' has a wrong offset!");

// Function Sentry.SentryLibrary.CreateSentryUser
// 0x0098 (0x0098 - 0x0000)
struct SentryLibrary_CreateSentryUser final
{
public:
	class FString                                 Email;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ID;                                                // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserName;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 IpAddress;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            Data;                                              // 0x0040(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class USentryUser*                            ReturnValue;                                       // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryLibrary_CreateSentryUser) == 0x000008, "Wrong alignment on SentryLibrary_CreateSentryUser");
static_assert(sizeof(SentryLibrary_CreateSentryUser) == 0x000098, "Wrong size on SentryLibrary_CreateSentryUser");
static_assert(offsetof(SentryLibrary_CreateSentryUser, Email) == 0x000000, "Member 'SentryLibrary_CreateSentryUser::Email' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryUser, ID) == 0x000010, "Member 'SentryLibrary_CreateSentryUser::ID' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryUser, UserName) == 0x000020, "Member 'SentryLibrary_CreateSentryUser::UserName' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryUser, IpAddress) == 0x000030, "Member 'SentryLibrary_CreateSentryUser::IpAddress' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryUser, Data) == 0x000040, "Member 'SentryLibrary_CreateSentryUser::Data' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryUser, ReturnValue) == 0x000090, "Member 'SentryLibrary_CreateSentryUser::ReturnValue' has a wrong offset!");

// Function Sentry.SentryLibrary.CreateSentryUserFeedback
// 0x0040 (0x0040 - 0x0000)
struct SentryLibrary_CreateSentryUserFeedback final
{
public:
	class USentryId*                              EventId;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Name_0;                                            // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Email;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Comments;                                          // 0x0028(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USentryUserFeedback*                    ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryLibrary_CreateSentryUserFeedback) == 0x000008, "Wrong alignment on SentryLibrary_CreateSentryUserFeedback");
static_assert(sizeof(SentryLibrary_CreateSentryUserFeedback) == 0x000040, "Wrong size on SentryLibrary_CreateSentryUserFeedback");
static_assert(offsetof(SentryLibrary_CreateSentryUserFeedback, EventId) == 0x000000, "Member 'SentryLibrary_CreateSentryUserFeedback::EventId' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryUserFeedback, Name_0) == 0x000008, "Member 'SentryLibrary_CreateSentryUserFeedback::Name_0' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryUserFeedback, Email) == 0x000018, "Member 'SentryLibrary_CreateSentryUserFeedback::Email' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryUserFeedback, Comments) == 0x000028, "Member 'SentryLibrary_CreateSentryUserFeedback::Comments' has a wrong offset!");
static_assert(offsetof(SentryLibrary_CreateSentryUserFeedback, ReturnValue) == 0x000038, "Member 'SentryLibrary_CreateSentryUserFeedback::ReturnValue' has a wrong offset!");

// Function Sentry.SentryLibrary.SaveStringToFile
// 0x0030 (0x0030 - 0x0000)
struct SentryLibrary_SaveStringToFile final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryLibrary_SaveStringToFile) == 0x000008, "Wrong alignment on SentryLibrary_SaveStringToFile");
static_assert(sizeof(SentryLibrary_SaveStringToFile) == 0x000030, "Wrong size on SentryLibrary_SaveStringToFile");
static_assert(offsetof(SentryLibrary_SaveStringToFile, InString) == 0x000000, "Member 'SentryLibrary_SaveStringToFile::InString' has a wrong offset!");
static_assert(offsetof(SentryLibrary_SaveStringToFile, Filename) == 0x000010, "Member 'SentryLibrary_SaveStringToFile::Filename' has a wrong offset!");
static_assert(offsetof(SentryLibrary_SaveStringToFile, ReturnValue) == 0x000020, "Member 'SentryLibrary_SaveStringToFile::ReturnValue' has a wrong offset!");

// Function Sentry.SentryLibrary.StringToBytesArray
// 0x0020 (0x0020 - 0x0000)
struct SentryLibrary_StringToBytesArray final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryLibrary_StringToBytesArray) == 0x000008, "Wrong alignment on SentryLibrary_StringToBytesArray");
static_assert(sizeof(SentryLibrary_StringToBytesArray) == 0x000020, "Wrong size on SentryLibrary_StringToBytesArray");
static_assert(offsetof(SentryLibrary_StringToBytesArray, InString) == 0x000000, "Member 'SentryLibrary_StringToBytesArray::InString' has a wrong offset!");
static_assert(offsetof(SentryLibrary_StringToBytesArray, ReturnValue) == 0x000010, "Member 'SentryLibrary_StringToBytesArray::ReturnValue' has a wrong offset!");

// Function Sentry.SentryScope.AddAttachment
// 0x0008 (0x0008 - 0x0000)
struct SentryScope_AddAttachment final
{
public:
	class USentryAttachment*                      Attachment;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_AddAttachment) == 0x000008, "Wrong alignment on SentryScope_AddAttachment");
static_assert(sizeof(SentryScope_AddAttachment) == 0x000008, "Wrong size on SentryScope_AddAttachment");
static_assert(offsetof(SentryScope_AddAttachment, Attachment) == 0x000000, "Member 'SentryScope_AddAttachment::Attachment' has a wrong offset!");

// Function Sentry.SentryScope.AddBreadcrumb
// 0x0008 (0x0008 - 0x0000)
struct SentryScope_AddBreadcrumb final
{
public:
	class USentryBreadcrumb*                      Breadcrumb;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_AddBreadcrumb) == 0x000008, "Wrong alignment on SentryScope_AddBreadcrumb");
static_assert(sizeof(SentryScope_AddBreadcrumb) == 0x000008, "Wrong size on SentryScope_AddBreadcrumb");
static_assert(offsetof(SentryScope_AddBreadcrumb, Breadcrumb) == 0x000000, "Member 'SentryScope_AddBreadcrumb::Breadcrumb' has a wrong offset!");

// Function Sentry.SentryScope.RemoveContext
// 0x0010 (0x0010 - 0x0000)
struct SentryScope_RemoveContext final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_RemoveContext) == 0x000008, "Wrong alignment on SentryScope_RemoveContext");
static_assert(sizeof(SentryScope_RemoveContext) == 0x000010, "Wrong size on SentryScope_RemoveContext");
static_assert(offsetof(SentryScope_RemoveContext, Key) == 0x000000, "Member 'SentryScope_RemoveContext::Key' has a wrong offset!");

// Function Sentry.SentryScope.RemoveExtra
// 0x0010 (0x0010 - 0x0000)
struct SentryScope_RemoveExtra final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_RemoveExtra) == 0x000008, "Wrong alignment on SentryScope_RemoveExtra");
static_assert(sizeof(SentryScope_RemoveExtra) == 0x000010, "Wrong size on SentryScope_RemoveExtra");
static_assert(offsetof(SentryScope_RemoveExtra, Key) == 0x000000, "Member 'SentryScope_RemoveExtra::Key' has a wrong offset!");

// Function Sentry.SentryScope.RemoveTag
// 0x0010 (0x0010 - 0x0000)
struct SentryScope_RemoveTag final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_RemoveTag) == 0x000008, "Wrong alignment on SentryScope_RemoveTag");
static_assert(sizeof(SentryScope_RemoveTag) == 0x000010, "Wrong size on SentryScope_RemoveTag");
static_assert(offsetof(SentryScope_RemoveTag, Key) == 0x000000, "Member 'SentryScope_RemoveTag::Key' has a wrong offset!");

// Function Sentry.SentryScope.SetContext
// 0x0060 (0x0060 - 0x0000)
struct SentryScope_SetContext final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            Values;                                            // 0x0010(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_SetContext) == 0x000008, "Wrong alignment on SentryScope_SetContext");
static_assert(sizeof(SentryScope_SetContext) == 0x000060, "Wrong size on SentryScope_SetContext");
static_assert(offsetof(SentryScope_SetContext, Key) == 0x000000, "Member 'SentryScope_SetContext::Key' has a wrong offset!");
static_assert(offsetof(SentryScope_SetContext, Values) == 0x000010, "Member 'SentryScope_SetContext::Values' has a wrong offset!");

// Function Sentry.SentryScope.SetDist
// 0x0010 (0x0010 - 0x0000)
struct SentryScope_SetDist final
{
public:
	class FString                                 Dist;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_SetDist) == 0x000008, "Wrong alignment on SentryScope_SetDist");
static_assert(sizeof(SentryScope_SetDist) == 0x000010, "Wrong size on SentryScope_SetDist");
static_assert(offsetof(SentryScope_SetDist, Dist) == 0x000000, "Member 'SentryScope_SetDist::Dist' has a wrong offset!");

// Function Sentry.SentryScope.SetEnvironment
// 0x0010 (0x0010 - 0x0000)
struct SentryScope_SetEnvironment final
{
public:
	class FString                                 Environment;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_SetEnvironment) == 0x000008, "Wrong alignment on SentryScope_SetEnvironment");
static_assert(sizeof(SentryScope_SetEnvironment) == 0x000010, "Wrong size on SentryScope_SetEnvironment");
static_assert(offsetof(SentryScope_SetEnvironment, Environment) == 0x000000, "Member 'SentryScope_SetEnvironment::Environment' has a wrong offset!");

// Function Sentry.SentryScope.SetExtras
// 0x0050 (0x0050 - 0x0000)
struct SentryScope_SetExtras final
{
public:
	TMap<class FString, class FString>            Extras;                                            // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_SetExtras) == 0x000008, "Wrong alignment on SentryScope_SetExtras");
static_assert(sizeof(SentryScope_SetExtras) == 0x000050, "Wrong size on SentryScope_SetExtras");
static_assert(offsetof(SentryScope_SetExtras, Extras) == 0x000000, "Member 'SentryScope_SetExtras::Extras' has a wrong offset!");

// Function Sentry.SentryScope.SetExtraValue
// 0x0020 (0x0020 - 0x0000)
struct SentryScope_SetExtraValue final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_SetExtraValue) == 0x000008, "Wrong alignment on SentryScope_SetExtraValue");
static_assert(sizeof(SentryScope_SetExtraValue) == 0x000020, "Wrong size on SentryScope_SetExtraValue");
static_assert(offsetof(SentryScope_SetExtraValue, Key) == 0x000000, "Member 'SentryScope_SetExtraValue::Key' has a wrong offset!");
static_assert(offsetof(SentryScope_SetExtraValue, Value) == 0x000010, "Member 'SentryScope_SetExtraValue::Value' has a wrong offset!");

// Function Sentry.SentryScope.SetFingerprint
// 0x0010 (0x0010 - 0x0000)
struct SentryScope_SetFingerprint final
{
public:
	TArray<class FString>                         Fingerprint;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_SetFingerprint) == 0x000008, "Wrong alignment on SentryScope_SetFingerprint");
static_assert(sizeof(SentryScope_SetFingerprint) == 0x000010, "Wrong size on SentryScope_SetFingerprint");
static_assert(offsetof(SentryScope_SetFingerprint, Fingerprint) == 0x000000, "Member 'SentryScope_SetFingerprint::Fingerprint' has a wrong offset!");

// Function Sentry.SentryScope.SetLevel
// 0x0001 (0x0001 - 0x0000)
struct SentryScope_SetLevel final
{
public:
	ESentryLevel                                  Level;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_SetLevel) == 0x000001, "Wrong alignment on SentryScope_SetLevel");
static_assert(sizeof(SentryScope_SetLevel) == 0x000001, "Wrong size on SentryScope_SetLevel");
static_assert(offsetof(SentryScope_SetLevel, Level) == 0x000000, "Member 'SentryScope_SetLevel::Level' has a wrong offset!");

// Function Sentry.SentryScope.SetTags
// 0x0050 (0x0050 - 0x0000)
struct SentryScope_SetTags final
{
public:
	TMap<class FString, class FString>            Tags;                                              // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_SetTags) == 0x000008, "Wrong alignment on SentryScope_SetTags");
static_assert(sizeof(SentryScope_SetTags) == 0x000050, "Wrong size on SentryScope_SetTags");
static_assert(offsetof(SentryScope_SetTags, Tags) == 0x000000, "Member 'SentryScope_SetTags::Tags' has a wrong offset!");

// Function Sentry.SentryScope.SetTagValue
// 0x0020 (0x0020 - 0x0000)
struct SentryScope_SetTagValue final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_SetTagValue) == 0x000008, "Wrong alignment on SentryScope_SetTagValue");
static_assert(sizeof(SentryScope_SetTagValue) == 0x000020, "Wrong size on SentryScope_SetTagValue");
static_assert(offsetof(SentryScope_SetTagValue, Key) == 0x000000, "Member 'SentryScope_SetTagValue::Key' has a wrong offset!");
static_assert(offsetof(SentryScope_SetTagValue, Value) == 0x000010, "Member 'SentryScope_SetTagValue::Value' has a wrong offset!");

// Function Sentry.SentryScope.GetDist
// 0x0010 (0x0010 - 0x0000)
struct SentryScope_GetDist final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_GetDist) == 0x000008, "Wrong alignment on SentryScope_GetDist");
static_assert(sizeof(SentryScope_GetDist) == 0x000010, "Wrong size on SentryScope_GetDist");
static_assert(offsetof(SentryScope_GetDist, ReturnValue) == 0x000000, "Member 'SentryScope_GetDist::ReturnValue' has a wrong offset!");

// Function Sentry.SentryScope.GetEnvironment
// 0x0010 (0x0010 - 0x0000)
struct SentryScope_GetEnvironment final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_GetEnvironment) == 0x000008, "Wrong alignment on SentryScope_GetEnvironment");
static_assert(sizeof(SentryScope_GetEnvironment) == 0x000010, "Wrong size on SentryScope_GetEnvironment");
static_assert(offsetof(SentryScope_GetEnvironment, ReturnValue) == 0x000000, "Member 'SentryScope_GetEnvironment::ReturnValue' has a wrong offset!");

// Function Sentry.SentryScope.GetExtras
// 0x0050 (0x0050 - 0x0000)
struct SentryScope_GetExtras final
{
public:
	TMap<class FString, class FString>            ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_GetExtras) == 0x000008, "Wrong alignment on SentryScope_GetExtras");
static_assert(sizeof(SentryScope_GetExtras) == 0x000050, "Wrong size on SentryScope_GetExtras");
static_assert(offsetof(SentryScope_GetExtras, ReturnValue) == 0x000000, "Member 'SentryScope_GetExtras::ReturnValue' has a wrong offset!");

// Function Sentry.SentryScope.GetExtraValue
// 0x0020 (0x0020 - 0x0000)
struct SentryScope_GetExtraValue final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_GetExtraValue) == 0x000008, "Wrong alignment on SentryScope_GetExtraValue");
static_assert(sizeof(SentryScope_GetExtraValue) == 0x000020, "Wrong size on SentryScope_GetExtraValue");
static_assert(offsetof(SentryScope_GetExtraValue, Key) == 0x000000, "Member 'SentryScope_GetExtraValue::Key' has a wrong offset!");
static_assert(offsetof(SentryScope_GetExtraValue, ReturnValue) == 0x000010, "Member 'SentryScope_GetExtraValue::ReturnValue' has a wrong offset!");

// Function Sentry.SentryScope.GetFingerprint
// 0x0010 (0x0010 - 0x0000)
struct SentryScope_GetFingerprint final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_GetFingerprint) == 0x000008, "Wrong alignment on SentryScope_GetFingerprint");
static_assert(sizeof(SentryScope_GetFingerprint) == 0x000010, "Wrong size on SentryScope_GetFingerprint");
static_assert(offsetof(SentryScope_GetFingerprint, ReturnValue) == 0x000000, "Member 'SentryScope_GetFingerprint::ReturnValue' has a wrong offset!");

// Function Sentry.SentryScope.GetLevel
// 0x0001 (0x0001 - 0x0000)
struct SentryScope_GetLevel final
{
public:
	ESentryLevel                                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_GetLevel) == 0x000001, "Wrong alignment on SentryScope_GetLevel");
static_assert(sizeof(SentryScope_GetLevel) == 0x000001, "Wrong size on SentryScope_GetLevel");
static_assert(offsetof(SentryScope_GetLevel, ReturnValue) == 0x000000, "Member 'SentryScope_GetLevel::ReturnValue' has a wrong offset!");

// Function Sentry.SentryScope.GetTags
// 0x0050 (0x0050 - 0x0000)
struct SentryScope_GetTags final
{
public:
	TMap<class FString, class FString>            ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_GetTags) == 0x000008, "Wrong alignment on SentryScope_GetTags");
static_assert(sizeof(SentryScope_GetTags) == 0x000050, "Wrong size on SentryScope_GetTags");
static_assert(offsetof(SentryScope_GetTags, ReturnValue) == 0x000000, "Member 'SentryScope_GetTags::ReturnValue' has a wrong offset!");

// Function Sentry.SentryScope.GetTagValue
// 0x0020 (0x0020 - 0x0000)
struct SentryScope_GetTagValue final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryScope_GetTagValue) == 0x000008, "Wrong alignment on SentryScope_GetTagValue");
static_assert(sizeof(SentryScope_GetTagValue) == 0x000020, "Wrong size on SentryScope_GetTagValue");
static_assert(offsetof(SentryScope_GetTagValue, Key) == 0x000000, "Member 'SentryScope_GetTagValue::Key' has a wrong offset!");
static_assert(offsetof(SentryScope_GetTagValue, ReturnValue) == 0x000010, "Member 'SentryScope_GetTagValue::ReturnValue' has a wrong offset!");

// Function Sentry.SentrySubsystem.AddBreadcrumb
// 0x0008 (0x0008 - 0x0000)
struct SentrySubsystem_AddBreadcrumb final
{
public:
	class USentryBreadcrumb*                      Breadcrumb;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentrySubsystem_AddBreadcrumb) == 0x000008, "Wrong alignment on SentrySubsystem_AddBreadcrumb");
static_assert(sizeof(SentrySubsystem_AddBreadcrumb) == 0x000008, "Wrong size on SentrySubsystem_AddBreadcrumb");
static_assert(offsetof(SentrySubsystem_AddBreadcrumb, Breadcrumb) == 0x000000, "Member 'SentrySubsystem_AddBreadcrumb::Breadcrumb' has a wrong offset!");

// Function Sentry.SentrySubsystem.AddBreadcrumbWithParams
// 0x0088 (0x0088 - 0x0000)
struct SentrySubsystem_AddBreadcrumbWithParams final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Category;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Type;                                              // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            Data;                                              // 0x0030(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	ESentryLevel                                  Level;                                             // 0x0080(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SentrySubsystem_AddBreadcrumbWithParams) == 0x000008, "Wrong alignment on SentrySubsystem_AddBreadcrumbWithParams");
static_assert(sizeof(SentrySubsystem_AddBreadcrumbWithParams) == 0x000088, "Wrong size on SentrySubsystem_AddBreadcrumbWithParams");
static_assert(offsetof(SentrySubsystem_AddBreadcrumbWithParams, Message) == 0x000000, "Member 'SentrySubsystem_AddBreadcrumbWithParams::Message' has a wrong offset!");
static_assert(offsetof(SentrySubsystem_AddBreadcrumbWithParams, Category) == 0x000010, "Member 'SentrySubsystem_AddBreadcrumbWithParams::Category' has a wrong offset!");
static_assert(offsetof(SentrySubsystem_AddBreadcrumbWithParams, Type) == 0x000020, "Member 'SentrySubsystem_AddBreadcrumbWithParams::Type' has a wrong offset!");
static_assert(offsetof(SentrySubsystem_AddBreadcrumbWithParams, Data) == 0x000030, "Member 'SentrySubsystem_AddBreadcrumbWithParams::Data' has a wrong offset!");
static_assert(offsetof(SentrySubsystem_AddBreadcrumbWithParams, Level) == 0x000080, "Member 'SentrySubsystem_AddBreadcrumbWithParams::Level' has a wrong offset!");

// Function Sentry.SentrySubsystem.CaptureEvent
// 0x0010 (0x0010 - 0x0000)
struct SentrySubsystem_CaptureEvent final
{
public:
	class USentryEvent*                           Event;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USentryId*                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentrySubsystem_CaptureEvent) == 0x000008, "Wrong alignment on SentrySubsystem_CaptureEvent");
static_assert(sizeof(SentrySubsystem_CaptureEvent) == 0x000010, "Wrong size on SentrySubsystem_CaptureEvent");
static_assert(offsetof(SentrySubsystem_CaptureEvent, Event) == 0x000000, "Member 'SentrySubsystem_CaptureEvent::Event' has a wrong offset!");
static_assert(offsetof(SentrySubsystem_CaptureEvent, ReturnValue) == 0x000008, "Member 'SentrySubsystem_CaptureEvent::ReturnValue' has a wrong offset!");

// Function Sentry.SentrySubsystem.CaptureEventWithScope
// 0x0020 (0x0020 - 0x0000)
struct SentrySubsystem_CaptureEventWithScope final
{
public:
	class USentryEvent*                           Event;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class USentryScope* Scope)>    OnConfigureScope;                                  // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USentryId*                              ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentrySubsystem_CaptureEventWithScope) == 0x000008, "Wrong alignment on SentrySubsystem_CaptureEventWithScope");
static_assert(sizeof(SentrySubsystem_CaptureEventWithScope) == 0x000020, "Wrong size on SentrySubsystem_CaptureEventWithScope");
static_assert(offsetof(SentrySubsystem_CaptureEventWithScope, Event) == 0x000000, "Member 'SentrySubsystem_CaptureEventWithScope::Event' has a wrong offset!");
static_assert(offsetof(SentrySubsystem_CaptureEventWithScope, OnConfigureScope) == 0x000008, "Member 'SentrySubsystem_CaptureEventWithScope::OnConfigureScope' has a wrong offset!");
static_assert(offsetof(SentrySubsystem_CaptureEventWithScope, ReturnValue) == 0x000018, "Member 'SentrySubsystem_CaptureEventWithScope::ReturnValue' has a wrong offset!");

// Function Sentry.SentrySubsystem.CaptureMessage
// 0x0020 (0x0020 - 0x0000)
struct SentrySubsystem_CaptureMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESentryLevel                                  Level;                                             // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USentryId*                              ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentrySubsystem_CaptureMessage) == 0x000008, "Wrong alignment on SentrySubsystem_CaptureMessage");
static_assert(sizeof(SentrySubsystem_CaptureMessage) == 0x000020, "Wrong size on SentrySubsystem_CaptureMessage");
static_assert(offsetof(SentrySubsystem_CaptureMessage, Message) == 0x000000, "Member 'SentrySubsystem_CaptureMessage::Message' has a wrong offset!");
static_assert(offsetof(SentrySubsystem_CaptureMessage, Level) == 0x000010, "Member 'SentrySubsystem_CaptureMessage::Level' has a wrong offset!");
static_assert(offsetof(SentrySubsystem_CaptureMessage, ReturnValue) == 0x000018, "Member 'SentrySubsystem_CaptureMessage::ReturnValue' has a wrong offset!");

// Function Sentry.SentrySubsystem.CaptureMessageWithScope
// 0x0030 (0x0030 - 0x0000)
struct SentrySubsystem_CaptureMessageWithScope final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class USentryScope* Scope)>    OnConfigureScope;                                  // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESentryLevel                                  Level;                                             // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USentryId*                              ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentrySubsystem_CaptureMessageWithScope) == 0x000008, "Wrong alignment on SentrySubsystem_CaptureMessageWithScope");
static_assert(sizeof(SentrySubsystem_CaptureMessageWithScope) == 0x000030, "Wrong size on SentrySubsystem_CaptureMessageWithScope");
static_assert(offsetof(SentrySubsystem_CaptureMessageWithScope, Message) == 0x000000, "Member 'SentrySubsystem_CaptureMessageWithScope::Message' has a wrong offset!");
static_assert(offsetof(SentrySubsystem_CaptureMessageWithScope, OnConfigureScope) == 0x000010, "Member 'SentrySubsystem_CaptureMessageWithScope::OnConfigureScope' has a wrong offset!");
static_assert(offsetof(SentrySubsystem_CaptureMessageWithScope, Level) == 0x000020, "Member 'SentrySubsystem_CaptureMessageWithScope::Level' has a wrong offset!");
static_assert(offsetof(SentrySubsystem_CaptureMessageWithScope, ReturnValue) == 0x000028, "Member 'SentrySubsystem_CaptureMessageWithScope::ReturnValue' has a wrong offset!");

// Function Sentry.SentrySubsystem.CaptureUserFeedback
// 0x0008 (0x0008 - 0x0000)
struct SentrySubsystem_CaptureUserFeedback final
{
public:
	class USentryUserFeedback*                    UserFeedback;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentrySubsystem_CaptureUserFeedback) == 0x000008, "Wrong alignment on SentrySubsystem_CaptureUserFeedback");
static_assert(sizeof(SentrySubsystem_CaptureUserFeedback) == 0x000008, "Wrong size on SentrySubsystem_CaptureUserFeedback");
static_assert(offsetof(SentrySubsystem_CaptureUserFeedback, UserFeedback) == 0x000000, "Member 'SentrySubsystem_CaptureUserFeedback::UserFeedback' has a wrong offset!");

// Function Sentry.SentrySubsystem.CaptureUserFeedbackWithParams
// 0x0038 (0x0038 - 0x0000)
struct SentrySubsystem_CaptureUserFeedbackWithParams final
{
public:
	class USentryId*                              EventId;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Email;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Comments;                                          // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Name_0;                                            // 0x0028(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentrySubsystem_CaptureUserFeedbackWithParams) == 0x000008, "Wrong alignment on SentrySubsystem_CaptureUserFeedbackWithParams");
static_assert(sizeof(SentrySubsystem_CaptureUserFeedbackWithParams) == 0x000038, "Wrong size on SentrySubsystem_CaptureUserFeedbackWithParams");
static_assert(offsetof(SentrySubsystem_CaptureUserFeedbackWithParams, EventId) == 0x000000, "Member 'SentrySubsystem_CaptureUserFeedbackWithParams::EventId' has a wrong offset!");
static_assert(offsetof(SentrySubsystem_CaptureUserFeedbackWithParams, Email) == 0x000008, "Member 'SentrySubsystem_CaptureUserFeedbackWithParams::Email' has a wrong offset!");
static_assert(offsetof(SentrySubsystem_CaptureUserFeedbackWithParams, Comments) == 0x000018, "Member 'SentrySubsystem_CaptureUserFeedbackWithParams::Comments' has a wrong offset!");
static_assert(offsetof(SentrySubsystem_CaptureUserFeedbackWithParams, Name_0) == 0x000028, "Member 'SentrySubsystem_CaptureUserFeedbackWithParams::Name_0' has a wrong offset!");

// Function Sentry.SentrySubsystem.ConfigureScope
// 0x0010 (0x0010 - 0x0000)
struct SentrySubsystem_ConfigureScope final
{
public:
	TDelegate<void(class USentryScope* Scope)>    OnConfigureScope;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentrySubsystem_ConfigureScope) == 0x000004, "Wrong alignment on SentrySubsystem_ConfigureScope");
static_assert(sizeof(SentrySubsystem_ConfigureScope) == 0x000010, "Wrong size on SentrySubsystem_ConfigureScope");
static_assert(offsetof(SentrySubsystem_ConfigureScope, OnConfigureScope) == 0x000000, "Member 'SentrySubsystem_ConfigureScope::OnConfigureScope' has a wrong offset!");

// Function Sentry.SentrySubsystem.InitializeWithSettings
// 0x0010 (0x0010 - 0x0000)
struct SentrySubsystem_InitializeWithSettings final
{
public:
	TDelegate<void(class USentrySettings* Settings)> OnConfigureSettings;                               // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentrySubsystem_InitializeWithSettings) == 0x000004, "Wrong alignment on SentrySubsystem_InitializeWithSettings");
static_assert(sizeof(SentrySubsystem_InitializeWithSettings) == 0x000010, "Wrong size on SentrySubsystem_InitializeWithSettings");
static_assert(offsetof(SentrySubsystem_InitializeWithSettings, OnConfigureSettings) == 0x000000, "Member 'SentrySubsystem_InitializeWithSettings::OnConfigureSettings' has a wrong offset!");

// Function Sentry.SentrySubsystem.IsEnabled
// 0x0001 (0x0001 - 0x0000)
struct SentrySubsystem_IsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentrySubsystem_IsEnabled) == 0x000001, "Wrong alignment on SentrySubsystem_IsEnabled");
static_assert(sizeof(SentrySubsystem_IsEnabled) == 0x000001, "Wrong size on SentrySubsystem_IsEnabled");
static_assert(offsetof(SentrySubsystem_IsEnabled, ReturnValue) == 0x000000, "Member 'SentrySubsystem_IsEnabled::ReturnValue' has a wrong offset!");

// Function Sentry.SentrySubsystem.RemoveTag
// 0x0010 (0x0010 - 0x0000)
struct SentrySubsystem_RemoveTag final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentrySubsystem_RemoveTag) == 0x000008, "Wrong alignment on SentrySubsystem_RemoveTag");
static_assert(sizeof(SentrySubsystem_RemoveTag) == 0x000010, "Wrong size on SentrySubsystem_RemoveTag");
static_assert(offsetof(SentrySubsystem_RemoveTag, Key) == 0x000000, "Member 'SentrySubsystem_RemoveTag::Key' has a wrong offset!");

// Function Sentry.SentrySubsystem.SetContext
// 0x0060 (0x0060 - 0x0000)
struct SentrySubsystem_SetContext final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            Values;                                            // 0x0010(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentrySubsystem_SetContext) == 0x000008, "Wrong alignment on SentrySubsystem_SetContext");
static_assert(sizeof(SentrySubsystem_SetContext) == 0x000060, "Wrong size on SentrySubsystem_SetContext");
static_assert(offsetof(SentrySubsystem_SetContext, Key) == 0x000000, "Member 'SentrySubsystem_SetContext::Key' has a wrong offset!");
static_assert(offsetof(SentrySubsystem_SetContext, Values) == 0x000010, "Member 'SentrySubsystem_SetContext::Values' has a wrong offset!");

// Function Sentry.SentrySubsystem.SetLevel
// 0x0001 (0x0001 - 0x0000)
struct SentrySubsystem_SetLevel final
{
public:
	ESentryLevel                                  Level;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentrySubsystem_SetLevel) == 0x000001, "Wrong alignment on SentrySubsystem_SetLevel");
static_assert(sizeof(SentrySubsystem_SetLevel) == 0x000001, "Wrong size on SentrySubsystem_SetLevel");
static_assert(offsetof(SentrySubsystem_SetLevel, Level) == 0x000000, "Member 'SentrySubsystem_SetLevel::Level' has a wrong offset!");

// Function Sentry.SentrySubsystem.SetTag
// 0x0020 (0x0020 - 0x0000)
struct SentrySubsystem_SetTag final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentrySubsystem_SetTag) == 0x000008, "Wrong alignment on SentrySubsystem_SetTag");
static_assert(sizeof(SentrySubsystem_SetTag) == 0x000020, "Wrong size on SentrySubsystem_SetTag");
static_assert(offsetof(SentrySubsystem_SetTag, Key) == 0x000000, "Member 'SentrySubsystem_SetTag::Key' has a wrong offset!");
static_assert(offsetof(SentrySubsystem_SetTag, Value) == 0x000010, "Member 'SentrySubsystem_SetTag::Value' has a wrong offset!");

// Function Sentry.SentrySubsystem.SetUser
// 0x0008 (0x0008 - 0x0000)
struct SentrySubsystem_SetUser final
{
public:
	class USentryUser*                            User;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentrySubsystem_SetUser) == 0x000008, "Wrong alignment on SentrySubsystem_SetUser");
static_assert(sizeof(SentrySubsystem_SetUser) == 0x000008, "Wrong size on SentrySubsystem_SetUser");
static_assert(offsetof(SentrySubsystem_SetUser, User) == 0x000000, "Member 'SentrySubsystem_SetUser::User' has a wrong offset!");

// Function Sentry.SentryUser.SetData
// 0x0050 (0x0050 - 0x0000)
struct SentryUser_SetData final
{
public:
	TMap<class FString, class FString>            Data;                                              // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryUser_SetData) == 0x000008, "Wrong alignment on SentryUser_SetData");
static_assert(sizeof(SentryUser_SetData) == 0x000050, "Wrong size on SentryUser_SetData");
static_assert(offsetof(SentryUser_SetData, Data) == 0x000000, "Member 'SentryUser_SetData::Data' has a wrong offset!");

// Function Sentry.SentryUser.SetEmail
// 0x0010 (0x0010 - 0x0000)
struct SentryUser_SetEmail final
{
public:
	class FString                                 Email;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryUser_SetEmail) == 0x000008, "Wrong alignment on SentryUser_SetEmail");
static_assert(sizeof(SentryUser_SetEmail) == 0x000010, "Wrong size on SentryUser_SetEmail");
static_assert(offsetof(SentryUser_SetEmail, Email) == 0x000000, "Member 'SentryUser_SetEmail::Email' has a wrong offset!");

// Function Sentry.SentryUser.SetId
// 0x0010 (0x0010 - 0x0000)
struct SentryUser_SetId final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryUser_SetId) == 0x000008, "Wrong alignment on SentryUser_SetId");
static_assert(sizeof(SentryUser_SetId) == 0x000010, "Wrong size on SentryUser_SetId");
static_assert(offsetof(SentryUser_SetId, ID) == 0x000000, "Member 'SentryUser_SetId::ID' has a wrong offset!");

// Function Sentry.SentryUser.SetIpAddress
// 0x0010 (0x0010 - 0x0000)
struct SentryUser_SetIpAddress final
{
public:
	class FString                                 IpAddress;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryUser_SetIpAddress) == 0x000008, "Wrong alignment on SentryUser_SetIpAddress");
static_assert(sizeof(SentryUser_SetIpAddress) == 0x000010, "Wrong size on SentryUser_SetIpAddress");
static_assert(offsetof(SentryUser_SetIpAddress, IpAddress) == 0x000000, "Member 'SentryUser_SetIpAddress::IpAddress' has a wrong offset!");

// Function Sentry.SentryUser.SetUsername
// 0x0010 (0x0010 - 0x0000)
struct SentryUser_SetUsername final
{
public:
	class FString                                 UserName;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryUser_SetUsername) == 0x000008, "Wrong alignment on SentryUser_SetUsername");
static_assert(sizeof(SentryUser_SetUsername) == 0x000010, "Wrong size on SentryUser_SetUsername");
static_assert(offsetof(SentryUser_SetUsername, UserName) == 0x000000, "Member 'SentryUser_SetUsername::UserName' has a wrong offset!");

// Function Sentry.SentryUser.GetData
// 0x0050 (0x0050 - 0x0000)
struct SentryUser_GetData final
{
public:
	TMap<class FString, class FString>            ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryUser_GetData) == 0x000008, "Wrong alignment on SentryUser_GetData");
static_assert(sizeof(SentryUser_GetData) == 0x000050, "Wrong size on SentryUser_GetData");
static_assert(offsetof(SentryUser_GetData, ReturnValue) == 0x000000, "Member 'SentryUser_GetData::ReturnValue' has a wrong offset!");

// Function Sentry.SentryUser.GetEmail
// 0x0010 (0x0010 - 0x0000)
struct SentryUser_GetEmail final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryUser_GetEmail) == 0x000008, "Wrong alignment on SentryUser_GetEmail");
static_assert(sizeof(SentryUser_GetEmail) == 0x000010, "Wrong size on SentryUser_GetEmail");
static_assert(offsetof(SentryUser_GetEmail, ReturnValue) == 0x000000, "Member 'SentryUser_GetEmail::ReturnValue' has a wrong offset!");

// Function Sentry.SentryUser.GetId
// 0x0010 (0x0010 - 0x0000)
struct SentryUser_GetId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryUser_GetId) == 0x000008, "Wrong alignment on SentryUser_GetId");
static_assert(sizeof(SentryUser_GetId) == 0x000010, "Wrong size on SentryUser_GetId");
static_assert(offsetof(SentryUser_GetId, ReturnValue) == 0x000000, "Member 'SentryUser_GetId::ReturnValue' has a wrong offset!");

// Function Sentry.SentryUser.GetIpAddress
// 0x0010 (0x0010 - 0x0000)
struct SentryUser_GetIpAddress final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryUser_GetIpAddress) == 0x000008, "Wrong alignment on SentryUser_GetIpAddress");
static_assert(sizeof(SentryUser_GetIpAddress) == 0x000010, "Wrong size on SentryUser_GetIpAddress");
static_assert(offsetof(SentryUser_GetIpAddress, ReturnValue) == 0x000000, "Member 'SentryUser_GetIpAddress::ReturnValue' has a wrong offset!");

// Function Sentry.SentryUser.GetUsername
// 0x0010 (0x0010 - 0x0000)
struct SentryUser_GetUsername final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryUser_GetUsername) == 0x000008, "Wrong alignment on SentryUser_GetUsername");
static_assert(sizeof(SentryUser_GetUsername) == 0x000010, "Wrong size on SentryUser_GetUsername");
static_assert(offsetof(SentryUser_GetUsername, ReturnValue) == 0x000000, "Member 'SentryUser_GetUsername::ReturnValue' has a wrong offset!");

// Function Sentry.SentryUserFeedback.Initialize
// 0x0008 (0x0008 - 0x0000)
struct SentryUserFeedback_Initialize final
{
public:
	class USentryId*                              EventId;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryUserFeedback_Initialize) == 0x000008, "Wrong alignment on SentryUserFeedback_Initialize");
static_assert(sizeof(SentryUserFeedback_Initialize) == 0x000008, "Wrong size on SentryUserFeedback_Initialize");
static_assert(offsetof(SentryUserFeedback_Initialize, EventId) == 0x000000, "Member 'SentryUserFeedback_Initialize::EventId' has a wrong offset!");

// Function Sentry.SentryUserFeedback.SetComment
// 0x0010 (0x0010 - 0x0000)
struct SentryUserFeedback_SetComment final
{
public:
	class FString                                 Comments;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryUserFeedback_SetComment) == 0x000008, "Wrong alignment on SentryUserFeedback_SetComment");
static_assert(sizeof(SentryUserFeedback_SetComment) == 0x000010, "Wrong size on SentryUserFeedback_SetComment");
static_assert(offsetof(SentryUserFeedback_SetComment, Comments) == 0x000000, "Member 'SentryUserFeedback_SetComment::Comments' has a wrong offset!");

// Function Sentry.SentryUserFeedback.SetEmail
// 0x0010 (0x0010 - 0x0000)
struct SentryUserFeedback_SetEmail final
{
public:
	class FString                                 Email;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryUserFeedback_SetEmail) == 0x000008, "Wrong alignment on SentryUserFeedback_SetEmail");
static_assert(sizeof(SentryUserFeedback_SetEmail) == 0x000010, "Wrong size on SentryUserFeedback_SetEmail");
static_assert(offsetof(SentryUserFeedback_SetEmail, Email) == 0x000000, "Member 'SentryUserFeedback_SetEmail::Email' has a wrong offset!");

// Function Sentry.SentryUserFeedback.SetName
// 0x0010 (0x0010 - 0x0000)
struct SentryUserFeedback_SetName final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryUserFeedback_SetName) == 0x000008, "Wrong alignment on SentryUserFeedback_SetName");
static_assert(sizeof(SentryUserFeedback_SetName) == 0x000010, "Wrong size on SentryUserFeedback_SetName");
static_assert(offsetof(SentryUserFeedback_SetName, Name_0) == 0x000000, "Member 'SentryUserFeedback_SetName::Name_0' has a wrong offset!");

// Function Sentry.SentryUserFeedback.GetComment
// 0x0010 (0x0010 - 0x0000)
struct SentryUserFeedback_GetComment final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryUserFeedback_GetComment) == 0x000008, "Wrong alignment on SentryUserFeedback_GetComment");
static_assert(sizeof(SentryUserFeedback_GetComment) == 0x000010, "Wrong size on SentryUserFeedback_GetComment");
static_assert(offsetof(SentryUserFeedback_GetComment, ReturnValue) == 0x000000, "Member 'SentryUserFeedback_GetComment::ReturnValue' has a wrong offset!");

// Function Sentry.SentryUserFeedback.GetEmail
// 0x0010 (0x0010 - 0x0000)
struct SentryUserFeedback_GetEmail final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryUserFeedback_GetEmail) == 0x000008, "Wrong alignment on SentryUserFeedback_GetEmail");
static_assert(sizeof(SentryUserFeedback_GetEmail) == 0x000010, "Wrong size on SentryUserFeedback_GetEmail");
static_assert(offsetof(SentryUserFeedback_GetEmail, ReturnValue) == 0x000000, "Member 'SentryUserFeedback_GetEmail::ReturnValue' has a wrong offset!");

// Function Sentry.SentryUserFeedback.GetName
// 0x0010 (0x0010 - 0x0000)
struct SentryUserFeedback_GetName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SentryUserFeedback_GetName) == 0x000008, "Wrong alignment on SentryUserFeedback_GetName");
static_assert(sizeof(SentryUserFeedback_GetName) == 0x000010, "Wrong size on SentryUserFeedback_GetName");
static_assert(offsetof(SentryUserFeedback_GetName, ReturnValue) == 0x000000, "Member 'SentryUserFeedback_GetName::ReturnValue' has a wrong offset!");

}

