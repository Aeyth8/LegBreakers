#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_FloatingIndicator_TimedChest

#include "Basic.hpp"

#include "WBP_FloatingIndicator_TimedChest_classes.hpp"
#include "WBP_FloatingIndicator_TimedChest_parameters.hpp"


namespace SDK
{

// Function WBP_FloatingIndicator_TimedChest.WBP_FloatingIndicator_TimedChest_C.ExecuteUbergraph_WBP_FloatingIndicator_TimedChest
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_FloatingIndicator_TimedChest_C::ExecuteUbergraph_WBP_FloatingIndicator_TimedChest(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_FloatingIndicator_TimedChest_C", "ExecuteUbergraph_WBP_FloatingIndicator_TimedChest");

	Params::WBP_FloatingIndicator_TimedChest_C_ExecuteUbergraph_WBP_FloatingIndicator_TimedChest Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_FloatingIndicator_TimedChest.WBP_FloatingIndicator_TimedChest_C.ReleaseIndicator
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_FloatingIndicator_TimedChest_C::ReleaseIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_FloatingIndicator_TimedChest_C", "ReleaseIndicator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_FloatingIndicator_TimedChest.WBP_FloatingIndicator_TimedChest_C.SetChestIndicator
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AR_TimedChest_C*                  Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_FloatingIndicator_TimedChest_C::SetChestIndicator(class AR_TimedChest_C* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_FloatingIndicator_TimedChest_C", "SetChestIndicator");

	Params::WBP_FloatingIndicator_TimedChest_C_SetChestIndicator Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_FloatingIndicator_TimedChest.WBP_FloatingIndicator_TimedChest_C.SetHidden
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_FloatingIndicator_TimedChest_C::SetHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_FloatingIndicator_TimedChest_C", "SetHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_FloatingIndicator_TimedChest.WBP_FloatingIndicator_TimedChest_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_FloatingIndicator_TimedChest_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_FloatingIndicator_TimedChest_C", "Tick");

	Params::WBP_FloatingIndicator_TimedChest_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_FloatingIndicator_TimedChest.WBP_FloatingIndicator_TimedChest_C.TickIndicator
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_FloatingIndicator_TimedChest_C::TickIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_FloatingIndicator_TimedChest_C", "TickIndicator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_FloatingIndicator_TimedChest.WBP_FloatingIndicator_TimedChest_C.UpdateCompass
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_FloatingIndicator_TimedChest_C::UpdateCompass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_FloatingIndicator_TimedChest_C", "UpdateCompass");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_FloatingIndicator_TimedChest.WBP_FloatingIndicator_TimedChest_C.UpdatePosition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_FloatingIndicator_TimedChest_C::UpdatePosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_FloatingIndicator_TimedChest_C", "UpdatePosition");

	UObject::ProcessEvent(Func, nullptr);
}

}

