#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PE_Item_DataTunneller

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Matcha_structs.hpp"


namespace SDK::Params
{

// Function PE_Item_DataTunneller.PE_Item_DataTunneller_C.CheckIfActorArrayContainsKOVolumes
// 0x0068 (0x0068 - 0x0000)
struct PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes final
{
public:
	TArray<class AActor*>                         ActorArray;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          FoundKOV;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AE_KOVolumeThreshold_Base_C*            K2Node_DynamicCast_AsE_KO_Volume_Threshold_Base;   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AE_KOVolumeAlways_Base_C*               K2Node_DynamicCast_AsE_KO_Volume_Always_Base;      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          CallFunc_FindComponentByTag_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CallFunc_FindComponentByTag_ReturnValue_1;         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes) == 0x000008, "Wrong alignment on PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes");
static_assert(sizeof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes) == 0x000068, "Wrong size on PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes, ActorArray) == 0x000000, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes::ActorArray' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes, FoundKOV) == 0x000010, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes::FoundKOV' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes, Temp_int_Array_Index_Variable) == 0x000018, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes, CallFunc_Array_Get_Item) == 0x000020, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes, K2Node_DynamicCast_AsE_KO_Volume_Threshold_Base) == 0x000028, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes::K2Node_DynamicCast_AsE_KO_Volume_Threshold_Base' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes, K2Node_DynamicCast_AsE_KO_Volume_Always_Base) == 0x000038, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes::K2Node_DynamicCast_AsE_KO_Volume_Always_Base' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes, CallFunc_FindComponentByTag_ReturnValue) == 0x000048, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes::CallFunc_FindComponentByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes, CallFunc_FindComponentByTag_ReturnValue_1) == 0x000050, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes::CallFunc_FindComponentByTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes, CallFunc_Less_IntInt_ReturnValue) == 0x00005A, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes, CallFunc_BooleanOR_ReturnValue) == 0x00005B, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes, CallFunc_BooleanOR_ReturnValue_1) == 0x00005C, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes, CallFunc_BooleanOR_ReturnValue_2) == 0x000064, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsKOVolumes::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function PE_Item_DataTunneller.PE_Item_DataTunneller_C.CheckIfActorArrayContainsNonPhaseStartActors
// 0x0060 (0x0060 - 0x0000)
struct PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors final
{
public:
	TArray<class AActor*>                         Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ShouldStartPhasing;                                // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMatchaAICharacterEntity*               K2Node_DynamicCast_AsMatcha_AI_Character_Entity;   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMatchaSnapNetInteractiveEntity*        K2Node_DynamicCast_AsMatcha_Snap_Net_Interactive_Entity; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMatchaSnapNetCharacterEntity*          K2Node_DynamicCast_AsMatcha_Snap_Net_Character_Entity; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors) == 0x000008, "Wrong alignment on PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors");
static_assert(sizeof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors) == 0x000060, "Wrong size on PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors, Array) == 0x000000, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors::Array' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors, ShouldStartPhasing) == 0x000010, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors::ShouldStartPhasing' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors, CallFunc_Array_IsEmpty_ReturnValue) == 0x000018, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors, CallFunc_Array_Get_Item) == 0x000020, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors, K2Node_DynamicCast_AsMatcha_AI_Character_Entity) == 0x000028, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors::K2Node_DynamicCast_AsMatcha_AI_Character_Entity' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors, K2Node_DynamicCast_AsMatcha_Snap_Net_Interactive_Entity) == 0x000038, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors::K2Node_DynamicCast_AsMatcha_Snap_Net_Interactive_Entity' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors, K2Node_DynamicCast_AsMatcha_Snap_Net_Character_Entity) == 0x000048, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors::K2Node_DynamicCast_AsMatcha_Snap_Net_Character_Entity' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors, CallFunc_BooleanOR_ReturnValue) == 0x000058, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors, CallFunc_BooleanOR_ReturnValue_1) == 0x000059, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors, CallFunc_Less_IntInt_ReturnValue) == 0x00005A, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'PE_Item_DataTunneller_C_CheckIfActorArrayContainsNonPhaseStartActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function PE_Item_DataTunneller.PE_Item_DataTunneller_C.CheckIfKOCheckerFoundNearbyKOBOXes
// 0x00A0 (0x00A0 - 0x0000)
struct PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes final
{
public:
	bool                                          FoundKOV;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           IgnoreTag;                                         // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_GetUnscaledBoxExtent_ReturnValue;         // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  CallFunc_MakeQuat_ReturnValue;                     // 0x0060(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FEnvironmentOverlapResult>      CallFunc_GetEnvironmentHazardOverlapsBox_Results;  // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes) == 0x000010, "Wrong alignment on PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes");
static_assert(sizeof(PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes) == 0x0000A0, "Wrong size on PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes, FoundKOV) == 0x000000, "Member 'PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes::FoundKOV' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes, IgnoreTag) == 0x000008, "Member 'PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes::IgnoreTag' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes, K2Node_MakeArray_Array) == 0x000038, "Member 'PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes, CallFunc_GetUnscaledBoxExtent_ReturnValue) == 0x000048, "Member 'PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes::CallFunc_GetUnscaledBoxExtent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes, CallFunc_MakeQuat_ReturnValue) == 0x000060, "Member 'PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes::CallFunc_MakeQuat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes, CallFunc_GetEnvironmentHazardOverlapsBox_Results) == 0x000080, "Member 'PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes::CallFunc_GetEnvironmentHazardOverlapsBox_Results' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes, CallFunc_Array_IsEmpty_ReturnValue) == 0x000090, "Member 'PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes, CallFunc_Not_PreBool_ReturnValue) == 0x000091, "Member 'PE_Item_DataTunneller_C_CheckIfKOCheckerFoundNearbyKOBOXes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PE_Item_DataTunneller.PE_Item_DataTunneller_C.CheckIfValidTPPosition
// 0x0630 (0x0630 - 0x0000)
struct PE_Item_DataTunneller_C_CheckIfValidTPPosition final
{
public:
	bool                                          InsideWorld;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNotInsideTerrain;                                // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CardinalDistaceCheck;                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectType;                                        // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0068(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_3;                            // 0x0080(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0148(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x0278(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_2;                          // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_2;       // 0x03C8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_2;  // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x0518(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_3;       // 0x0530(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_3;  // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0629(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x062A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x062B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x062C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PE_Item_DataTunneller_C_CheckIfValidTPPosition) == 0x000008, "Wrong alignment on PE_Item_DataTunneller_C_CheckIfValidTPPosition");
static_assert(sizeof(PE_Item_DataTunneller_C_CheckIfValidTPPosition) == 0x000630, "Wrong size on PE_Item_DataTunneller_C_CheckIfValidTPPosition");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, InsideWorld) == 0x000000, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::InsideWorld' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, IsNotInsideTerrain) == 0x000001, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::IsNotInsideTerrain' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CardinalDistaceCheck) == 0x000008, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CardinalDistaceCheck' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, ObjectType) == 0x000010, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::ObjectType' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, Temp_object_Variable) == 0x000020, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, Temp_object_Variable_1) == 0x000030, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, Temp_object_Variable_2) == 0x000040, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, K2Node_MakeArray_Array) == 0x000050, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000068, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_Array_IsEmpty_ReturnValue) == 0x000078, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, Temp_object_Variable_3) == 0x000080, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_BreakVector_X) == 0x0000A8, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_BreakVector_Y) == 0x0000B0, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_BreakVector_Z) == 0x0000B8, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000C0, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_MakeVector_ReturnValue) == 0x0000D8, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_BreakVector_X_1) == 0x0000F0, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_BreakVector_Y_1) == 0x0000F8, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_BreakVector_Z_1) == 0x000100, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000108, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_MakeVector_ReturnValue_1) == 0x000110, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_MakeVector_ReturnValue_2) == 0x000128, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000140, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000148, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000240, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_MakeVector_ReturnValue_3) == 0x000248, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000260, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x000278, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x000370, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_BreakVector_X_2) == 0x000378, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_BreakVector_Y_2) == 0x000380, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_BreakVector_Z_2) == 0x000388, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000390, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_MakeVector_ReturnValue_4) == 0x000398, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_MakeVector_ReturnValue_5) == 0x0003B0, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_LineTraceSingleForObjects_OutHit_2) == 0x0003C8, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_LineTraceSingleForObjects_OutHit_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_LineTraceSingleForObjects_ReturnValue_2) == 0x0004C0, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_LineTraceSingleForObjects_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0004C8, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_BreakVector_X_3) == 0x0004E0, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_BreakVector_Y_3) == 0x0004E8, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_BreakVector_Z_3) == 0x0004F0, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_MakeVector_ReturnValue_6) == 0x0004F8, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000510, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_MakeVector_ReturnValue_7) == 0x000518, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_LineTraceSingleForObjects_OutHit_3) == 0x000530, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_LineTraceSingleForObjects_OutHit_3' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_LineTraceSingleForObjects_ReturnValue_3) == 0x000628, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_LineTraceSingleForObjects_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_BooleanAND_ReturnValue) == 0x000629, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_BooleanAND_ReturnValue_1) == 0x00062A, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_BooleanAND_ReturnValue_2) == 0x00062B, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_CheckIfValidTPPosition, CallFunc_BooleanAND_ReturnValue_3) == 0x00062C, "Member 'PE_Item_DataTunneller_C_CheckIfValidTPPosition::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function PE_Item_DataTunneller.PE_Item_DataTunneller_C.ExecuteUbergraph_PE_Item_DataTunneller
// 0x00E8 (0x00E8 - 0x0000)
struct PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESnapNetWorldType                             CallFunc_GetSnapNetWorldType_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bOldEnabled;                          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bNewEnabled;                          // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentEntityTimeInMilliseconds_ReturnValue; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentEntityTimeInMilliseconds_ReturnValue_1; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUnscaledBoxExtent_ReturnValue;         // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_BoxOverlapActors_OutActors;               // 0x0078(0x0010)(ReferenceParm)
	bool                                          CallFunc_BoxOverlapActors_ReturnValue;             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfActorArrayContainsNonPhaseStartActors_ShouldStartPhasing; // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentEntityTimeInMilliseconds_ReturnValue_2; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentEntityTimeInMilliseconds_ReturnValue_3; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfKOCheckerFoundNearbyKOBOXes_FoundKOV; // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TravelDirectionTerrainTraceCheck_VelocityTraceHitTarget; // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TravelDirectionTerrainTraceCheck_VelocityTraceHitTarget_1; // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_TargetHit;                            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerEntity_ReturnValue;               // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerEntity_ReturnValue_1;             // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMatchaSnapNetCharacterEntity*          K2Node_DynamicCast_AsMatcha_Snap_Net_Character_Entity; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerEntity_ReturnValue_2;             // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMatchaSnapNetCharacterEntity*          K2Node_DynamicCast_AsMatcha_Snap_Net_Character_Entity_1; // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESnapNetWorldType                             CallFunc_GetSnapNetWorldType_ReturnValue_1;        // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESnapNetWorldType                             CallFunc_GetSnapNetWorldType_ReturnValue_2;        // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESnapNetWorldType                             CallFunc_GetSnapNetWorldType_ReturnValue_3;        // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller) == 0x000008, "Wrong alignment on PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller");
static_assert(sizeof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller) == 0x0000E8, "Wrong size on PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, EntryPoint) == 0x000000, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::EntryPoint' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_GetSnapNetWorldType_ReturnValue) == 0x000004, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_GetSnapNetWorldType_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, K2Node_Event_bOldEnabled) == 0x00000D, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::K2Node_Event_bOldEnabled' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, K2Node_Event_bNewEnabled) == 0x00000E, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::K2Node_Event_bNewEnabled' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_Not_PreBool_ReturnValue) == 0x00000F, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_GetCurrentEntityTimeInMilliseconds_ReturnValue) == 0x000018, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_GetCurrentEntityTimeInMilliseconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001D, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_BooleanAND_ReturnValue_1) == 0x00001E, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00001F, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, Temp_object_Variable) == 0x000020, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_BooleanAND_ReturnValue_2) == 0x000030, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_GetCurrentEntityTimeInMilliseconds_ReturnValue_1) == 0x000034, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_GetCurrentEntityTimeInMilliseconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_Not_PreBool_ReturnValue_2) == 0x000038, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_BooleanAND_ReturnValue_3) == 0x000039, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_IsValid_ReturnValue) == 0x00003A, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_GetUnscaledBoxExtent_ReturnValue) == 0x000040, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_GetUnscaledBoxExtent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000058, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, K2Node_Event_OtherActor) == 0x000070, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_BoxOverlapActors_OutActors) == 0x000078, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_BoxOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_BoxOverlapActors_ReturnValue) == 0x000088, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_BoxOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_CheckIfActorArrayContainsNonPhaseStartActors_ShouldStartPhasing) == 0x000089, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_CheckIfActorArrayContainsNonPhaseStartActors_ShouldStartPhasing' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_GetCurrentEntityTimeInMilliseconds_ReturnValue_2) == 0x00008C, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_GetCurrentEntityTimeInMilliseconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000090, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_GetCurrentEntityTimeInMilliseconds_ReturnValue_3) == 0x000094, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_GetCurrentEntityTimeInMilliseconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_Add_IntInt_ReturnValue_1) == 0x000098, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_CheckIfKOCheckerFoundNearbyKOBOXes_FoundKOV) == 0x00009C, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_CheckIfKOCheckerFoundNearbyKOBOXes_FoundKOV' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_Greater_IntInt_ReturnValue_3) == 0x00009D, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_TravelDirectionTerrainTraceCheck_VelocityTraceHitTarget) == 0x00009E, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_TravelDirectionTerrainTraceCheck_VelocityTraceHitTarget' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_TravelDirectionTerrainTraceCheck_VelocityTraceHitTarget_1) == 0x00009F, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_TravelDirectionTerrainTraceCheck_VelocityTraceHitTarget_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000A0, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_Not_PreBool_ReturnValue_4) == 0x0000A1, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_BooleanAND_ReturnValue_4) == 0x0000A2, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_Not_PreBool_ReturnValue_5) == 0x0000A3, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_BooleanAND_ReturnValue_5) == 0x0000A4, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_Greater_IntInt_ReturnValue_4) == 0x0000A5, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, K2Node_Event_TargetHit) == 0x0000A8, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::K2Node_Event_TargetHit' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_GetOwnerEntity_ReturnValue) == 0x0000B0, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_GetOwnerEntity_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_GetOwnerEntity_ReturnValue_1) == 0x0000B8, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_GetOwnerEntity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, K2Node_DynamicCast_AsMatcha_Snap_Net_Character_Entity) == 0x0000C0, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::K2Node_DynamicCast_AsMatcha_Snap_Net_Character_Entity' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_Array_Add_ReturnValue) == 0x0000CC, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_GetOwnerEntity_ReturnValue_2) == 0x0000D0, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_GetOwnerEntity_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, K2Node_DynamicCast_AsMatcha_Snap_Net_Character_Entity_1) == 0x0000D8, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::K2Node_DynamicCast_AsMatcha_Snap_Net_Character_Entity_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_GetSnapNetWorldType_ReturnValue_1) == 0x0000E1, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_GetSnapNetWorldType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_GetSnapNetWorldType_ReturnValue_2) == 0x0000E2, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_GetSnapNetWorldType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000E3, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, K2Node_SwitchEnum_CmpSuccess_2) == 0x0000E4, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, CallFunc_GetSnapNetWorldType_ReturnValue_3) == 0x0000E5, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::CallFunc_GetSnapNetWorldType_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller, K2Node_SwitchEnum_CmpSuccess_3) == 0x0000E6, "Member 'PE_Item_DataTunneller_C_ExecuteUbergraph_PE_Item_DataTunneller::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");

// Function PE_Item_DataTunneller.PE_Item_DataTunneller_C.OnEnabledChanged
// 0x0002 (0x0002 - 0x0000)
struct PE_Item_DataTunneller_C_OnEnabledChanged final
{
public:
	bool                                          bOldEnabled;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNewEnabled;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PE_Item_DataTunneller_C_OnEnabledChanged) == 0x000001, "Wrong alignment on PE_Item_DataTunneller_C_OnEnabledChanged");
static_assert(sizeof(PE_Item_DataTunneller_C_OnEnabledChanged) == 0x000002, "Wrong size on PE_Item_DataTunneller_C_OnEnabledChanged");
static_assert(offsetof(PE_Item_DataTunneller_C_OnEnabledChanged, bOldEnabled) == 0x000000, "Member 'PE_Item_DataTunneller_C_OnEnabledChanged::bOldEnabled' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_OnEnabledChanged, bNewEnabled) == 0x000001, "Member 'PE_Item_DataTunneller_C_OnEnabledChanged::bNewEnabled' has a wrong offset!");

// Function PE_Item_DataTunneller.PE_Item_DataTunneller_C.OnProjectileExplosion
// 0x0008 (0x0008 - 0x0000)
struct PE_Item_DataTunneller_C_OnProjectileExplosion final
{
public:
	class AActor*                                 TargetHit;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PE_Item_DataTunneller_C_OnProjectileExplosion) == 0x000008, "Wrong alignment on PE_Item_DataTunneller_C_OnProjectileExplosion");
static_assert(sizeof(PE_Item_DataTunneller_C_OnProjectileExplosion) == 0x000008, "Wrong size on PE_Item_DataTunneller_C_OnProjectileExplosion");
static_assert(offsetof(PE_Item_DataTunneller_C_OnProjectileExplosion, TargetHit) == 0x000000, "Member 'PE_Item_DataTunneller_C_OnProjectileExplosion::TargetHit' has a wrong offset!");

// Function PE_Item_DataTunneller.PE_Item_DataTunneller_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct PE_Item_DataTunneller_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PE_Item_DataTunneller_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on PE_Item_DataTunneller_C_ReceiveActorBeginOverlap");
static_assert(sizeof(PE_Item_DataTunneller_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on PE_Item_DataTunneller_C_ReceiveActorBeginOverlap");
static_assert(offsetof(PE_Item_DataTunneller_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'PE_Item_DataTunneller_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function PE_Item_DataTunneller.PE_Item_DataTunneller_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PE_Item_DataTunneller_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PE_Item_DataTunneller_C_ReceiveTick) == 0x000004, "Wrong alignment on PE_Item_DataTunneller_C_ReceiveTick");
static_assert(sizeof(PE_Item_DataTunneller_C_ReceiveTick) == 0x000004, "Wrong size on PE_Item_DataTunneller_C_ReceiveTick");
static_assert(offsetof(PE_Item_DataTunneller_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PE_Item_DataTunneller_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function PE_Item_DataTunneller.PE_Item_DataTunneller_C.TeleportTarget
// 0x0240 (0x0240 - 0x0000)
struct PE_Item_DataTunneller_C_TeleportTarget final
{
public:
	const class AActor*                           TargetHit;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         IgnoreActor;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         RightNumber;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LeftNumber;                                        // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TPTargetIsLeftOf;                                  // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Tpspacingflipper;                                  // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TeleportSpacing;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ValidTpPosFound;                                   // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AActor>                     PlatformEntity;                                    // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<class AActor*>                         ActorsToAffect;                                    // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         OwnerTeam;                                         // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      PawnObjects;                                       // 0x0058(0x0010)(Edit, BlueprintVisible)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetOwnerEntity_ReturnValue;               // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharacterEntity_Base_C*                K2Node_DynamicCast_AsCharacter_Entity_Base;        // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerEntity_ReturnValue_1;             // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerEntity_ReturnValue_2;             // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerEntity_ReturnValue_3;             // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerEntity_ReturnValue_4;             // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfValidTPPosition_InsideWorld;       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CharacterTeleport_ReturnValue;            // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_SpawnOwnedEntity_ReturnValue;             // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PE_Item_DataTunneller_C_TeleportTarget) == 0x000008, "Wrong alignment on PE_Item_DataTunneller_C_TeleportTarget");
static_assert(sizeof(PE_Item_DataTunneller_C_TeleportTarget) == 0x000240, "Wrong size on PE_Item_DataTunneller_C_TeleportTarget");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, TargetHit) == 0x000000, "Member 'PE_Item_DataTunneller_C_TeleportTarget::TargetHit' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, IgnoreActor) == 0x000008, "Member 'PE_Item_DataTunneller_C_TeleportTarget::IgnoreActor' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, RightNumber) == 0x000018, "Member 'PE_Item_DataTunneller_C_TeleportTarget::RightNumber' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, LeftNumber) == 0x00001C, "Member 'PE_Item_DataTunneller_C_TeleportTarget::LeftNumber' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, TPTargetIsLeftOf) == 0x000020, "Member 'PE_Item_DataTunneller_C_TeleportTarget::TPTargetIsLeftOf' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, Tpspacingflipper) == 0x000021, "Member 'PE_Item_DataTunneller_C_TeleportTarget::Tpspacingflipper' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, TeleportSpacing) == 0x000028, "Member 'PE_Item_DataTunneller_C_TeleportTarget::TeleportSpacing' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, ValidTpPosFound) == 0x000030, "Member 'PE_Item_DataTunneller_C_TeleportTarget::ValidTpPosFound' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, PlatformEntity) == 0x000038, "Member 'PE_Item_DataTunneller_C_TeleportTarget::PlatformEntity' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, ActorsToAffect) == 0x000040, "Member 'PE_Item_DataTunneller_C_TeleportTarget::ActorsToAffect' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, OwnerTeam) == 0x000050, "Member 'PE_Item_DataTunneller_C_TeleportTarget::OwnerTeam' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, PawnObjects) == 0x000058, "Member 'PE_Item_DataTunneller_C_TeleportTarget::PawnObjects' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_MakeRotator_ReturnValue) == 0x000068, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, K2Node_MakeArray_Array) == 0x000080, "Member 'PE_Item_DataTunneller_C_TeleportTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_GetOwnerEntity_ReturnValue) == 0x000090, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_GetOwnerEntity_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000098, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, K2Node_DynamicCast_AsCharacter_Entity_Base) == 0x0000B0, "Member 'PE_Item_DataTunneller_C_TeleportTarget::K2Node_DynamicCast_AsCharacter_Entity_Base' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'PE_Item_DataTunneller_C_TeleportTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_GetOwnerEntity_ReturnValue_1) == 0x0000C0, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_GetOwnerEntity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000C8, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_BreakVector_X) == 0x0000E0, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_BreakVector_Y) == 0x0000E8, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_BreakVector_Z) == 0x0000F0, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_MakeVector_ReturnValue) == 0x0000F8, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_GetOwnerEntity_ReturnValue_2) == 0x000110, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_GetOwnerEntity_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_GetOwnerEntity_ReturnValue_3) == 0x000118, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_GetOwnerEntity_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_GetOwnerEntity_ReturnValue_4) == 0x000120, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_GetOwnerEntity_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000128, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_Array_Add_ReturnValue) == 0x000140, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000148, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_BreakVector_X_1) == 0x000160, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_BreakVector_Y_1) == 0x000168, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_BreakVector_Z_1) == 0x000170, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_MakeVector_ReturnValue_1) == 0x000178, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_CheckIfValidTPPosition_InsideWorld) == 0x000190, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_CheckIfValidTPPosition_InsideWorld' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_SelectVector_ReturnValue) == 0x000198, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_BreakVector_X_2) == 0x0001B0, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_BreakVector_Y_2) == 0x0001B8, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_BreakVector_Z_2) == 0x0001C0, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0001C8, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_MakeVector_ReturnValue_2) == 0x0001E0, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_BreakVector_X_3) == 0x0001F8, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_BreakVector_Y_3) == 0x000200, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_BreakVector_Z_3) == 0x000208, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_CharacterTeleport_ReturnValue) == 0x000210, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_CharacterTeleport_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000218, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_MakeVector_ReturnValue_3) == 0x000220, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TeleportTarget, CallFunc_SpawnOwnedEntity_ReturnValue) == 0x000238, "Member 'PE_Item_DataTunneller_C_TeleportTarget::CallFunc_SpawnOwnedEntity_ReturnValue' has a wrong offset!");

// Function PE_Item_DataTunneller.PE_Item_DataTunneller_C.TravelDirectionTerrainTraceCheck
// 0x03C8 (0x03C8 - 0x0000)
struct PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck final
{
public:
	bool                                          VelocityTraceHitTarget;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      ObjTypes;                                          // 0x0008(0x0010)(Edit, BlueprintVisible)
	struct FVector                                EndingTracePoint;                                  // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartingTracePoint;                                // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceDist;                                         // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                InverseTravelVelocityNormalized;                   // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TravelVelocityNormalized;                          // 0x0068(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00F0(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0100(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21A[0x2];                                      // 0x021A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue; // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_SnapNetPropertyVelocityToVector_ReturnValue; // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast_1; // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck) == 0x000008, "Wrong alignment on PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck");
static_assert(sizeof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck) == 0x0003C8, "Wrong size on PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, VelocityTraceHitTarget) == 0x000000, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::VelocityTraceHitTarget' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, ObjTypes) == 0x000008, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::ObjTypes' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, EndingTracePoint) == 0x000018, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::EndingTracePoint' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, StartingTracePoint) == 0x000030, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::StartingTracePoint' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, TraceDist) == 0x000048, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::TraceDist' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, InverseTravelVelocityNormalized) == 0x000050, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::InverseTravelVelocityNormalized' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, TravelVelocityNormalized) == 0x000068, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::TravelVelocityNormalized' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000080, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, K2Node_MakeArray_Array) == 0x000098, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000A8, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000C0, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000D8, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, Temp_object_Variable) == 0x0000F0, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000100, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0001F8, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000200, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_BreakHitResult_bBlockingHit) == 0x000218, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_BreakHitResult_bInitialOverlap) == 0x000219, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_BreakHitResult_Time) == 0x00021C, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_BreakHitResult_Distance) == 0x000220, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_BreakHitResult_Location) == 0x000228, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_BreakHitResult_ImpactPoint) == 0x000240, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_BreakHitResult_Normal) == 0x000258, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_BreakHitResult_ImpactNormal) == 0x000270, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_BreakHitResult_PhysMat) == 0x000288, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_BreakHitResult_HitActor) == 0x000290, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_BreakHitResult_HitComponent) == 0x000298, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_BreakHitResult_HitBoneName) == 0x0002A0, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_BreakHitResult_BoneName) == 0x0002A8, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_BreakHitResult_HitItem) == 0x0002B0, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_BreakHitResult_ElementIndex) == 0x0002B4, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_BreakHitResult_FaceIndex) == 0x0002B8, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_BreakHitResult_TraceStart) == 0x0002C0, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_BreakHitResult_TraceEnd) == 0x0002D8, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_IsValid_ReturnValue) == 0x0002F0, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_GetCollisionResponseToChannel_ReturnValue) == 0x0002F1, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_GetCollisionResponseToChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002F2, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_BooleanAND_ReturnValue) == 0x0002F3, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0002F8, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000310, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_Add_VectorVector_ReturnValue) == 0x000328, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000340, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000358, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000370, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_Conv_SnapNetPropertyVelocityToVector_ReturnValue) == 0x000388, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_Conv_SnapNetPropertyVelocityToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_Normal_ReturnValue) == 0x0003A0, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x0003B8, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast_1) == 0x0003C0, "Member 'PE_Item_DataTunneller_C_TravelDirectionTerrainTraceCheck::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast_1' has a wrong offset!");

}

