#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: E_Platform_Item_ObscuraOrb

#include "Basic.hpp"

#include "Matcha_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass E_Platform_Item_ObscuraOrb.E_Platform_Item_ObscuraOrb_C
// 0x0030 (0x03A8 - 0x0378)
class AE_Platform_Item_ObscuraOrb_C final : public AMatchaSnapNetEntity
{
public:
	class UStaticMeshComponent*                   PlatformVisual2;                                   // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PlatformVisual1;                                   // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PlatformCollision2;                                // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PlatformCollision1;                                // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PlatformCollision;                                 // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PlatformVisual;                                    // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"E_Platform_Item_ObscuraOrb_C">();
	}
	static class AE_Platform_Item_ObscuraOrb_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AE_Platform_Item_ObscuraOrb_C>();
	}
};
static_assert(alignof(AE_Platform_Item_ObscuraOrb_C) == 0x000008, "Wrong alignment on AE_Platform_Item_ObscuraOrb_C");
static_assert(sizeof(AE_Platform_Item_ObscuraOrb_C) == 0x0003A8, "Wrong size on AE_Platform_Item_ObscuraOrb_C");
static_assert(offsetof(AE_Platform_Item_ObscuraOrb_C, PlatformVisual2) == 0x000378, "Member 'AE_Platform_Item_ObscuraOrb_C::PlatformVisual2' has a wrong offset!");
static_assert(offsetof(AE_Platform_Item_ObscuraOrb_C, PlatformVisual1) == 0x000380, "Member 'AE_Platform_Item_ObscuraOrb_C::PlatformVisual1' has a wrong offset!");
static_assert(offsetof(AE_Platform_Item_ObscuraOrb_C, PlatformCollision2) == 0x000388, "Member 'AE_Platform_Item_ObscuraOrb_C::PlatformCollision2' has a wrong offset!");
static_assert(offsetof(AE_Platform_Item_ObscuraOrb_C, PlatformCollision1) == 0x000390, "Member 'AE_Platform_Item_ObscuraOrb_C::PlatformCollision1' has a wrong offset!");
static_assert(offsetof(AE_Platform_Item_ObscuraOrb_C, PlatformCollision) == 0x000398, "Member 'AE_Platform_Item_ObscuraOrb_C::PlatformCollision' has a wrong offset!");
static_assert(offsetof(AE_Platform_Item_ObscuraOrb_C, PlatformVisual) == 0x0003A0, "Member 'AE_Platform_Item_ObscuraOrb_C::PlatformVisual' has a wrong offset!");

}

