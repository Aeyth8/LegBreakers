#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: E_DV_GlitchBeam

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_DamageVolumeBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass E_DV_GlitchBeam.E_DV_GlitchBeam_C
// 0x0040 (0x0408 - 0x03C8)
class AE_DV_GlitchBeam_C final : public AE_DamageVolumeBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Sphere2;                                           // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere1;                                           // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BorderVisual1;                                     // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DamageZoneBound1;                                  // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DamageZoneBound;                                   // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         OwnerTeam;                                         // 0x0400(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_E_DV_GlitchBeam(int32 EntryPoint);
	void OnEnabledChanged(bool bOldEnabled, bool bNewEnabled);
	void OnOverlapCharacter(class AMatchaSnapNetCharacterEntity* Character, float DeltaSeconds);
	void OnSpawnFinished();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"E_DV_GlitchBeam_C">();
	}
	static class AE_DV_GlitchBeam_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AE_DV_GlitchBeam_C>();
	}
};
static_assert(alignof(AE_DV_GlitchBeam_C) == 0x000008, "Wrong alignment on AE_DV_GlitchBeam_C");
static_assert(sizeof(AE_DV_GlitchBeam_C) == 0x000408, "Wrong size on AE_DV_GlitchBeam_C");
static_assert(offsetof(AE_DV_GlitchBeam_C, UberGraphFrame) == 0x0003C8, "Member 'AE_DV_GlitchBeam_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AE_DV_GlitchBeam_C, Sphere2) == 0x0003D0, "Member 'AE_DV_GlitchBeam_C::Sphere2' has a wrong offset!");
static_assert(offsetof(AE_DV_GlitchBeam_C, Sphere1) == 0x0003D8, "Member 'AE_DV_GlitchBeam_C::Sphere1' has a wrong offset!");
static_assert(offsetof(AE_DV_GlitchBeam_C, BorderVisual1) == 0x0003E0, "Member 'AE_DV_GlitchBeam_C::BorderVisual1' has a wrong offset!");
static_assert(offsetof(AE_DV_GlitchBeam_C, DamageZoneBound1) == 0x0003E8, "Member 'AE_DV_GlitchBeam_C::DamageZoneBound1' has a wrong offset!");
static_assert(offsetof(AE_DV_GlitchBeam_C, Sphere) == 0x0003F0, "Member 'AE_DV_GlitchBeam_C::Sphere' has a wrong offset!");
static_assert(offsetof(AE_DV_GlitchBeam_C, DamageZoneBound) == 0x0003F8, "Member 'AE_DV_GlitchBeam_C::DamageZoneBound' has a wrong offset!");
static_assert(offsetof(AE_DV_GlitchBeam_C, OwnerTeam) == 0x000400, "Member 'AE_DV_GlitchBeam_C::OwnerTeam' has a wrong offset!");

}

