#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SpawnCeremony

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Matcha_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.BindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_SpawnCeremony_C_BindData final
{
public:
	class UOdyUIData*                             NewUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnCeremony_C_BindData) == 0x000008, "Wrong alignment on WBP_SpawnCeremony_C_BindData");
static_assert(sizeof(WBP_SpawnCeremony_C_BindData) == 0x000008, "Wrong size on WBP_SpawnCeremony_C_BindData");
static_assert(offsetof(WBP_SpawnCeremony_C_BindData, NewUIData) == 0x000000, "Member 'WBP_SpawnCeremony_C_BindData::NewUIData' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.ChangeSelectedRegion
// 0x0004 (0x0004 - 0x0000)
struct WBP_SpawnCeremony_C_ChangeSelectedRegion final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnCeremony_C_ChangeSelectedRegion) == 0x000004, "Wrong alignment on WBP_SpawnCeremony_C_ChangeSelectedRegion");
static_assert(sizeof(WBP_SpawnCeremony_C_ChangeSelectedRegion) == 0x000004, "Wrong size on WBP_SpawnCeremony_C_ChangeSelectedRegion");
static_assert(offsetof(WBP_SpawnCeremony_C_ChangeSelectedRegion, Index_0) == 0x000000, "Member 'WBP_SpawnCeremony_C_ChangeSelectedRegion::Index_0' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.ExecuteUbergraph_WBP_SpawnCeremony
// 0x01F0 (0x01F0 - 0x0000)
struct WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             CallFunc_GetUIData_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaGameWorldUIData*                 K2Node_DynamicCast_AsMatcha_Game_World_UI_Data;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             K2Node_Event_NewUIData_1;                          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOdyUIData*                             K2Node_Event_OldUIData;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaGameWorldUIData*                 K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_1;  // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaGameWorldUIData*                 K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_2;  // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0068(0x0018)(HasGetValueTypeHash)
	TDelegate<void(int32 OldValue, int32 NewValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0080(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OldValue_3;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewValue_3;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OldValue_2;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewValue_2;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x00A8(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOdyUIData*                             K2Node_Event_NewUIData;                            // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaGameWorldUIData*                 K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_3;  // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x00F0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_5;                        // 0x0108(0x0018)(HasGetValueTypeHash)
	TDelegate<void(class FText OldValue, class FText NewValue)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0120(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_SpawnRegion_Button_C*>      CallFunc_Map_Values_Values;                        // 0x0130(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_SpawnRegion_Button_C*              CallFunc_Array_Get_Item;                           // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14E[0x2];                                      // 0x014E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_OldValue_1;                     // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewValue_1;                     // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 OldValue, int32 NewValue)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0158(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_OldValue;                       // 0x0168(0x0010)()
	class FText                                   K2Node_CustomEvent_NewValue;                       // 0x0178(0x0010)()
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0188(0x0018)(HasGetValueTypeHash)
	class UOdyUIData*                             CallFunc_GetUIData_ReturnValue_1;                  // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaGameWorldUIData*                 K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_4;  // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IntBinding_GetValue_ReturnValue;          // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_TextBinding_GetValue_ReturnValue;         // 0x01B8(0x0010)()
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x01C8(0x0018)(HasGetValueTypeHash)
	TDelegate<void(int32 OldValue, int32 NewValue)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x01E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony) == 0x000008, "Wrong alignment on WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony");
static_assert(sizeof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony) == 0x0001F0, "Wrong size on WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, EntryPoint) == 0x000000, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, CallFunc_GetUIData_ReturnValue) == 0x000008, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::CallFunc_GetUIData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_DynamicCast_AsMatcha_Game_World_UI_Data) == 0x000018, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_DynamicCast_AsMatcha_Game_World_UI_Data' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, Temp_int_Array_Index_Variable) == 0x000028, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, Temp_int_Variable) == 0x00002C, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, Temp_int_Variable_1) == 0x000030, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_Event_NewUIData_1) == 0x000038, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_Event_NewUIData_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_Event_OldUIData) == 0x000040, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_Event_OldUIData' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_1) == 0x000048, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_2) == 0x000058, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_2' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_InputKeyEvent_Key_2) == 0x000068, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_CreateDelegate_OutputDelegate) == 0x000080, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_CustomEvent_OldValue_3) == 0x000090, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_CustomEvent_OldValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_CustomEvent_NewValue_3) == 0x000094, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_CustomEvent_NewValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, CallFunc_Conv_IntToByte_ReturnValue) == 0x000098, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000099, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, CallFunc_GetValidValue_ReturnValue) == 0x00009A, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, CallFunc_GetValidValue_ReturnValue_1) == 0x00009B, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_CustomEvent_OldValue_2) == 0x00009C, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_CustomEvent_OldValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_CustomEvent_NewValue_2) == 0x0000A0, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_CustomEvent_NewValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_InputKeyEvent_Key_3) == 0x0000A8, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000C0, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C4, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000C8, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_Event_NewUIData) == 0x0000D8, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_Event_NewUIData' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_3) == 0x0000E0, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_3' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_DynamicCast_bSuccess_3) == 0x0000E8, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_InputKeyEvent_Key_4) == 0x0000F0, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_InputKeyEvent_Key_5) == 0x000108, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_InputKeyEvent_Key_5' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_CreateDelegate_OutputDelegate_2) == 0x000120, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, CallFunc_Map_Values_Values) == 0x000130, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, CallFunc_Array_Get_Item) == 0x000140, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, CallFunc_Array_Length_ReturnValue) == 0x000148, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, CallFunc_Less_IntInt_ReturnValue) == 0x00014C, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_Event_IsDesignTime) == 0x00014D, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_CustomEvent_OldValue_1) == 0x000150, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_CustomEvent_OldValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_CustomEvent_NewValue_1) == 0x000154, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_CustomEvent_NewValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_CreateDelegate_OutputDelegate_3) == 0x000158, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_CustomEvent_OldValue) == 0x000168, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_CustomEvent_NewValue) == 0x000178, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_InputKeyEvent_Key) == 0x000188, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, CallFunc_GetUIData_ReturnValue_1) == 0x0001A0, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::CallFunc_GetUIData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_4) == 0x0001A8, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_4' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_DynamicCast_bSuccess_4) == 0x0001B0, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, CallFunc_IntBinding_GetValue_ReturnValue) == 0x0001B4, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::CallFunc_IntBinding_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, CallFunc_TextBinding_GetValue_ReturnValue) == 0x0001B8, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::CallFunc_TextBinding_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_InputKeyEvent_Key_1) == 0x0001C8, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony, K2Node_CreateDelegate_OutputDelegate_4) == 0x0001E0, "Member 'WBP_SpawnCeremony_C_ExecuteUbergraph_WBP_SpawnCeremony::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.HandleMatchPhaseChanged
// 0x0003 (0x0003 - 0x0000)
struct WBP_SpawnCeremony_C_HandleMatchPhaseChanged final
{
public:
	EMatchaMatchPhase                             OldPhase;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMatchaMatchPhase                             NewPhase;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnCeremony_C_HandleMatchPhaseChanged) == 0x000001, "Wrong alignment on WBP_SpawnCeremony_C_HandleMatchPhaseChanged");
static_assert(sizeof(WBP_SpawnCeremony_C_HandleMatchPhaseChanged) == 0x000003, "Wrong size on WBP_SpawnCeremony_C_HandleMatchPhaseChanged");
static_assert(offsetof(WBP_SpawnCeremony_C_HandleMatchPhaseChanged, OldPhase) == 0x000000, "Member 'WBP_SpawnCeremony_C_HandleMatchPhaseChanged::OldPhase' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_HandleMatchPhaseChanged, NewPhase) == 0x000001, "Member 'WBP_SpawnCeremony_C_HandleMatchPhaseChanged::NewPhase' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_HandleMatchPhaseChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'WBP_SpawnCeremony_C_HandleMatchPhaseChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.InitializeSelectableSpawnRegions
// 0x0058 (0x0058 - 0x0000)
struct WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Index)>                  K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<ESpawnRegion>                          CallFunc_GetUISelectableSpawnRegions_OutSelectableSpawnRegions; // 0x0020(0x0010)(ReferenceParm)
	ESpawnRegion                                  CallFunc_Array_Get_Item;                           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_IsEmpty_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_SpawnRegion_Button_C*              CallFunc_Create_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions) == 0x000008, "Wrong alignment on WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions");
static_assert(sizeof(WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions) == 0x000058, "Wrong size on WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions");
static_assert(offsetof(WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions, CallFunc_GetUISelectableSpawnRegions_OutSelectableSpawnRegions) == 0x000020, "Member 'WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions::CallFunc_GetUISelectableSpawnRegions_OutSelectableSpawnRegions' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions, CallFunc_Map_IsEmpty_ReturnValue) == 0x000039, "Member 'WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions::CallFunc_Map_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions, CallFunc_GetOwningPlayer_ReturnValue) == 0x000040, "Member 'WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions, CallFunc_Create_ReturnValue) == 0x000048, "Member 'WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions, CallFunc_AddChild_ReturnValue) == 0x000050, "Member 'WBP_SpawnCeremony_C_InitializeSelectableSpawnRegions::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.InpActEvt_Down_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct WBP_SpawnCeremony_C_InpActEvt_Down_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnCeremony_C_InpActEvt_Down_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on WBP_SpawnCeremony_C_InpActEvt_Down_K2Node_InputKeyEvent_4");
static_assert(sizeof(WBP_SpawnCeremony_C_InpActEvt_Down_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on WBP_SpawnCeremony_C_InpActEvt_Down_K2Node_InputKeyEvent_4");
static_assert(offsetof(WBP_SpawnCeremony_C_InpActEvt_Down_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'WBP_SpawnCeremony_C_InpActEvt_Down_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.InpActEvt_Gamepad_DPad_Down_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct WBP_SpawnCeremony_C_InpActEvt_Gamepad_DPad_Down_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnCeremony_C_InpActEvt_Gamepad_DPad_Down_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on WBP_SpawnCeremony_C_InpActEvt_Gamepad_DPad_Down_K2Node_InputKeyEvent_2");
static_assert(sizeof(WBP_SpawnCeremony_C_InpActEvt_Gamepad_DPad_Down_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on WBP_SpawnCeremony_C_InpActEvt_Gamepad_DPad_Down_K2Node_InputKeyEvent_2");
static_assert(offsetof(WBP_SpawnCeremony_C_InpActEvt_Gamepad_DPad_Down_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'WBP_SpawnCeremony_C_InpActEvt_Gamepad_DPad_Down_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.InpActEvt_Gamepad_DPad_Up_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct WBP_SpawnCeremony_C_InpActEvt_Gamepad_DPad_Up_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnCeremony_C_InpActEvt_Gamepad_DPad_Up_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on WBP_SpawnCeremony_C_InpActEvt_Gamepad_DPad_Up_K2Node_InputKeyEvent_3");
static_assert(sizeof(WBP_SpawnCeremony_C_InpActEvt_Gamepad_DPad_Up_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on WBP_SpawnCeremony_C_InpActEvt_Gamepad_DPad_Up_K2Node_InputKeyEvent_3");
static_assert(offsetof(WBP_SpawnCeremony_C_InpActEvt_Gamepad_DPad_Up_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'WBP_SpawnCeremony_C_InpActEvt_Gamepad_DPad_Up_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.InpActEvt_S_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct WBP_SpawnCeremony_C_InpActEvt_S_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnCeremony_C_InpActEvt_S_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on WBP_SpawnCeremony_C_InpActEvt_S_K2Node_InputKeyEvent_1");
static_assert(sizeof(WBP_SpawnCeremony_C_InpActEvt_S_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on WBP_SpawnCeremony_C_InpActEvt_S_K2Node_InputKeyEvent_1");
static_assert(offsetof(WBP_SpawnCeremony_C_InpActEvt_S_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'WBP_SpawnCeremony_C_InpActEvt_S_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.InpActEvt_Up_K2Node_InputKeyEvent_5
// 0x0018 (0x0018 - 0x0000)
struct WBP_SpawnCeremony_C_InpActEvt_Up_K2Node_InputKeyEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnCeremony_C_InpActEvt_Up_K2Node_InputKeyEvent_5) == 0x000008, "Wrong alignment on WBP_SpawnCeremony_C_InpActEvt_Up_K2Node_InputKeyEvent_5");
static_assert(sizeof(WBP_SpawnCeremony_C_InpActEvt_Up_K2Node_InputKeyEvent_5) == 0x000018, "Wrong size on WBP_SpawnCeremony_C_InpActEvt_Up_K2Node_InputKeyEvent_5");
static_assert(offsetof(WBP_SpawnCeremony_C_InpActEvt_Up_K2Node_InputKeyEvent_5, Key) == 0x000000, "Member 'WBP_SpawnCeremony_C_InpActEvt_Up_K2Node_InputKeyEvent_5::Key' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.InpActEvt_W_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct WBP_SpawnCeremony_C_InpActEvt_W_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnCeremony_C_InpActEvt_W_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on WBP_SpawnCeremony_C_InpActEvt_W_K2Node_InputKeyEvent_0");
static_assert(sizeof(WBP_SpawnCeremony_C_InpActEvt_W_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on WBP_SpawnCeremony_C_InpActEvt_W_K2Node_InputKeyEvent_0");
static_assert(offsetof(WBP_SpawnCeremony_C_InpActEvt_W_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'WBP_SpawnCeremony_C_InpActEvt_W_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.OnMatchPhaseChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_SpawnCeremony_C_OnMatchPhaseChanged final
{
public:
	int32                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnCeremony_C_OnMatchPhaseChanged) == 0x000004, "Wrong alignment on WBP_SpawnCeremony_C_OnMatchPhaseChanged");
static_assert(sizeof(WBP_SpawnCeremony_C_OnMatchPhaseChanged) == 0x000008, "Wrong size on WBP_SpawnCeremony_C_OnMatchPhaseChanged");
static_assert(offsetof(WBP_SpawnCeremony_C_OnMatchPhaseChanged, OldValue) == 0x000000, "Member 'WBP_SpawnCeremony_C_OnMatchPhaseChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_OnMatchPhaseChanged, NewValue) == 0x000004, "Member 'WBP_SpawnCeremony_C_OnMatchPhaseChanged::NewValue' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.OnTimerUpdated
// 0x0008 (0x0008 - 0x0000)
struct WBP_SpawnCeremony_C_OnTimerUpdated final
{
public:
	int32                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnCeremony_C_OnTimerUpdated) == 0x000004, "Wrong alignment on WBP_SpawnCeremony_C_OnTimerUpdated");
static_assert(sizeof(WBP_SpawnCeremony_C_OnTimerUpdated) == 0x000008, "Wrong size on WBP_SpawnCeremony_C_OnTimerUpdated");
static_assert(offsetof(WBP_SpawnCeremony_C_OnTimerUpdated, OldValue) == 0x000000, "Member 'WBP_SpawnCeremony_C_OnTimerUpdated::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_OnTimerUpdated, NewValue) == 0x000004, "Member 'WBP_SpawnCeremony_C_OnTimerUpdated::NewValue' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.OnUIDataSet
// 0x0008 (0x0008 - 0x0000)
struct WBP_SpawnCeremony_C_OnUIDataSet final
{
public:
	class UOdyUIData*                             NewUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnCeremony_C_OnUIDataSet) == 0x000008, "Wrong alignment on WBP_SpawnCeremony_C_OnUIDataSet");
static_assert(sizeof(WBP_SpawnCeremony_C_OnUIDataSet) == 0x000008, "Wrong size on WBP_SpawnCeremony_C_OnUIDataSet");
static_assert(offsetof(WBP_SpawnCeremony_C_OnUIDataSet, NewUIData) == 0x000000, "Member 'WBP_SpawnCeremony_C_OnUIDataSet::NewUIData' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.PlayerNameChanged
// 0x0020 (0x0020 - 0x0000)
struct WBP_SpawnCeremony_C_PlayerNameChanged final
{
public:
	class FText                                   OldValue;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   NewValue;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_SpawnCeremony_C_PlayerNameChanged) == 0x000008, "Wrong alignment on WBP_SpawnCeremony_C_PlayerNameChanged");
static_assert(sizeof(WBP_SpawnCeremony_C_PlayerNameChanged) == 0x000020, "Wrong size on WBP_SpawnCeremony_C_PlayerNameChanged");
static_assert(offsetof(WBP_SpawnCeremony_C_PlayerNameChanged, OldValue) == 0x000000, "Member 'WBP_SpawnCeremony_C_PlayerNameChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_PlayerNameChanged, NewValue) == 0x000010, "Member 'WBP_SpawnCeremony_C_PlayerNameChanged::NewValue' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_SpawnCeremony_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnCeremony_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_SpawnCeremony_C_PreConstruct");
static_assert(sizeof(WBP_SpawnCeremony_C_PreConstruct) == 0x000001, "Wrong size on WBP_SpawnCeremony_C_PreConstruct");
static_assert(offsetof(WBP_SpawnCeremony_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_SpawnCeremony_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.SetTipHackText
// 0x0010 (0x0010 - 0x0000)
struct WBP_SpawnCeremony_C_SetTipHackText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_SpawnCeremony_C_SetTipHackText) == 0x000008, "Wrong alignment on WBP_SpawnCeremony_C_SetTipHackText");
static_assert(sizeof(WBP_SpawnCeremony_C_SetTipHackText) == 0x000010, "Wrong size on WBP_SpawnCeremony_C_SetTipHackText");
static_assert(offsetof(WBP_SpawnCeremony_C_SetTipHackText, Text) == 0x000000, "Member 'WBP_SpawnCeremony_C_SetTipHackText::Text' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.TeamNumberChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_SpawnCeremony_C_TeamNumberChanged final
{
public:
	int32                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnCeremony_C_TeamNumberChanged) == 0x000004, "Wrong alignment on WBP_SpawnCeremony_C_TeamNumberChanged");
static_assert(sizeof(WBP_SpawnCeremony_C_TeamNumberChanged) == 0x000008, "Wrong size on WBP_SpawnCeremony_C_TeamNumberChanged");
static_assert(offsetof(WBP_SpawnCeremony_C_TeamNumberChanged, OldValue) == 0x000000, "Member 'WBP_SpawnCeremony_C_TeamNumberChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_TeamNumberChanged, NewValue) == 0x000004, "Member 'WBP_SpawnCeremony_C_TeamNumberChanged::NewValue' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.Try Select Region By Index
// 0x0030 (0x0030 - 0x0000)
struct WBP_SpawnCeremony_C_Try_Select_Region_By_Index final
{
public:
	int32                                         SelectedIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpawnRegion                                  CallFunc_Array_Get_Item;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMatchaSnapNetPlayerController*         K2Node_DynamicCast_AsMatcha_Snap_Net_Player_Controller; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnCeremony_C_Try_Select_Region_By_Index) == 0x000008, "Wrong alignment on WBP_SpawnCeremony_C_Try_Select_Region_By_Index");
static_assert(sizeof(WBP_SpawnCeremony_C_Try_Select_Region_By_Index) == 0x000030, "Wrong size on WBP_SpawnCeremony_C_Try_Select_Region_By_Index");
static_assert(offsetof(WBP_SpawnCeremony_C_Try_Select_Region_By_Index, SelectedIndex) == 0x000000, "Member 'WBP_SpawnCeremony_C_Try_Select_Region_By_Index::SelectedIndex' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Try_Select_Region_By_Index, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'WBP_SpawnCeremony_C_Try_Select_Region_By_Index::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Try_Select_Region_By_Index, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_SpawnCeremony_C_Try_Select_Region_By_Index::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Try_Select_Region_By_Index, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_SpawnCeremony_C_Try_Select_Region_By_Index::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Try_Select_Region_By_Index, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'WBP_SpawnCeremony_C_Try_Select_Region_By_Index::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Try_Select_Region_By_Index, CallFunc_Clamp_ReturnValue) == 0x000018, "Member 'WBP_SpawnCeremony_C_Try_Select_Region_By_Index::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Try_Select_Region_By_Index, K2Node_DynamicCast_AsMatcha_Snap_Net_Player_Controller) == 0x000020, "Member 'WBP_SpawnCeremony_C_Try_Select_Region_By_Index::K2Node_DynamicCast_AsMatcha_Snap_Net_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Try_Select_Region_By_Index, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_SpawnCeremony_C_Try_Select_Region_By_Index::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.UnbindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_SpawnCeremony_C_UnbindData final
{
public:
	class UOdyUIData*                             OldUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnCeremony_C_UnbindData) == 0x000008, "Wrong alignment on WBP_SpawnCeremony_C_UnbindData");
static_assert(sizeof(WBP_SpawnCeremony_C_UnbindData) == 0x000008, "Wrong size on WBP_SpawnCeremony_C_UnbindData");
static_assert(offsetof(WBP_SpawnCeremony_C_UnbindData, OldUIData) == 0x000000, "Member 'WBP_SpawnCeremony_C_UnbindData::OldUIData' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.Update Available Hack Tips
// 0x0058 (0x0058 - 0x0000)
struct WBP_SpawnCeremony_C_Update_Available_Hack_Tips final
{
public:
	class UMatchaGameWorldUIData*                 WorldUIData;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SpawnCeremony_HackTip_C*           K2Node_DynamicCast_AsWBP_Spawn_Ceremony_Hack_Tip;  // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnCeremony_C_Update_Available_Hack_Tips) == 0x000008, "Wrong alignment on WBP_SpawnCeremony_C_Update_Available_Hack_Tips");
static_assert(sizeof(WBP_SpawnCeremony_C_Update_Available_Hack_Tips) == 0x000058, "Wrong size on WBP_SpawnCeremony_C_Update_Available_Hack_Tips");
static_assert(offsetof(WBP_SpawnCeremony_C_Update_Available_Hack_Tips, WorldUIData) == 0x000000, "Member 'WBP_SpawnCeremony_C_Update_Available_Hack_Tips::WorldUIData' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Update_Available_Hack_Tips, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_SpawnCeremony_C_Update_Available_Hack_Tips::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Update_Available_Hack_Tips, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_SpawnCeremony_C_Update_Available_Hack_Tips::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Update_Available_Hack_Tips, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_SpawnCeremony_C_Update_Available_Hack_Tips::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Update_Available_Hack_Tips, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WBP_SpawnCeremony_C_Update_Available_Hack_Tips::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Update_Available_Hack_Tips, Temp_byte_Variable) == 0x000018, "Member 'WBP_SpawnCeremony_C_Update_Available_Hack_Tips::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Update_Available_Hack_Tips, Temp_byte_Variable_1) == 0x000019, "Member 'WBP_SpawnCeremony_C_Update_Available_Hack_Tips::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Update_Available_Hack_Tips, Temp_bool_Variable) == 0x00001A, "Member 'WBP_SpawnCeremony_C_Update_Available_Hack_Tips::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Update_Available_Hack_Tips, CallFunc_GetAllChildren_ReturnValue) == 0x000020, "Member 'WBP_SpawnCeremony_C_Update_Available_Hack_Tips::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Update_Available_Hack_Tips, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_SpawnCeremony_C_Update_Available_Hack_Tips::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Update_Available_Hack_Tips, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_SpawnCeremony_C_Update_Available_Hack_Tips::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Update_Available_Hack_Tips, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WBP_SpawnCeremony_C_Update_Available_Hack_Tips::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Update_Available_Hack_Tips, K2Node_DynamicCast_AsWBP_Spawn_Ceremony_Hack_Tip) == 0x000048, "Member 'WBP_SpawnCeremony_C_Update_Available_Hack_Tips::K2Node_DynamicCast_AsWBP_Spawn_Ceremony_Hack_Tip' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Update_Available_Hack_Tips, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_SpawnCeremony_C_Update_Available_Hack_Tips::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Update_Available_Hack_Tips, CallFunc_Set_Contains_ReturnValue) == 0x000051, "Member 'WBP_SpawnCeremony_C_Update_Available_Hack_Tips::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_Update_Available_Hack_Tips, K2Node_Select_Default) == 0x000052, "Member 'WBP_SpawnCeremony_C_Update_Available_Hack_Tips::K2Node_Select_Default' has a wrong offset!");

// Function WBP_SpawnCeremony.WBP_SpawnCeremony_C.UpdateTimer
// 0x0088 (0x0088 - 0x0000)
struct WBP_SpawnCeremony_C_UpdateTimer final
{
public:
	int32                                         RemainingTime;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0010)()
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0060(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnCeremony_C_UpdateTimer) == 0x000008, "Wrong alignment on WBP_SpawnCeremony_C_UpdateTimer");
static_assert(sizeof(WBP_SpawnCeremony_C_UpdateTimer) == 0x000088, "Wrong size on WBP_SpawnCeremony_C_UpdateTimer");
static_assert(offsetof(WBP_SpawnCeremony_C_UpdateTimer, RemainingTime) == 0x000000, "Member 'WBP_SpawnCeremony_C_UpdateTimer::RemainingTime' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_UpdateTimer, CallFunc_Less_IntInt_ReturnValue) == 0x000004, "Member 'WBP_SpawnCeremony_C_UpdateTimer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_UpdateTimer, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_SpawnCeremony_C_UpdateTimer::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_UpdateTimer, CallFunc_SelectString_ReturnValue) == 0x000018, "Member 'WBP_SpawnCeremony_C_UpdateTimer::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_UpdateTimer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'WBP_SpawnCeremony_C_UpdateTimer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_UpdateTimer, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'WBP_SpawnCeremony_C_UpdateTimer::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_UpdateTimer, Temp_struct_Variable) == 0x000040, "Member 'WBP_SpawnCeremony_C_UpdateTimer::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_UpdateTimer, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'WBP_SpawnCeremony_C_UpdateTimer::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_UpdateTimer, CallFunc_Conv_StringToText_ReturnValue) == 0x000060, "Member 'WBP_SpawnCeremony_C_UpdateTimer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_UpdateTimer, Temp_bool_Variable) == 0x000070, "Member 'WBP_SpawnCeremony_C_UpdateTimer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_UpdateTimer, K2Node_Select_Default) == 0x000074, "Member 'WBP_SpawnCeremony_C_UpdateTimer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SpawnCeremony_C_UpdateTimer, K2Node_SwitchEnum_CmpSuccess) == 0x000084, "Member 'WBP_SpawnCeremony_C_UpdateTimer::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

