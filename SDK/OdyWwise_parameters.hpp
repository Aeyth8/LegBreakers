#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OdyWwise

#include "Basic.hpp"

#include "OdyWwise_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function OdyWwise.OdyWwiseGameplayStatics.AddAkPlayData
// 0x0028 (0x0028 - 0x0000)
struct OdyWwiseGameplayStatics_AddAkPlayData final
{
public:
	class USceneComponent*                        SceneComponent;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UAnimNotifyState*                 NotifyState;                                       // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PlayId;                                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           AudioComponent;                                    // 0x0018(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          AudioEvent;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWwiseGameplayStatics_AddAkPlayData) == 0x000008, "Wrong alignment on OdyWwiseGameplayStatics_AddAkPlayData");
static_assert(sizeof(OdyWwiseGameplayStatics_AddAkPlayData) == 0x000028, "Wrong size on OdyWwiseGameplayStatics_AddAkPlayData");
static_assert(offsetof(OdyWwiseGameplayStatics_AddAkPlayData, SceneComponent) == 0x000000, "Member 'OdyWwiseGameplayStatics_AddAkPlayData::SceneComponent' has a wrong offset!");
static_assert(offsetof(OdyWwiseGameplayStatics_AddAkPlayData, NotifyState) == 0x000008, "Member 'OdyWwiseGameplayStatics_AddAkPlayData::NotifyState' has a wrong offset!");
static_assert(offsetof(OdyWwiseGameplayStatics_AddAkPlayData, PlayId) == 0x000010, "Member 'OdyWwiseGameplayStatics_AddAkPlayData::PlayId' has a wrong offset!");
static_assert(offsetof(OdyWwiseGameplayStatics_AddAkPlayData, AudioComponent) == 0x000018, "Member 'OdyWwiseGameplayStatics_AddAkPlayData::AudioComponent' has a wrong offset!");
static_assert(offsetof(OdyWwiseGameplayStatics_AddAkPlayData, AudioEvent) == 0x000020, "Member 'OdyWwiseGameplayStatics_AddAkPlayData::AudioEvent' has a wrong offset!");

// Function OdyWwise.OdyWwiseGameplayStatics.AddWwiseDefaultListener
// 0x0008 (0x0008 - 0x0000)
struct OdyWwiseGameplayStatics_AddWwiseDefaultListener final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWwiseGameplayStatics_AddWwiseDefaultListener) == 0x000008, "Wrong alignment on OdyWwiseGameplayStatics_AddWwiseDefaultListener");
static_assert(sizeof(OdyWwiseGameplayStatics_AddWwiseDefaultListener) == 0x000008, "Wrong size on OdyWwiseGameplayStatics_AddWwiseDefaultListener");
static_assert(offsetof(OdyWwiseGameplayStatics_AddWwiseDefaultListener, Controller) == 0x000000, "Member 'OdyWwiseGameplayStatics_AddWwiseDefaultListener::Controller' has a wrong offset!");

// Function OdyWwise.OdyWwiseGameplayStatics.ExecuteActionOnPlayingId
// 0x0014 (0x0014 - 0x0000)
struct OdyWwiseGameplayStatics_ExecuteActionOnPlayingId final
{
public:
	EAkActionOnEventType                          ActionType;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayingID;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TransitionDuration;                                // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAkCurveInterpolation                         FadeCurve;                                         // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWwiseGameplayStatics_ExecuteActionOnPlayingId) == 0x000004, "Wrong alignment on OdyWwiseGameplayStatics_ExecuteActionOnPlayingId");
static_assert(sizeof(OdyWwiseGameplayStatics_ExecuteActionOnPlayingId) == 0x000014, "Wrong size on OdyWwiseGameplayStatics_ExecuteActionOnPlayingId");
static_assert(offsetof(OdyWwiseGameplayStatics_ExecuteActionOnPlayingId, ActionType) == 0x000000, "Member 'OdyWwiseGameplayStatics_ExecuteActionOnPlayingId::ActionType' has a wrong offset!");
static_assert(offsetof(OdyWwiseGameplayStatics_ExecuteActionOnPlayingId, PlayingID) == 0x000004, "Member 'OdyWwiseGameplayStatics_ExecuteActionOnPlayingId::PlayingID' has a wrong offset!");
static_assert(offsetof(OdyWwiseGameplayStatics_ExecuteActionOnPlayingId, TransitionDuration) == 0x000008, "Member 'OdyWwiseGameplayStatics_ExecuteActionOnPlayingId::TransitionDuration' has a wrong offset!");
static_assert(offsetof(OdyWwiseGameplayStatics_ExecuteActionOnPlayingId, FadeCurve) == 0x00000C, "Member 'OdyWwiseGameplayStatics_ExecuteActionOnPlayingId::FadeCurve' has a wrong offset!");
static_assert(offsetof(OdyWwiseGameplayStatics_ExecuteActionOnPlayingId, ReturnValue) == 0x000010, "Member 'OdyWwiseGameplayStatics_ExecuteActionOnPlayingId::ReturnValue' has a wrong offset!");

// Function OdyWwise.OdyWwiseGameplayStatics.GetAkPlayData
// 0x0038 (0x0038 - 0x0000)
struct OdyWwiseGameplayStatics_GetAkPlayData final
{
public:
	class USceneComponent*                        SceneComponent;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UAnimNotifyState*                 NotifyState;                                       // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAkPlayData                            OutAkPlayData;                                     // 0x0010(0x0024)(Parm, OutParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWwiseGameplayStatics_GetAkPlayData) == 0x000008, "Wrong alignment on OdyWwiseGameplayStatics_GetAkPlayData");
static_assert(sizeof(OdyWwiseGameplayStatics_GetAkPlayData) == 0x000038, "Wrong size on OdyWwiseGameplayStatics_GetAkPlayData");
static_assert(offsetof(OdyWwiseGameplayStatics_GetAkPlayData, SceneComponent) == 0x000000, "Member 'OdyWwiseGameplayStatics_GetAkPlayData::SceneComponent' has a wrong offset!");
static_assert(offsetof(OdyWwiseGameplayStatics_GetAkPlayData, NotifyState) == 0x000008, "Member 'OdyWwiseGameplayStatics_GetAkPlayData::NotifyState' has a wrong offset!");
static_assert(offsetof(OdyWwiseGameplayStatics_GetAkPlayData, OutAkPlayData) == 0x000010, "Member 'OdyWwiseGameplayStatics_GetAkPlayData::OutAkPlayData' has a wrong offset!");
static_assert(offsetof(OdyWwiseGameplayStatics_GetAkPlayData, ReturnValue) == 0x000034, "Member 'OdyWwiseGameplayStatics_GetAkPlayData::ReturnValue' has a wrong offset!");

// Function OdyWwise.OdyWwiseGameplayStatics.PopAkPlayData
// 0x0038 (0x0038 - 0x0000)
struct OdyWwiseGameplayStatics_PopAkPlayData final
{
public:
	class USceneComponent*                        SceneComponent;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UAnimNotifyState*                 NotifyState;                                       // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAkPlayData                            OutAkPlayData;                                     // 0x0010(0x0024)(Parm, OutParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWwiseGameplayStatics_PopAkPlayData) == 0x000008, "Wrong alignment on OdyWwiseGameplayStatics_PopAkPlayData");
static_assert(sizeof(OdyWwiseGameplayStatics_PopAkPlayData) == 0x000038, "Wrong size on OdyWwiseGameplayStatics_PopAkPlayData");
static_assert(offsetof(OdyWwiseGameplayStatics_PopAkPlayData, SceneComponent) == 0x000000, "Member 'OdyWwiseGameplayStatics_PopAkPlayData::SceneComponent' has a wrong offset!");
static_assert(offsetof(OdyWwiseGameplayStatics_PopAkPlayData, NotifyState) == 0x000008, "Member 'OdyWwiseGameplayStatics_PopAkPlayData::NotifyState' has a wrong offset!");
static_assert(offsetof(OdyWwiseGameplayStatics_PopAkPlayData, OutAkPlayData) == 0x000010, "Member 'OdyWwiseGameplayStatics_PopAkPlayData::OutAkPlayData' has a wrong offset!");
static_assert(offsetof(OdyWwiseGameplayStatics_PopAkPlayData, ReturnValue) == 0x000034, "Member 'OdyWwiseGameplayStatics_PopAkPlayData::ReturnValue' has a wrong offset!");

// Function OdyWwise.OdyWwiseGameplayStatics.RemoveWwiseDefaultListener
// 0x0008 (0x0008 - 0x0000)
struct OdyWwiseGameplayStatics_RemoveWwiseDefaultListener final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdyWwiseGameplayStatics_RemoveWwiseDefaultListener) == 0x000008, "Wrong alignment on OdyWwiseGameplayStatics_RemoveWwiseDefaultListener");
static_assert(sizeof(OdyWwiseGameplayStatics_RemoveWwiseDefaultListener) == 0x000008, "Wrong size on OdyWwiseGameplayStatics_RemoveWwiseDefaultListener");
static_assert(offsetof(OdyWwiseGameplayStatics_RemoveWwiseDefaultListener, Controller) == 0x000000, "Member 'OdyWwiseGameplayStatics_RemoveWwiseDefaultListener::Controller' has a wrong offset!");

}

