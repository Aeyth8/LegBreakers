#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Inventory

#include "Basic.hpp"

#include "WBP_Inventory_classes.hpp"
#include "WBP_Inventory_parameters.hpp"


namespace SDK
{

// Function WBP_Inventory.WBP_Inventory_C.ActivateGamePadRadial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Activate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_C::ActivateGamePadRadial(bool Activate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_C", "ActivateGamePadRadial");

	Params::WBP_Inventory_C_ActivateGamePadRadial Parms{};

	Parms.Activate = Activate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory.WBP_Inventory_C.Bind Category Data
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMatchaInventoryCategoryUIData*   CategoryUIData                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_C::Bind_Category_Data(class UMatchaInventoryCategoryUIData* CategoryUIData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_C", "Bind Category Data");

	Params::WBP_Inventory_C_Bind_Category_Data Parms{};

	Parms.CategoryUIData = CategoryUIData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory.WBP_Inventory_C.BindData
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UOdyUIData*                       NewUIData                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_C::BindData(class UOdyUIData* NewUIData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_C", "BindData");

	Params::WBP_Inventory_C_BindData Parms{};

	Parms.NewUIData = NewUIData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory.WBP_Inventory_C.BindOnChangeHeldItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_C::BindOnChangeHeldItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_C", "BindOnChangeHeldItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory.WBP_Inventory_C.ChangeHeldItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_C::ChangeHeldItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_C", "ChangeHeldItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory.WBP_Inventory_C.ExecuteUbergraph_WBP_Inventory
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_C::ExecuteUbergraph_WBP_Inventory(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_C", "ExecuteUbergraph_WBP_Inventory");

	Params::WBP_Inventory_C_ExecuteUbergraph_WBP_Inventory Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory.WBP_Inventory_C.GetQuickBarItems_Controller
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UWBP_InventorySlot_C*>     Array                                                  (Parm, OutParm, ContainsInstancedReference)

void UWBP_Inventory_C::GetQuickBarItems_Controller(TArray<class UWBP_InventorySlot_C*>* Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_C", "GetQuickBarItems_Controller");

	Params::WBP_Inventory_C_GetQuickBarItems_Controller Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Array != nullptr)
		*Array = std::move(Parms.Array);
}


// Function WBP_Inventory.WBP_Inventory_C.HeldItemVisChange
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        InVisibility                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_C::HeldItemVisChange(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_C", "HeldItemVisChange");

	Params::WBP_Inventory_C_HeldItemVisChange Parms{};

	Parms.InVisibility = InVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory.WBP_Inventory_C.OnCategoriesUpdated
// (BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_C::OnCategoriesUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_C", "OnCategoriesUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory.WBP_Inventory_C.OnHeldCategoryUpdated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMatchaInventoryCategoryUIData*   CategoryUIData                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_C::OnHeldCategoryUpdated(class UMatchaInventoryCategoryUIData* CategoryUIData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_C", "OnHeldCategoryUpdated");

	Params::WBP_Inventory_C_OnHeldCategoryUpdated Parms{};

	Parms.CategoryUIData = CategoryUIData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory.WBP_Inventory_C.OnHeldItemSlotsUpdated
// (BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_C::OnHeldItemSlotsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_C", "OnHeldItemSlotsUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory.WBP_Inventory_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Inventory_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory.WBP_Inventory_C.OnInputMethodChanged_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EInputMethod                            InputMethod                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_C::OnInputMethodChanged_Event(EInputMethod InputMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_C", "OnInputMethodChanged_Event");

	Params::WBP_Inventory_C_OnInputMethodChanged_Event Parms{};

	Parms.InputMethod = InputMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory.WBP_Inventory_C.OnSlotsUpdated
// (BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_C::OnSlotsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_C", "OnSlotsUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory.WBP_Inventory_C.OnSoulCategoryUpdated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMatchaInventoryCategoryUIData*   CategoryUIData                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_C::OnSoulCategoryUpdated(class UMatchaInventoryCategoryUIData* CategoryUIData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_C", "OnSoulCategoryUpdated");

	Params::WBP_Inventory_C_OnSoulCategoryUpdated Parms{};

	Parms.CategoryUIData = CategoryUIData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory.WBP_Inventory_C.OnSoulItemSlotsUpdated
// (BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_C::OnSoulItemSlotsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_C", "OnSoulItemSlotsUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory.WBP_Inventory_C.ResetUI
// (BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_C::ResetUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_C", "ResetUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory.WBP_Inventory_C.UnbindCategoryData
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMatchaInventoryCategoryUIData*   OldCategoryUIData                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_C::UnbindCategoryData(class UMatchaInventoryCategoryUIData* OldCategoryUIData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_C", "UnbindCategoryData");

	Params::WBP_Inventory_C_UnbindCategoryData Parms{};

	Parms.OldCategoryUIData = OldCategoryUIData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory.WBP_Inventory_C.UnbindData
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UOdyUIData*                       OldUIData                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_C::UnbindData(class UOdyUIData* OldUIData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_C", "UnbindData");

	Params::WBP_Inventory_C_UnbindData Parms{};

	Parms.OldUIData = OldUIData;

	UObject::ProcessEvent(Func, &Parms);
}

}

