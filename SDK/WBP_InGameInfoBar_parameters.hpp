#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InGameInfoBar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_InGameInfoBar.WBP_InGameInfoBar_C.BindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_InGameInfoBar_C_BindData final
{
public:
	class UOdyUIData*                             NewUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InGameInfoBar_C_BindData) == 0x000008, "Wrong alignment on WBP_InGameInfoBar_C_BindData");
static_assert(sizeof(WBP_InGameInfoBar_C_BindData) == 0x000008, "Wrong size on WBP_InGameInfoBar_C_BindData");
static_assert(offsetof(WBP_InGameInfoBar_C_BindData, NewUIData) == 0x000000, "Member 'WBP_InGameInfoBar_C_BindData::NewUIData' has a wrong offset!");

// Function WBP_InGameInfoBar.WBP_InGameInfoBar_C.BindZoneUIData
// 0x0008 (0x0008 - 0x0000)
struct WBP_InGameInfoBar_C_BindZoneUIData final
{
public:
	class UMatchaZoneUIData*                      NewZoneUIData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InGameInfoBar_C_BindZoneUIData) == 0x000008, "Wrong alignment on WBP_InGameInfoBar_C_BindZoneUIData");
static_assert(sizeof(WBP_InGameInfoBar_C_BindZoneUIData) == 0x000008, "Wrong size on WBP_InGameInfoBar_C_BindZoneUIData");
static_assert(offsetof(WBP_InGameInfoBar_C_BindZoneUIData, NewZoneUIData) == 0x000000, "Member 'WBP_InGameInfoBar_C_BindZoneUIData::NewZoneUIData' has a wrong offset!");

// Function WBP_InGameInfoBar.WBP_InGameInfoBar_C.ExecuteUbergraph_WBP_InGameInfoBar
// 0x01E0 (0x01E0 - 0x0000)
struct WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaZoneUIData*                      K2Node_CustomEvent_NewZoneUIData;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaZoneUIData*                      K2Node_CustomEvent_ZoneUIData;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             K2Node_Event_OldUIData;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaGameWorldUIData*                 K2Node_DynamicCast_AsMatcha_Game_World_UI_Data;    // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             K2Node_Event_NewUIData;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0050(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaGameWorldUIData*                 K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_1;  // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_OldValue_3;                     // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue_3;                     // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_OldValue_2;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue_2;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OldValue_1;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue_1;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OldValue;                       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewValue;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 OldValue, int32 NewValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x00B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float OldValue, float NewValue)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaGameWorldUIData*                 K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_2;  // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float OldValue, float NewValue)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00E4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IntBinding_GetValue_ReturnValue;          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0100(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_IntBinding_GetValue_ReturnValue_1;        // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool OldValue, bool NewValue)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x014C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0168(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01C0(0x0010)()
	double                                        K2Node_VariableSet_CurrentTimerTime_ImplicitCast;  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentTimerTime_ImplicitCast_1; // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar) == 0x000008, "Wrong alignment on WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar");
static_assert(sizeof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar) == 0x0001E0, "Wrong size on WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, EntryPoint) == 0x000000, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_CustomEvent_NewZoneUIData) == 0x000008, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_CustomEvent_NewZoneUIData' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_CustomEvent_ZoneUIData) == 0x000018, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_CustomEvent_ZoneUIData' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_Event_OldUIData) == 0x000028, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_Event_OldUIData' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_DynamicCast_AsMatcha_Game_World_UI_Data) == 0x000038, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_DynamicCast_AsMatcha_Game_World_UI_Data' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_Event_NewUIData) == 0x000048, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_Event_NewUIData' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_Event_MyGeometry) == 0x000050, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_Event_InDeltaTime) == 0x000088, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_1) == 0x000090, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_1' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_CustomEvent_OldValue_3) == 0x000099, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_CustomEvent_OldValue_3' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_CustomEvent_NewValue_3) == 0x00009A, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_CustomEvent_NewValue_3' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_CustomEvent_OldValue_2) == 0x00009C, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_CustomEvent_OldValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_CustomEvent_NewValue_2) == 0x0000A0, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_CustomEvent_NewValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_CustomEvent_OldValue_1) == 0x0000A4, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_CustomEvent_OldValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_CustomEvent_NewValue_1) == 0x0000A8, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_CustomEvent_NewValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_CustomEvent_OldValue) == 0x0000AC, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_CustomEvent_NewValue) == 0x0000B0, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_CreateDelegate_OutputDelegate) == 0x0000B4, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000C4, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_2) == 0x0000D8, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_DynamicCast_AsMatcha_Game_World_UI_Data_2' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_DynamicCast_bSuccess_2) == 0x0000E0, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000E4, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, CallFunc_IntBinding_GetValue_ReturnValue) == 0x0000F4, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::CallFunc_IntBinding_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0000F8, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_MakeStruct_FormatArgumentData) == 0x000100, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, CallFunc_IntBinding_GetValue_ReturnValue_1) == 0x000148, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::CallFunc_IntBinding_GetValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_CreateDelegate_OutputDelegate_3) == 0x00014C, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000160, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_MakeStruct_FormatArgumentData_1) == 0x000168, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_MakeArray_Array) == 0x0001B0, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, CallFunc_Format_ReturnValue) == 0x0001C0, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_VariableSet_CurrentTimerTime_ImplicitCast) == 0x0001D0, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_VariableSet_CurrentTimerTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar, K2Node_VariableSet_CurrentTimerTime_ImplicitCast_1) == 0x0001D8, "Member 'WBP_InGameInfoBar_C_ExecuteUbergraph_WBP_InGameInfoBar::K2Node_VariableSet_CurrentTimerTime_ImplicitCast_1' has a wrong offset!");

// Function WBP_InGameInfoBar.WBP_InGameInfoBar_C.Get_ShrinkTimer_Text
// 0x0228 (0x0228 - 0x0000)
struct WBP_InGameInfoBar_C_Get_ShrinkTimer_Text final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0010)()
	bool                                          Temp_bool_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0010)()
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0048)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0108(0x0010)()
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0120(0x0010)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0138(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0180(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0190(0x0010)()
	class FText                                   K2Node_Select_Default_1;                           // 0x01A0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01B0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0208(0x0010)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0218(0x0010)()
};
static_assert(alignof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text) == 0x000008, "Wrong alignment on WBP_InGameInfoBar_C_Get_ShrinkTimer_Text");
static_assert(sizeof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text) == 0x000228, "Wrong size on WBP_InGameInfoBar_C_Get_ShrinkTimer_Text");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, ReturnValue) == 0x000000, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, Temp_bool_Variable) == 0x000010, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, Temp_bool_Variable_1) == 0x000011, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, Temp_text_Variable) == 0x000018, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, Temp_bool_Variable_2) == 0x000028, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000029, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x00002A, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00002B, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, CallFunc_FFloor_ReturnValue) == 0x00002C, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, CallFunc_FTrunc_ReturnValue) == 0x000090, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, K2Node_MakeArray_Array) == 0x000098, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0000A8, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, K2Node_Select_Default) == 0x000108, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, CallFunc_FFloor_ReturnValue_1) == 0x000118, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, CallFunc_Percent_IntInt_ReturnValue) == 0x00011C, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000120, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000130, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, K2Node_MakeStruct_FormatArgumentData_2) == 0x000138, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, K2Node_MakeArray_Array_1) == 0x000180, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, CallFunc_Format_ReturnValue_1) == 0x000190, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, K2Node_Select_Default_1) == 0x0001A0, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001B0, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, K2Node_MakeArray_Array_2) == 0x0001F8, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, CallFunc_Format_ReturnValue_2) == 0x000208, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Get_ShrinkTimer_Text, K2Node_Select_Default_2) == 0x000218, "Member 'WBP_InGameInfoBar_C_Get_ShrinkTimer_Text::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_InGameInfoBar.WBP_InGameInfoBar_C.OnIsShrinkingChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_InGameInfoBar_C_OnIsShrinkingChanged final
{
public:
	bool                                          OldValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewValue;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InGameInfoBar_C_OnIsShrinkingChanged) == 0x000001, "Wrong alignment on WBP_InGameInfoBar_C_OnIsShrinkingChanged");
static_assert(sizeof(WBP_InGameInfoBar_C_OnIsShrinkingChanged) == 0x000002, "Wrong size on WBP_InGameInfoBar_C_OnIsShrinkingChanged");
static_assert(offsetof(WBP_InGameInfoBar_C_OnIsShrinkingChanged, OldValue) == 0x000000, "Member 'WBP_InGameInfoBar_C_OnIsShrinkingChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_OnIsShrinkingChanged, NewValue) == 0x000001, "Member 'WBP_InGameInfoBar_C_OnIsShrinkingChanged::NewValue' has a wrong offset!");

// Function WBP_InGameInfoBar.WBP_InGameInfoBar_C.OnNumPlayersLeftUpdate__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_InGameInfoBar_C_OnNumPlayersLeftUpdate__DelegateSignature final
{
public:
	int32                                         NumLeft;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InGameInfoBar_C_OnNumPlayersLeftUpdate__DelegateSignature) == 0x000004, "Wrong alignment on WBP_InGameInfoBar_C_OnNumPlayersLeftUpdate__DelegateSignature");
static_assert(sizeof(WBP_InGameInfoBar_C_OnNumPlayersLeftUpdate__DelegateSignature) == 0x000004, "Wrong size on WBP_InGameInfoBar_C_OnNumPlayersLeftUpdate__DelegateSignature");
static_assert(offsetof(WBP_InGameInfoBar_C_OnNumPlayersLeftUpdate__DelegateSignature, NumLeft) == 0x000000, "Member 'WBP_InGameInfoBar_C_OnNumPlayersLeftUpdate__DelegateSignature::NumLeft' has a wrong offset!");

// Function WBP_InGameInfoBar.WBP_InGameInfoBar_C.OnSecondsUntilShrinkComplete
// 0x0008 (0x0008 - 0x0000)
struct WBP_InGameInfoBar_C_OnSecondsUntilShrinkComplete final
{
public:
	float                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InGameInfoBar_C_OnSecondsUntilShrinkComplete) == 0x000004, "Wrong alignment on WBP_InGameInfoBar_C_OnSecondsUntilShrinkComplete");
static_assert(sizeof(WBP_InGameInfoBar_C_OnSecondsUntilShrinkComplete) == 0x000008, "Wrong size on WBP_InGameInfoBar_C_OnSecondsUntilShrinkComplete");
static_assert(offsetof(WBP_InGameInfoBar_C_OnSecondsUntilShrinkComplete, OldValue) == 0x000000, "Member 'WBP_InGameInfoBar_C_OnSecondsUntilShrinkComplete::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_OnSecondsUntilShrinkComplete, NewValue) == 0x000004, "Member 'WBP_InGameInfoBar_C_OnSecondsUntilShrinkComplete::NewValue' has a wrong offset!");

// Function WBP_InGameInfoBar.WBP_InGameInfoBar_C.OnSecondUntilShrinkChange
// 0x0008 (0x0008 - 0x0000)
struct WBP_InGameInfoBar_C_OnSecondUntilShrinkChange final
{
public:
	float                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InGameInfoBar_C_OnSecondUntilShrinkChange) == 0x000004, "Wrong alignment on WBP_InGameInfoBar_C_OnSecondUntilShrinkChange");
static_assert(sizeof(WBP_InGameInfoBar_C_OnSecondUntilShrinkChange) == 0x000008, "Wrong size on WBP_InGameInfoBar_C_OnSecondUntilShrinkChange");
static_assert(offsetof(WBP_InGameInfoBar_C_OnSecondUntilShrinkChange, OldValue) == 0x000000, "Member 'WBP_InGameInfoBar_C_OnSecondUntilShrinkChange::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_OnSecondUntilShrinkChange, NewValue) == 0x000004, "Member 'WBP_InGameInfoBar_C_OnSecondUntilShrinkChange::NewValue' has a wrong offset!");

// Function WBP_InGameInfoBar.WBP_InGameInfoBar_C.StartTimer
// 0x0020 (0x0020 - 0x0000)
struct WBP_InGameInfoBar_C_StartTimer final
{
public:
	bool                                          WarningOnly;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimeToTickdown;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GameTimeStampStarted;                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InGameInfoBar_C_StartTimer) == 0x000008, "Wrong alignment on WBP_InGameInfoBar_C_StartTimer");
static_assert(sizeof(WBP_InGameInfoBar_C_StartTimer) == 0x000020, "Wrong size on WBP_InGameInfoBar_C_StartTimer");
static_assert(offsetof(WBP_InGameInfoBar_C_StartTimer, WarningOnly) == 0x000000, "Member 'WBP_InGameInfoBar_C_StartTimer::WarningOnly' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_StartTimer, TimeToTickdown) == 0x000008, "Member 'WBP_InGameInfoBar_C_StartTimer::TimeToTickdown' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_StartTimer, GameTimeStampStarted) == 0x000010, "Member 'WBP_InGameInfoBar_C_StartTimer::GameTimeStampStarted' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_StartTimer, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_InGameInfoBar_C_StartTimer::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_InGameInfoBar.WBP_InGameInfoBar_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_InGameInfoBar_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InGameInfoBar_C_Tick) == 0x000004, "Wrong alignment on WBP_InGameInfoBar_C_Tick");
static_assert(sizeof(WBP_InGameInfoBar_C_Tick) == 0x00003C, "Wrong size on WBP_InGameInfoBar_C_Tick");
static_assert(offsetof(WBP_InGameInfoBar_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_InGameInfoBar_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_InGameInfoBar_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_InGameInfoBar.WBP_InGameInfoBar_C.UnbindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_InGameInfoBar_C_UnbindData final
{
public:
	class UOdyUIData*                             OldUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InGameInfoBar_C_UnbindData) == 0x000008, "Wrong alignment on WBP_InGameInfoBar_C_UnbindData");
static_assert(sizeof(WBP_InGameInfoBar_C_UnbindData) == 0x000008, "Wrong size on WBP_InGameInfoBar_C_UnbindData");
static_assert(offsetof(WBP_InGameInfoBar_C_UnbindData, OldUIData) == 0x000000, "Member 'WBP_InGameInfoBar_C_UnbindData::OldUIData' has a wrong offset!");

// Function WBP_InGameInfoBar.WBP_InGameInfoBar_C.UnbindZoneUIData
// 0x0008 (0x0008 - 0x0000)
struct WBP_InGameInfoBar_C_UnbindZoneUIData final
{
public:
	class UMatchaZoneUIData*                      ZoneUIData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InGameInfoBar_C_UnbindZoneUIData) == 0x000008, "Wrong alignment on WBP_InGameInfoBar_C_UnbindZoneUIData");
static_assert(sizeof(WBP_InGameInfoBar_C_UnbindZoneUIData) == 0x000008, "Wrong size on WBP_InGameInfoBar_C_UnbindZoneUIData");
static_assert(offsetof(WBP_InGameInfoBar_C_UnbindZoneUIData, ZoneUIData) == 0x000000, "Member 'WBP_InGameInfoBar_C_UnbindZoneUIData::ZoneUIData' has a wrong offset!");

// Function WBP_InGameInfoBar.WBP_InGameInfoBar_C.UpdateKOAmount
// 0x0018 (0x0018 - 0x0000)
struct WBP_InGameInfoBar_C_UpdateKOAmount final
{
public:
	int32                                         NewKOValue;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0010)()
};
static_assert(alignof(WBP_InGameInfoBar_C_UpdateKOAmount) == 0x000008, "Wrong alignment on WBP_InGameInfoBar_C_UpdateKOAmount");
static_assert(sizeof(WBP_InGameInfoBar_C_UpdateKOAmount) == 0x000018, "Wrong size on WBP_InGameInfoBar_C_UpdateKOAmount");
static_assert(offsetof(WBP_InGameInfoBar_C_UpdateKOAmount, NewKOValue) == 0x000000, "Member 'WBP_InGameInfoBar_C_UpdateKOAmount::NewKOValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_UpdateKOAmount, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_InGameInfoBar_C_UpdateKOAmount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_InGameInfoBar.WBP_InGameInfoBar_C.UpdatePlayerCounts
// 0x0008 (0x0008 - 0x0000)
struct WBP_InGameInfoBar_C_UpdatePlayerCounts final
{
public:
	int32                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InGameInfoBar_C_UpdatePlayerCounts) == 0x000004, "Wrong alignment on WBP_InGameInfoBar_C_UpdatePlayerCounts");
static_assert(sizeof(WBP_InGameInfoBar_C_UpdatePlayerCounts) == 0x000008, "Wrong size on WBP_InGameInfoBar_C_UpdatePlayerCounts");
static_assert(offsetof(WBP_InGameInfoBar_C_UpdatePlayerCounts, OldValue) == 0x000000, "Member 'WBP_InGameInfoBar_C_UpdatePlayerCounts::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_InGameInfoBar_C_UpdatePlayerCounts, NewValue) == 0x000004, "Member 'WBP_InGameInfoBar_C_UpdatePlayerCounts::NewValue' has a wrong offset!");

}

