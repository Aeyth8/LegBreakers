#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemTooltip

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Matcha_structs.hpp"


namespace SDK::Params
{

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.BindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_ItemTooltip_C_BindData final
{
public:
	class UOdyUIData*                             NewUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_BindData) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_BindData");
static_assert(sizeof(WBP_ItemTooltip_C_BindData) == 0x000008, "Wrong size on WBP_ItemTooltip_C_BindData");
static_assert(offsetof(WBP_ItemTooltip_C_BindData, NewUIData) == 0x000000, "Member 'WBP_ItemTooltip_C_BindData::NewUIData' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.BndEvt__WBP_ItemTooltip_WBP_InventorySlot_K2Node_ComponentBoundEvent_0_OnGearSlotBecameEnergized__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_ItemTooltip_C_BndEvt__WBP_ItemTooltip_WBP_InventorySlot_K2Node_ComponentBoundEvent_0_OnGearSlotBecameEnergized__DelegateSignature final
{
public:
	bool                                          NewEnergizedState;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_BndEvt__WBP_ItemTooltip_WBP_InventorySlot_K2Node_ComponentBoundEvent_0_OnGearSlotBecameEnergized__DelegateSignature) == 0x000001, "Wrong alignment on WBP_ItemTooltip_C_BndEvt__WBP_ItemTooltip_WBP_InventorySlot_K2Node_ComponentBoundEvent_0_OnGearSlotBecameEnergized__DelegateSignature");
static_assert(sizeof(WBP_ItemTooltip_C_BndEvt__WBP_ItemTooltip_WBP_InventorySlot_K2Node_ComponentBoundEvent_0_OnGearSlotBecameEnergized__DelegateSignature) == 0x000001, "Wrong size on WBP_ItemTooltip_C_BndEvt__WBP_ItemTooltip_WBP_InventorySlot_K2Node_ComponentBoundEvent_0_OnGearSlotBecameEnergized__DelegateSignature");
static_assert(offsetof(WBP_ItemTooltip_C_BndEvt__WBP_ItemTooltip_WBP_InventorySlot_K2Node_ComponentBoundEvent_0_OnGearSlotBecameEnergized__DelegateSignature, NewEnergizedState) == 0x000000, "Member 'WBP_ItemTooltip_C_BndEvt__WBP_ItemTooltip_WBP_InventorySlot_K2Node_ComponentBoundEvent_0_OnGearSlotBecameEnergized__DelegateSignature::NewEnergizedState' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.ConsumeOnHold
// 0x0002 (0x0002 - 0x0000)
struct WBP_ItemTooltip_C_ConsumeOnHold final
{
public:
	bool                                          OldValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewValue;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_ConsumeOnHold) == 0x000001, "Wrong alignment on WBP_ItemTooltip_C_ConsumeOnHold");
static_assert(sizeof(WBP_ItemTooltip_C_ConsumeOnHold) == 0x000002, "Wrong size on WBP_ItemTooltip_C_ConsumeOnHold");
static_assert(offsetof(WBP_ItemTooltip_C_ConsumeOnHold, OldValue) == 0x000000, "Member 'WBP_ItemTooltip_C_ConsumeOnHold::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ConsumeOnHold, NewValue) == 0x000001, "Member 'WBP_ItemTooltip_C_ConsumeOnHold::NewValue' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.ExecuteUbergraph_WBP_ItemTooltip
// 0x0118 (0x0118 - 0x0000)
struct WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool OldValue, bool NewValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool OldValue, bool NewValue)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FText OldValue, class FText NewValue)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool OldValue, bool NewValue)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OldValue_4;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewValue_4;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_OldValue_3;                     // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue_3;                     // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_OldValue_2;                     // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue_2;                     // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOdyUIData*                             K2Node_Event_NewUIData_1;                          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOdyUIData*                             K2Node_Event_NewUIData;                            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaInventoryItemUIData*             K2Node_DynamicCast_AsMatcha_Inventory_Item_UI_Data; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaInventoryItemUIData*             K2Node_DynamicCast_AsMatcha_Inventory_Item_UI_Data_1; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x00AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_OldValue_1;                     // 0x00C0(0x0010)()
	class FText                                   K2Node_CustomEvent_NewValue_1;                     // 0x00D0(0x0010)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_OldValue;                       // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue;                       // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EObjectRarity                                 Temp_byte_Variable;                                // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EObjectRarity                                 Temp_byte_Variable_1;                              // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EObjectRarity                                 Temp_byte_Variable_2;                              // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EObjectRarity                                 Temp_byte_Variable_3;                              // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EObjectRarity                                 Temp_byte_Variable_4;                              // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EObjectRarity                                 Temp_byte_Variable_5;                              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EObjectRarity                                 K2Node_Select_Default;                             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 OldValue, int32 NewValue)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x00F4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0104(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_NewEnergizedState;      // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip");
static_assert(sizeof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip) == 0x000118, "Wrong size on WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, EntryPoint) == 0x000000, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, Temp_struct_Variable) == 0x000004, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, Temp_struct_Variable_1) == 0x000014, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, Temp_struct_Variable_2) == 0x000024, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_CreateDelegate_OutputDelegate_1) == 0x000044, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_CreateDelegate_OutputDelegate_2) == 0x000054, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_CreateDelegate_OutputDelegate_3) == 0x000064, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_CustomEvent_OldValue_4) == 0x000074, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_CustomEvent_OldValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_CustomEvent_NewValue_4) == 0x000078, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_CustomEvent_NewValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_CustomEvent_OldValue_3) == 0x00007C, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_CustomEvent_OldValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_CustomEvent_NewValue_3) == 0x00007D, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_CustomEvent_NewValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_CustomEvent_OldValue_2) == 0x00007E, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_CustomEvent_OldValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_CustomEvent_NewValue_2) == 0x00007F, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_CustomEvent_NewValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_Event_NewUIData_1) == 0x000080, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_Event_NewUIData_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_Event_NewUIData) == 0x000088, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_Event_NewUIData' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_DynamicCast_AsMatcha_Inventory_Item_UI_Data) == 0x000090, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_DynamicCast_AsMatcha_Inventory_Item_UI_Data' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_DynamicCast_AsMatcha_Inventory_Item_UI_Data_1) == 0x0000A0, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_DynamicCast_AsMatcha_Inventory_Item_UI_Data_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, Temp_struct_Variable_3) == 0x0000AC, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_CustomEvent_OldValue_1) == 0x0000C0, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_CustomEvent_OldValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_CustomEvent_NewValue_1) == 0x0000D0, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_CustomEvent_NewValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, CallFunc_TextIsEmpty_ReturnValue) == 0x0000E0, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_CustomEvent_OldValue) == 0x0000E1, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_CustomEvent_NewValue) == 0x0000E2, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, Temp_byte_Variable) == 0x0000E3, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, Temp_byte_Variable_1) == 0x0000E4, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, Temp_byte_Variable_2) == 0x0000E5, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, Temp_byte_Variable_3) == 0x0000E6, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, Temp_byte_Variable_4) == 0x0000E7, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, Temp_byte_Variable_5) == 0x0000E8, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, Temp_int_Variable) == 0x0000EC, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_Select_Default) == 0x0000F0, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000F4, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_Select_Default_1) == 0x000104, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_ComponentBoundEvent_NewEnergizedState) == 0x000114, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_ComponentBoundEvent_NewEnergizedState' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip, K2Node_Event_IsDesignTime) == 0x000115, "Member 'WBP_ItemTooltip_C_ExecuteUbergraph_WBP_ItemTooltip::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.OnEnergizedChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_ItemTooltip_C_OnEnergizedChanged final
{
public:
	bool                                          OldValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewValue;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_OnEnergizedChanged) == 0x000001, "Wrong alignment on WBP_ItemTooltip_C_OnEnergizedChanged");
static_assert(sizeof(WBP_ItemTooltip_C_OnEnergizedChanged) == 0x000002, "Wrong size on WBP_ItemTooltip_C_OnEnergizedChanged");
static_assert(offsetof(WBP_ItemTooltip_C_OnEnergizedChanged, OldValue) == 0x000000, "Member 'WBP_ItemTooltip_C_OnEnergizedChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_OnEnergizedChanged, NewValue) == 0x000001, "Member 'WBP_ItemTooltip_C_OnEnergizedChanged::NewValue' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.OnOverloadedItemTooltipChanged
// 0x0020 (0x0020 - 0x0000)
struct WBP_ItemTooltip_C_OnOverloadedItemTooltipChanged final
{
public:
	class FText                                   OldValue;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   NewValue;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_ItemTooltip_C_OnOverloadedItemTooltipChanged) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_OnOverloadedItemTooltipChanged");
static_assert(sizeof(WBP_ItemTooltip_C_OnOverloadedItemTooltipChanged) == 0x000020, "Wrong size on WBP_ItemTooltip_C_OnOverloadedItemTooltipChanged");
static_assert(offsetof(WBP_ItemTooltip_C_OnOverloadedItemTooltipChanged, OldValue) == 0x000000, "Member 'WBP_ItemTooltip_C_OnOverloadedItemTooltipChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_OnOverloadedItemTooltipChanged, NewValue) == 0x000010, "Member 'WBP_ItemTooltip_C_OnOverloadedItemTooltipChanged::NewValue' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.OnRarityChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_ItemTooltip_C_OnRarityChanged final
{
public:
	int32                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_OnRarityChanged) == 0x000004, "Wrong alignment on WBP_ItemTooltip_C_OnRarityChanged");
static_assert(sizeof(WBP_ItemTooltip_C_OnRarityChanged) == 0x000008, "Wrong size on WBP_ItemTooltip_C_OnRarityChanged");
static_assert(offsetof(WBP_ItemTooltip_C_OnRarityChanged, OldValue) == 0x000000, "Member 'WBP_ItemTooltip_C_OnRarityChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_OnRarityChanged, NewValue) == 0x000004, "Member 'WBP_ItemTooltip_C_OnRarityChanged::NewValue' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.OnThrowableOnlyChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_ItemTooltip_C_OnThrowableOnlyChanged final
{
public:
	bool                                          OldValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewValue;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_OnThrowableOnlyChanged) == 0x000001, "Wrong alignment on WBP_ItemTooltip_C_OnThrowableOnlyChanged");
static_assert(sizeof(WBP_ItemTooltip_C_OnThrowableOnlyChanged) == 0x000002, "Wrong size on WBP_ItemTooltip_C_OnThrowableOnlyChanged");
static_assert(offsetof(WBP_ItemTooltip_C_OnThrowableOnlyChanged, OldValue) == 0x000000, "Member 'WBP_ItemTooltip_C_OnThrowableOnlyChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_OnThrowableOnlyChanged, NewValue) == 0x000001, "Member 'WBP_ItemTooltip_C_OnThrowableOnlyChanged::NewValue' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.OnUIDataSet
// 0x0008 (0x0008 - 0x0000)
struct WBP_ItemTooltip_C_OnUIDataSet final
{
public:
	class UOdyUIData*                             NewUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_OnUIDataSet) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_OnUIDataSet");
static_assert(sizeof(WBP_ItemTooltip_C_OnUIDataSet) == 0x000008, "Wrong size on WBP_ItemTooltip_C_OnUIDataSet");
static_assert(offsetof(WBP_ItemTooltip_C_OnUIDataSet, NewUIData) == 0x000000, "Member 'WBP_ItemTooltip_C_OnUIDataSet::NewUIData' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ItemTooltip_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ItemTooltip_C_PreConstruct");
static_assert(sizeof(WBP_ItemTooltip_C_PreConstruct) == 0x000001, "Wrong size on WBP_ItemTooltip_C_PreConstruct");
static_assert(offsetof(WBP_ItemTooltip_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ItemTooltip_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.Set Styling Consumed
// 0x0002 (0x0002 - 0x0000)
struct WBP_ItemTooltip_C_Set_Styling_Consumed final
{
public:
	bool                                          IsConsumed;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoolBinding_GetValue_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_Set_Styling_Consumed) == 0x000001, "Wrong alignment on WBP_ItemTooltip_C_Set_Styling_Consumed");
static_assert(sizeof(WBP_ItemTooltip_C_Set_Styling_Consumed) == 0x000002, "Wrong size on WBP_ItemTooltip_C_Set_Styling_Consumed");
static_assert(offsetof(WBP_ItemTooltip_C_Set_Styling_Consumed, IsConsumed) == 0x000000, "Member 'WBP_ItemTooltip_C_Set_Styling_Consumed::IsConsumed' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_Set_Styling_Consumed, CallFunc_BoolBinding_GetValue_ReturnValue) == 0x000001, "Member 'WBP_ItemTooltip_C_Set_Styling_Consumed::CallFunc_BoolBinding_GetValue_ReturnValue' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.Set Styling Throwable
// 0x0002 (0x0002 - 0x0000)
struct WBP_ItemTooltip_C_Set_Styling_Throwable final
{
public:
	bool                                          IsThrowable;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoolBinding_GetValue_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemTooltip_C_Set_Styling_Throwable) == 0x000001, "Wrong alignment on WBP_ItemTooltip_C_Set_Styling_Throwable");
static_assert(sizeof(WBP_ItemTooltip_C_Set_Styling_Throwable) == 0x000002, "Wrong size on WBP_ItemTooltip_C_Set_Styling_Throwable");
static_assert(offsetof(WBP_ItemTooltip_C_Set_Styling_Throwable, IsThrowable) == 0x000000, "Member 'WBP_ItemTooltip_C_Set_Styling_Throwable::IsThrowable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_Set_Styling_Throwable, CallFunc_BoolBinding_GetValue_ReturnValue) == 0x000001, "Member 'WBP_ItemTooltip_C_Set_Styling_Throwable::CallFunc_BoolBinding_GetValue_ReturnValue' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.SetOverloadedStyling
// 0x0050 (0x0050 - 0x0000)
struct WBP_ItemTooltip_C_SetOverloadedStyling final
{
public:
	bool                                          bIsOverloaded;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_Select_Default_2;                           // 0x0038(0x0014)()
};
static_assert(alignof(WBP_ItemTooltip_C_SetOverloadedStyling) == 0x000008, "Wrong alignment on WBP_ItemTooltip_C_SetOverloadedStyling");
static_assert(sizeof(WBP_ItemTooltip_C_SetOverloadedStyling) == 0x000050, "Wrong size on WBP_ItemTooltip_C_SetOverloadedStyling");
static_assert(offsetof(WBP_ItemTooltip_C_SetOverloadedStyling, bIsOverloaded) == 0x000000, "Member 'WBP_ItemTooltip_C_SetOverloadedStyling::bIsOverloaded' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetOverloadedStyling, Temp_object_Variable) == 0x000008, "Member 'WBP_ItemTooltip_C_SetOverloadedStyling::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetOverloadedStyling, Temp_object_Variable_1) == 0x000010, "Member 'WBP_ItemTooltip_C_SetOverloadedStyling::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetOverloadedStyling, Temp_bool_Variable) == 0x000018, "Member 'WBP_ItemTooltip_C_SetOverloadedStyling::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetOverloadedStyling, Temp_bool_Variable_1) == 0x000019, "Member 'WBP_ItemTooltip_C_SetOverloadedStyling::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetOverloadedStyling, Temp_bool_Variable_2) == 0x00001A, "Member 'WBP_ItemTooltip_C_SetOverloadedStyling::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetOverloadedStyling, K2Node_Select_Default) == 0x000020, "Member 'WBP_ItemTooltip_C_SetOverloadedStyling::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetOverloadedStyling, K2Node_Select_Default_1) == 0x000028, "Member 'WBP_ItemTooltip_C_SetOverloadedStyling::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetOverloadedStyling, K2Node_Select_Default_2) == 0x000038, "Member 'WBP_ItemTooltip_C_SetOverloadedStyling::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_ItemTooltip.WBP_ItemTooltip_C.SetRarityColors
// 0x0024 (0x0024 - 0x0000)
struct WBP_ItemTooltip_C_SetRarityColors final
{
public:
	struct FLinearColor                           RarityColor;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0010(0x0014)()
};
static_assert(alignof(WBP_ItemTooltip_C_SetRarityColors) == 0x000004, "Wrong alignment on WBP_ItemTooltip_C_SetRarityColors");
static_assert(sizeof(WBP_ItemTooltip_C_SetRarityColors) == 0x000024, "Wrong size on WBP_ItemTooltip_C_SetRarityColors");
static_assert(offsetof(WBP_ItemTooltip_C_SetRarityColors, RarityColor) == 0x000000, "Member 'WBP_ItemTooltip_C_SetRarityColors::RarityColor' has a wrong offset!");
static_assert(offsetof(WBP_ItemTooltip_C_SetRarityColors, K2Node_MakeStruct_SlateColor) == 0x000010, "Member 'WBP_ItemTooltip_C_SetRarityColors::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

