#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: E_Trap_TrackingDevice

#include "Basic.hpp"

#include "Matcha_structs.hpp"


namespace SDK::Params
{

// Function E_Trap_TrackingDevice.E_Trap_TrackingDevice_C.ExecuteUbergraph_E_Trap_TrackingDevice
// 0x0168 (0x0168 - 0x0000)
struct E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerEntity_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FBuffInfo                              K2Node_MakeStruct_BuffInfo;                        // 0x0010(0x0010)(NoDestructor)
	class AMatchaSnapNetCharacterEntity*          K2Node_Event_OverlappedCharacter;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCombinedFXInfo                        K2Node_MakeStruct_CombinedFXInfo;                  // 0x0028(0x0088)(NoDestructor)
	int32                                         CallFunc_GetEntityIndex_ReturnValue;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerEntity_ReturnValue_1;             // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacterEntity_Base_C*                K2Node_DynamicCast_AsCharacter_Entity_Base;        // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCombinedFXInfo                        K2Node_MakeStruct_CombinedFXInfo_1;                // 0x00D8(0x0088)(NoDestructor)
	float                                         CallFunc_AddRecentlyScannedCharacter_Timestamp_ImplicitCast; // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice) == 0x000008, "Wrong alignment on E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice");
static_assert(sizeof(E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice) == 0x000168, "Wrong size on E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice");
static_assert(offsetof(E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice, EntryPoint) == 0x000000, "Member 'E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice::EntryPoint' has a wrong offset!");
static_assert(offsetof(E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice, CallFunc_GetOwnerEntity_ReturnValue) == 0x000008, "Member 'E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice::CallFunc_GetOwnerEntity_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice, K2Node_MakeStruct_BuffInfo) == 0x000010, "Member 'E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice::K2Node_MakeStruct_BuffInfo' has a wrong offset!");
static_assert(offsetof(E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice, K2Node_Event_OverlappedCharacter) == 0x000020, "Member 'E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice::K2Node_Event_OverlappedCharacter' has a wrong offset!");
static_assert(offsetof(E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice, K2Node_MakeStruct_CombinedFXInfo) == 0x000028, "Member 'E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice::K2Node_MakeStruct_CombinedFXInfo' has a wrong offset!");
static_assert(offsetof(E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice, CallFunc_GetEntityIndex_ReturnValue) == 0x0000B0, "Member 'E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice::CallFunc_GetEntityIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice, CallFunc_GetTimeSeconds_ReturnValue) == 0x0000B8, "Member 'E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice, CallFunc_GetOwnerEntity_ReturnValue_1) == 0x0000C0, "Member 'E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice::CallFunc_GetOwnerEntity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice, K2Node_DynamicCast_AsCharacter_Entity_Base) == 0x0000C8, "Member 'E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice::K2Node_DynamicCast_AsCharacter_Entity_Base' has a wrong offset!");
static_assert(offsetof(E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice, K2Node_MakeStruct_CombinedFXInfo_1) == 0x0000D8, "Member 'E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice::K2Node_MakeStruct_CombinedFXInfo_1' has a wrong offset!");
static_assert(offsetof(E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice, CallFunc_AddRecentlyScannedCharacter_Timestamp_ImplicitCast) == 0x000160, "Member 'E_Trap_TrackingDevice_C_ExecuteUbergraph_E_Trap_TrackingDevice::CallFunc_AddRecentlyScannedCharacter_Timestamp_ImplicitCast' has a wrong offset!");

// Function E_Trap_TrackingDevice.E_Trap_TrackingDevice_C.OnTriggerTrapFromOverlap
// 0x0008 (0x0008 - 0x0000)
struct E_Trap_TrackingDevice_C_OnTriggerTrapFromOverlap final
{
public:
	class AMatchaSnapNetCharacterEntity*          OverlappedCharacter;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(E_Trap_TrackingDevice_C_OnTriggerTrapFromOverlap) == 0x000008, "Wrong alignment on E_Trap_TrackingDevice_C_OnTriggerTrapFromOverlap");
static_assert(sizeof(E_Trap_TrackingDevice_C_OnTriggerTrapFromOverlap) == 0x000008, "Wrong size on E_Trap_TrackingDevice_C_OnTriggerTrapFromOverlap");
static_assert(offsetof(E_Trap_TrackingDevice_C_OnTriggerTrapFromOverlap, OverlappedCharacter) == 0x000000, "Member 'E_Trap_TrackingDevice_C_OnTriggerTrapFromOverlap::OverlappedCharacter' has a wrong offset!");

// Function E_Trap_TrackingDevice.E_Trap_TrackingDevice_C.UserConstructionScript
// 0x0088 (0x0088 - 0x0000)
struct E_Trap_TrackingDevice_C_UserConstructionScript final
{
public:
	struct FCombinedFXInfo                        K2Node_MakeStruct_CombinedFXInfo;                  // 0x0000(0x0088)(NoDestructor)
};
static_assert(alignof(E_Trap_TrackingDevice_C_UserConstructionScript) == 0x000008, "Wrong alignment on E_Trap_TrackingDevice_C_UserConstructionScript");
static_assert(sizeof(E_Trap_TrackingDevice_C_UserConstructionScript) == 0x000088, "Wrong size on E_Trap_TrackingDevice_C_UserConstructionScript");
static_assert(offsetof(E_Trap_TrackingDevice_C_UserConstructionScript, K2Node_MakeStruct_CombinedFXInfo) == 0x000000, "Member 'E_Trap_TrackingDevice_C_UserConstructionScript::K2Node_MakeStruct_CombinedFXInfo' has a wrong offset!");

}

