#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: E_BreakableRandomChest

#include "Basic.hpp"

#include "E_BreakableBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass E_BreakableRandomChest.E_BreakableRandomChest_C
// 0x0018 (0x04D8 - 0x04C0)
class AE_BreakableRandomChest_C final : public AE_BreakableBase_C
{
public:
	class UMatchaLootComponent*                   LootComponent;                                     // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_HitChest;                                       // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"E_BreakableRandomChest_C">();
	}
	static class AE_BreakableRandomChest_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AE_BreakableRandomChest_C>();
	}
};
static_assert(alignof(AE_BreakableRandomChest_C) == 0x000008, "Wrong alignment on AE_BreakableRandomChest_C");
static_assert(sizeof(AE_BreakableRandomChest_C) == 0x0004D8, "Wrong size on AE_BreakableRandomChest_C");
static_assert(offsetof(AE_BreakableRandomChest_C, LootComponent) == 0x0004C0, "Member 'AE_BreakableRandomChest_C::LootComponent' has a wrong offset!");
static_assert(offsetof(AE_BreakableRandomChest_C, NS_HitChest) == 0x0004C8, "Member 'AE_BreakableRandomChest_C::NS_HitChest' has a wrong offset!");
static_assert(offsetof(AE_BreakableRandomChest_C, StaticMesh) == 0x0004D0, "Member 'AE_BreakableRandomChest_C::StaticMesh' has a wrong offset!");

}

