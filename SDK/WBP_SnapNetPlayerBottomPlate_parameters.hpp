#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SnapNetPlayerBottomPlate

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Matcha_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_SnapNetPlayerBottomPlate.WBP_SnapNetPlayerBottomPlate_C.BindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_SnapNetPlayerBottomPlate_C_BindData final
{
public:
	class UOdyUIData*                             NewUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SnapNetPlayerBottomPlate_C_BindData) == 0x000008, "Wrong alignment on WBP_SnapNetPlayerBottomPlate_C_BindData");
static_assert(sizeof(WBP_SnapNetPlayerBottomPlate_C_BindData) == 0x000008, "Wrong size on WBP_SnapNetPlayerBottomPlate_C_BindData");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_BindData, NewUIData) == 0x000000, "Member 'WBP_SnapNetPlayerBottomPlate_C_BindData::NewUIData' has a wrong offset!");

// Function WBP_SnapNetPlayerBottomPlate.WBP_SnapNetPlayerBottomPlate_C.ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate
// 0x0130 (0x0130 - 0x0000)
struct WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSpectatedTeamNumber_ReturnValue;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_TeamNumber;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaSnapNetGameInstance*             CallFunc_GetMatchaSnapNetGameInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColorForTeamNumber_ReturnValue;        // 0x001C(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorForAllies_ReturnValue;            // 0x002C(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool OldValue, bool NewValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOdyUIData*                             K2Node_Event_NewUIData;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaPlayerUIData*                    K2Node_DynamicCast_AsMatcha_Player_UI_Data;        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_OldValue_1;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewValue_1;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyUIData*                             K2Node_Event_OldUIData;                            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMatchaPlayerUIData*                    K2Node_DynamicCast_AsMatcha_Player_UI_Data_1;      // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00A0(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 OldValue, int32 NewValue)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_OldValue;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue;                       // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x010C(0x0014)()
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate) == 0x000008, "Wrong alignment on WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate");
static_assert(sizeof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate) == 0x000130, "Wrong size on WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, EntryPoint) == 0x000000, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, CallFunc_GetSpectatedTeamNumber_ReturnValue) == 0x000004, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::CallFunc_GetSpectatedTeamNumber_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, K2Node_CustomEvent_TeamNumber) == 0x000008, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::K2Node_CustomEvent_TeamNumber' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, CallFunc_GetMatchaSnapNetGameInstance_ReturnValue) == 0x000010, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::CallFunc_GetMatchaSnapNetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, CallFunc_GetColorForTeamNumber_ReturnValue) == 0x00001C, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::CallFunc_GetColorForTeamNumber_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, CallFunc_GetColorForAllies_ReturnValue) == 0x00002C, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::CallFunc_GetColorForAllies_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, CallFunc_SelectColor_ReturnValue) == 0x00003C, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, Temp_bool_Variable) == 0x00004C, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, K2Node_Event_NewUIData) == 0x000060, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::K2Node_Event_NewUIData' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, K2Node_DynamicCast_AsMatcha_Player_UI_Data) == 0x000068, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::K2Node_DynamicCast_AsMatcha_Player_UI_Data' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, K2Node_CustomEvent_OldValue_1) == 0x000074, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::K2Node_CustomEvent_OldValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, K2Node_CustomEvent_NewValue_1) == 0x000078, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::K2Node_CustomEvent_NewValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, K2Node_Event_OldUIData) == 0x000080, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::K2Node_Event_OldUIData' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, K2Node_DynamicCast_AsMatcha_Player_UI_Data_1) == 0x000088, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::K2Node_DynamicCast_AsMatcha_Player_UI_Data_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, K2Node_Event_IsDesignTime) == 0x000091, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000098, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, K2Node_Event_MyGeometry) == 0x0000A0, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, K2Node_Event_InDeltaTime) == 0x0000D8, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000DC, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, CallFunc_SafeDivide_ReturnValue) == 0x0000E0, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000F0, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000100, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, K2Node_CustomEvent_OldValue) == 0x000108, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, K2Node_CustomEvent_NewValue) == 0x000109, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, K2Node_Select_Default) == 0x00010C, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000120, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000128, "Member 'WBP_SnapNetPlayerBottomPlate_C_ExecuteUbergraph_WBP_SnapNetPlayerBottomPlate::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_SnapNetPlayerBottomPlate.WBP_SnapNetPlayerBottomPlate_C.GetColorForItemRarity
// 0x0020 (0x0020 - 0x0000)
struct WBP_SnapNetPlayerBottomPlate_C_GetColorForItemRarity final
{
public:
	class UMatchaItemAsset*                       InputObject;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SnapNetPlayerBottomPlate_C_GetColorForItemRarity) == 0x000008, "Wrong alignment on WBP_SnapNetPlayerBottomPlate_C_GetColorForItemRarity");
static_assert(sizeof(WBP_SnapNetPlayerBottomPlate_C_GetColorForItemRarity) == 0x000020, "Wrong size on WBP_SnapNetPlayerBottomPlate_C_GetColorForItemRarity");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_GetColorForItemRarity, InputObject) == 0x000000, "Member 'WBP_SnapNetPlayerBottomPlate_C_GetColorForItemRarity::InputObject' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_GetColorForItemRarity, Color) == 0x000008, "Member 'WBP_SnapNetPlayerBottomPlate_C_GetColorForItemRarity::Color' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_GetColorForItemRarity, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_SnapNetPlayerBottomPlate_C_GetColorForItemRarity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_GetColorForItemRarity, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'WBP_SnapNetPlayerBottomPlate_C_GetColorForItemRarity::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_SnapNetPlayerBottomPlate.WBP_SnapNetPlayerBottomPlate_C.OnSpectatedPlayerChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_SnapNetPlayerBottomPlate_C_OnSpectatedPlayerChanged final
{
public:
	bool                                          OldValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewValue;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SnapNetPlayerBottomPlate_C_OnSpectatedPlayerChanged) == 0x000001, "Wrong alignment on WBP_SnapNetPlayerBottomPlate_C_OnSpectatedPlayerChanged");
static_assert(sizeof(WBP_SnapNetPlayerBottomPlate_C_OnSpectatedPlayerChanged) == 0x000002, "Wrong size on WBP_SnapNetPlayerBottomPlate_C_OnSpectatedPlayerChanged");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_OnSpectatedPlayerChanged, OldValue) == 0x000000, "Member 'WBP_SnapNetPlayerBottomPlate_C_OnSpectatedPlayerChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_OnSpectatedPlayerChanged, NewValue) == 0x000001, "Member 'WBP_SnapNetPlayerBottomPlate_C_OnSpectatedPlayerChanged::NewValue' has a wrong offset!");

// Function WBP_SnapNetPlayerBottomPlate.WBP_SnapNetPlayerBottomPlate_C.OnTeamNumberChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_SnapNetPlayerBottomPlate_C_OnTeamNumberChanged final
{
public:
	int32                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SnapNetPlayerBottomPlate_C_OnTeamNumberChanged) == 0x000004, "Wrong alignment on WBP_SnapNetPlayerBottomPlate_C_OnTeamNumberChanged");
static_assert(sizeof(WBP_SnapNetPlayerBottomPlate_C_OnTeamNumberChanged) == 0x000008, "Wrong size on WBP_SnapNetPlayerBottomPlate_C_OnTeamNumberChanged");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_OnTeamNumberChanged, OldValue) == 0x000000, "Member 'WBP_SnapNetPlayerBottomPlate_C_OnTeamNumberChanged::OldValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_OnTeamNumberChanged, NewValue) == 0x000004, "Member 'WBP_SnapNetPlayerBottomPlate_C_OnTeamNumberChanged::NewValue' has a wrong offset!");

// Function WBP_SnapNetPlayerBottomPlate.WBP_SnapNetPlayerBottomPlate_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_SnapNetPlayerBottomPlate_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SnapNetPlayerBottomPlate_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_SnapNetPlayerBottomPlate_C_PreConstruct");
static_assert(sizeof(WBP_SnapNetPlayerBottomPlate_C_PreConstruct) == 0x000001, "Wrong size on WBP_SnapNetPlayerBottomPlate_C_PreConstruct");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_SnapNetPlayerBottomPlate_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_SnapNetPlayerBottomPlate.WBP_SnapNetPlayerBottomPlate_C.Set Energy Colors
// 0x0450 (0x0450 - 0x0000)
struct WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors final
{
public:
	int32                                         TeamID;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalPlayerTeamID;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            EnemyTeamEnergyTint;                               // 0x0008(0x0014)(Edit, BlueprintVisible)
	struct FLinearColor                           EnemyTeamEnergyColor;                              // 0x001C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EnemyChunkColor_0;                                 // 0x002C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           AllyBarBGColor;                                    // 0x003C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EnemyChunkColor;                                   // 0x004C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EnemyFillColor;                                    // 0x005C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           AllyChunkColor;                                    // 0x006C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           AllyFillColor;                                     // 0x007C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00D0(0x0014)()
	uint8                                         Pad_E4[0xC];                                       // 0x00E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00F0(0x00D0)()
	struct FProgressBarStyle                      K2Node_MakeStruct_ProgressBarStyle;                // 0x01C0(0x0290)()
};
static_assert(alignof(WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors) == 0x000010, "Wrong alignment on WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors");
static_assert(sizeof(WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors) == 0x000450, "Wrong size on WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors, TeamID) == 0x000000, "Member 'WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors::TeamID' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors, LocalPlayerTeamID) == 0x000004, "Member 'WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors::LocalPlayerTeamID' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors, EnemyTeamEnergyTint) == 0x000008, "Member 'WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors::EnemyTeamEnergyTint' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors, EnemyTeamEnergyColor) == 0x00001C, "Member 'WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors::EnemyTeamEnergyColor' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors, EnemyChunkColor_0) == 0x00002C, "Member 'WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors::EnemyChunkColor_0' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors, AllyBarBGColor) == 0x00003C, "Member 'WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors::AllyBarBGColor' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors, EnemyChunkColor) == 0x00004C, "Member 'WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors::EnemyChunkColor' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors, EnemyFillColor) == 0x00005C, "Member 'WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors::EnemyFillColor' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors, AllyChunkColor) == 0x00006C, "Member 'WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors::AllyChunkColor' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors, AllyFillColor) == 0x00007C, "Member 'WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors::AllyFillColor' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00008C, "Member 'WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000090, "Member 'WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0000A0, "Member 'WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors, K2Node_MakeStruct_LinearColor) == 0x0000B0, "Member 'WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors, CallFunc_MakeColor_ReturnValue) == 0x0000C0, "Member 'WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors, K2Node_MakeStruct_SlateColor) == 0x0000D0, "Member 'WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors, K2Node_MakeStruct_SlateBrush) == 0x0000F0, "Member 'WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors, K2Node_MakeStruct_ProgressBarStyle) == 0x0001C0, "Member 'WBP_SnapNetPlayerBottomPlate_C_Set_Energy_Colors::K2Node_MakeStruct_ProgressBarStyle' has a wrong offset!");

// Function WBP_SnapNetPlayerBottomPlate.WBP_SnapNetPlayerBottomPlate_C.SetDamage
// 0x0268 (0x0268 - 0x0000)
struct WBP_SnapNetPlayerBottomPlate_C_SetDamage final
{
public:
	double                                        DamagePercent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ProcessedDecimal;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            MidThreshold;                                      // 0x0010(0x0014)(Edit, BlueprintVisible)
	struct FSlateColor                            Normal;                                            // 0x0024(0x0014)(Edit, BlueprintVisible)
	struct FSlateColor                            LethalThreshold;                                   // 0x0038(0x0014)(Edit, BlueprintVisible)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A0(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0100(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0148(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0158(0x0010)(ReferenceParm)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0170(0x0010)()
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01D0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0218(0x0010)(ReferenceParm)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0230(0x0010)()
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0250(0x0014)()
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SnapNetPlayerBottomPlate_C_SetDamage) == 0x000008, "Wrong alignment on WBP_SnapNetPlayerBottomPlate_C_SetDamage");
static_assert(sizeof(WBP_SnapNetPlayerBottomPlate_C_SetDamage) == 0x000268, "Wrong size on WBP_SnapNetPlayerBottomPlate_C_SetDamage");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, DamagePercent) == 0x000000, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::DamagePercent' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, ProcessedDecimal) == 0x000008, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::ProcessedDecimal' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, MidThreshold) == 0x000010, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::MidThreshold' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, Normal) == 0x000024, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::Normal' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, LethalThreshold) == 0x000038, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::LethalThreshold' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x00004C, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000060, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_FTrunc_ReturnValue) == 0x000064, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000068, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_FTrunc_ReturnValue_1) == 0x000070, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000084, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Subtract_IntInt_ReturnValue) == 0x000088, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_SelectInt_ReturnValue) == 0x00008C, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000090, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Add_IntInt_ReturnValue_1) == 0x000098, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, K2Node_MakeStruct_FormatArgumentData) == 0x0000A0, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0000E8, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, K2Node_MakeArray_Array) == 0x0000F0, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, K2Node_MakeStruct_FormatArgumentData_1) == 0x000100, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Format_ReturnValue) == 0x000148, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, K2Node_MakeArray_Array_1) == 0x000158, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000168, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Format_ReturnValue_1) == 0x000170, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000180, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_IsValid_ReturnValue) == 0x000188, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000190, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000198, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000199, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x00019A, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Less_DoubleDouble_ReturnValue) == 0x00019B, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_BooleanOR_ReturnValue) == 0x00019C, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001A0, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x0001A8, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Round_ReturnValue) == 0x0001AC, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0001B0, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_SelectInt_ReturnValue_1) == 0x0001B4, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Min_ReturnValue) == 0x0001B8, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x0001C0, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_SelectFloat_ReturnValue) == 0x0001C8, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001D0, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, K2Node_MakeArray_Array_2) == 0x000218, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_FFloor_ReturnValue) == 0x000228, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Format_ReturnValue_2) == 0x000230, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000240, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000248, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, K2Node_MakeStruct_SlateColor) == 0x000250, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetDamage, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000264, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetDamage::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WBP_SnapNetPlayerBottomPlate.WBP_SnapNetPlayerBottomPlate_C.SetTeamColor
// 0x0038 (0x0038 - 0x0000)
struct WBP_SnapNetPlayerBottomPlate_C_SetTeamColor final
{
public:
	bool                                          IsAlly_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TeamColor;                                         // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NewLocalVar;                                       // 0x0014(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0024(0x0014)()
};
static_assert(alignof(WBP_SnapNetPlayerBottomPlate_C_SetTeamColor) == 0x000004, "Wrong alignment on WBP_SnapNetPlayerBottomPlate_C_SetTeamColor");
static_assert(sizeof(WBP_SnapNetPlayerBottomPlate_C_SetTeamColor) == 0x000038, "Wrong size on WBP_SnapNetPlayerBottomPlate_C_SetTeamColor");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetTeamColor, IsAlly_0) == 0x000000, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetTeamColor::IsAlly_0' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetTeamColor, TeamColor) == 0x000004, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetTeamColor::TeamColor' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetTeamColor, NewLocalVar) == 0x000014, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetTeamColor::NewLocalVar' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetTeamColor, K2Node_MakeStruct_SlateColor) == 0x000024, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetTeamColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WBP_SnapNetPlayerBottomPlate.WBP_SnapNetPlayerBottomPlate_C.SetTeamNumber
// 0x0004 (0x0004 - 0x0000)
struct WBP_SnapNetPlayerBottomPlate_C_SetTeamNumber final
{
public:
	int32                                         TeamNumber;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SnapNetPlayerBottomPlate_C_SetTeamNumber) == 0x000004, "Wrong alignment on WBP_SnapNetPlayerBottomPlate_C_SetTeamNumber");
static_assert(sizeof(WBP_SnapNetPlayerBottomPlate_C_SetTeamNumber) == 0x000004, "Wrong size on WBP_SnapNetPlayerBottomPlate_C_SetTeamNumber");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_SetTeamNumber, TeamNumber) == 0x000000, "Member 'WBP_SnapNetPlayerBottomPlate_C_SetTeamNumber::TeamNumber' has a wrong offset!");

// Function WBP_SnapNetPlayerBottomPlate.WBP_SnapNetPlayerBottomPlate_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_SnapNetPlayerBottomPlate_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SnapNetPlayerBottomPlate_C_Tick) == 0x000004, "Wrong alignment on WBP_SnapNetPlayerBottomPlate_C_Tick");
static_assert(sizeof(WBP_SnapNetPlayerBottomPlate_C_Tick) == 0x00003C, "Wrong size on WBP_SnapNetPlayerBottomPlate_C_Tick");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_SnapNetPlayerBottomPlate_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_SnapNetPlayerBottomPlate_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_SnapNetPlayerBottomPlate.WBP_SnapNetPlayerBottomPlate_C.TryUpdateEnergyChunks
// 0x0018 (0x0018 - 0x0000)
struct WBP_SnapNetPlayerBottomPlate_C_TryUpdateEnergyChunks final
{
public:
	double                                        CurrentEnergy;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SnapNetPlayerBottomPlate_C_TryUpdateEnergyChunks) == 0x000008, "Wrong alignment on WBP_SnapNetPlayerBottomPlate_C_TryUpdateEnergyChunks");
static_assert(sizeof(WBP_SnapNetPlayerBottomPlate_C_TryUpdateEnergyChunks) == 0x000018, "Wrong size on WBP_SnapNetPlayerBottomPlate_C_TryUpdateEnergyChunks");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_TryUpdateEnergyChunks, CurrentEnergy) == 0x000000, "Member 'WBP_SnapNetPlayerBottomPlate_C_TryUpdateEnergyChunks::CurrentEnergy' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_TryUpdateEnergyChunks, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_SnapNetPlayerBottomPlate_C_TryUpdateEnergyChunks::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_TryUpdateEnergyChunks, CallFunc_FTrunc_ReturnValue) == 0x000010, "Member 'WBP_SnapNetPlayerBottomPlate_C_TryUpdateEnergyChunks::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_TryUpdateEnergyChunks, K2Node_SwitchInteger_CmpSuccess) == 0x000014, "Member 'WBP_SnapNetPlayerBottomPlate_C_TryUpdateEnergyChunks::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WBP_SnapNetPlayerBottomPlate.WBP_SnapNetPlayerBottomPlate_C.UnbindData
// 0x0008 (0x0008 - 0x0000)
struct WBP_SnapNetPlayerBottomPlate_C_UnbindData final
{
public:
	class UOdyUIData*                             OldUIData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SnapNetPlayerBottomPlate_C_UnbindData) == 0x000008, "Wrong alignment on WBP_SnapNetPlayerBottomPlate_C_UnbindData");
static_assert(sizeof(WBP_SnapNetPlayerBottomPlate_C_UnbindData) == 0x000008, "Wrong size on WBP_SnapNetPlayerBottomPlate_C_UnbindData");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UnbindData, OldUIData) == 0x000000, "Member 'WBP_SnapNetPlayerBottomPlate_C_UnbindData::OldUIData' has a wrong offset!");

// Function WBP_SnapNetPlayerBottomPlate.WBP_SnapNetPlayerBottomPlate_C.Update Energy Bar
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar final
{
public:
	double                                        NewMaxEnergy;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentEnergy;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxMaxEnergyFlatAmount;                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LegendaryMaxEnergyRatio;                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EpicMaxEnergyRatio;                                // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RareMaxEnergyRatio;                                // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BaseMaxEnergyRatio;                                // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar) == 0x000008, "Wrong alignment on WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar");
static_assert(sizeof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar) == 0x0000D0, "Wrong size on WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, NewMaxEnergy) == 0x000000, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::NewMaxEnergy' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CurrentEnergy) == 0x000008, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CurrentEnergy' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, MaxMaxEnergyFlatAmount) == 0x000010, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::MaxMaxEnergyFlatAmount' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, LegendaryMaxEnergyRatio) == 0x000018, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::LegendaryMaxEnergyRatio' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, EpicMaxEnergyRatio) == 0x000020, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::EpicMaxEnergyRatio' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, RareMaxEnergyRatio) == 0x000028, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::RareMaxEnergyRatio' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, BaseMaxEnergyRatio) == 0x000030, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::BaseMaxEnergyRatio' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CallFunc_FTrunc_ReturnValue) == 0x000040, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, K2Node_SwitchInteger_CmpSuccess) == 0x000044, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000060, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000068, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000078, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000088, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000090, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CallFunc_SelectFloat_ReturnValue) == 0x000098, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CallFunc_SelectFloat_ReturnValue_1) == 0x0000A8, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x0000B0, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x0000B8, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CallFunc_SelectFloat_ReturnValue_2) == 0x0000C0, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x0000CC, "Member 'WBP_SnapNetPlayerBottomPlate_C_Update_Energy_Bar::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WBP_SnapNetPlayerBottomPlate.WBP_SnapNetPlayerBottomPlate_C.UpdateTempGearTellUI
// 0x03D0 (0x03D0 - 0x0000)
struct WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI final
{
public:
	class UMatchaInventoryComponent*              InventoryComponentRef;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_1;     // 0x0014(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchaInventorySlot                   CallFunc_GetItemInSlot_ReturnValue;                // 0x0020(0x0100)(ConstParm)
	bool                                          CallFunc_HasItemInSlot_ReturnValue;                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_SnapNetPropertyInt32ToInt_ReturnValue; // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UMatchaItemAsset*                 CallFunc_GetValue_ItemAsset_ReturnValue;           // 0x0128(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColorForItemRarity_Color;              // 0x0134(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0144(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchaInventorySlot                   CallFunc_GetItemInSlot_ReturnValue_1;              // 0x0158(0x0100)(ConstParm)
	bool                                          CallFunc_HasItemInSlot_ReturnValue_1;              // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_SnapNetPropertyInt32ToInt_ReturnValue_1; // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UMatchaItemAsset*                 CallFunc_GetValue_ItemAsset_ReturnValue_1;         // 0x0268(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_2;     // 0x0270(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorForItemRarity_Color_1;            // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMatchaInventorySlot                   CallFunc_GetItemInSlot_ReturnValue_2;              // 0x0298(0x0100)(ConstParm)
	bool                                          CallFunc_HasItemInSlot_ReturnValue_2;              // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x3];                                      // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_SnapNetPropertyInt32ToInt_ReturnValue_2; // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UMatchaItemAsset*                 CallFunc_GetValue_ItemAsset_ReturnValue_2;         // 0x03A8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorForItemRarity_Color_2;            // 0x03B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x03C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI) == 0x000008, "Wrong alignment on WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI");
static_assert(sizeof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI) == 0x0003D0, "Wrong size on WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, InventoryComponentRef) == 0x000000, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::InventoryComponentRef' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x00000C, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_MakeLiteralGameplayTag_ReturnValue_1) == 0x000014, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_MakeLiteralGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_GetItemInSlot_ReturnValue) == 0x000020, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_GetItemInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_HasItemInSlot_ReturnValue) == 0x000120, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_HasItemInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_Conv_SnapNetPropertyInt32ToInt_ReturnValue) == 0x000124, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_Conv_SnapNetPropertyInt32ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_GetValue_ItemAsset_ReturnValue) == 0x000128, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_GetValue_ItemAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_Greater_IntInt_ReturnValue) == 0x000130, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_GetColorForItemRarity_Color) == 0x000134, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_GetColorForItemRarity_Color' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_SelectColor_ReturnValue) == 0x000144, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_GetItemInSlot_ReturnValue_1) == 0x000158, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_GetItemInSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_HasItemInSlot_ReturnValue_1) == 0x000258, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_HasItemInSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_Conv_SnapNetPropertyInt32ToInt_ReturnValue_1) == 0x00025C, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_Conv_SnapNetPropertyInt32ToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000260, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_GetValue_ItemAsset_ReturnValue_1) == 0x000268, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_GetValue_ItemAsset_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_MakeLiteralGameplayTag_ReturnValue_2) == 0x000270, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_MakeLiteralGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_GetColorForItemRarity_Color_1) == 0x000278, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_GetColorForItemRarity_Color_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_SelectColor_ReturnValue_1) == 0x000288, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_GetItemInSlot_ReturnValue_2) == 0x000298, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_GetItemInSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_HasItemInSlot_ReturnValue_2) == 0x000398, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_HasItemInSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_Conv_SnapNetPropertyInt32ToInt_ReturnValue_2) == 0x00039C, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_Conv_SnapNetPropertyInt32ToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0003A0, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_GetValue_ItemAsset_ReturnValue_2) == 0x0003A8, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_GetValue_ItemAsset_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_GetColorForItemRarity_Color_2) == 0x0003B0, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_GetColorForItemRarity_Color_2' has a wrong offset!");
static_assert(offsetof(WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI, CallFunc_SelectColor_ReturnValue_2) == 0x0003C0, "Member 'WBP_SnapNetPlayerBottomPlate_C_UpdateTempGearTellUI::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");

}

