#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PlayerUI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OdyUI_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PlayerUI.WBP_PlayerUI_C
// 0x0228 (0x05C0 - 0x0398)
class UWBP_PlayerUI_C final : public UOdyWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0398(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimBarFade3;                                      // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimBarFade2;                                      // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimBarFade1;                                      // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UOdyTextBlock*                          ArenaCount;                                        // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_TeamColor;                                  // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CharacterPortrait;                                 // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOdyTextBlock*                          CoinCount;                                         // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CurrShieldRatioImage;                              // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FilledChunk1;                                      // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FilledChunk2;                                      // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FilledChunk3;                                      // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FilledChunk4;                                      // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               GearInventoryContainer;                            // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Arena;                                        // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_CoinCount;                                    // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_SpecialItem;                                  // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Stock;                                        // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_6;                                           // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Lock1;                                             // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Lock2;                                             // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Lock3;                                             // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Lock4;                                             // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MaxShieldRingImage;                                // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                OverlayColor;                                      // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOdyTextBlock*                          PlayerDamagePercent;                               // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOdyTextBlock*                          PlayerName;                                        // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                PlayerUIBarBorder1;                                // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                PlayerUIBarBorder2;                                // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                PlayerUIBarBorder3;                                // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                PlayerUIEnergyBarBorder;                           // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           PlayerUIEnergyBarMain;                             // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           PlayerUIShieldBar;                                 // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOdyTextBlock*                          SpecialItemCount;                                  // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOdyTextBlock*                          StockCount;                                        // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Gear_Inventory_C*                  WBP_Gear_Inventory;                                // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         LastRepDamageVal;                                  // 0x04B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MediumDamageThreshold;                             // 0x04BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                BoundPlayerState;                                  // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         HighDamageThreshold;                               // 0x04C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            LowDamageColor;                                    // 0x04CC(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            LowDamageColor_Self;                               // 0x04E0(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            HighDamageColor;                                   // 0x04F4(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            MediumDamageColor;                                 // 0x0508(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           CurrentStoredTeamColor;                            // 0x051C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C[0x4];                                      // 0x052C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdyTextBlock*                          PlayerTeam;                                        // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                LocalPlayerState;                                  // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Energy_Threshold_1;                                // 0x0540(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          First_Time_Threshold_1;                            // 0x0544(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Threshold_Hit_1;                                   // 0x0545(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_546[0x2];                                      // 0x0546(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Energy_Threshold_2;                                // 0x0548(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          First_Time_Threshold_2;                            // 0x054C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ThresholdHit2;                                     // 0x054D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54E[0x2];                                      // 0x054E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Energy_Threshold_3;                                // 0x0550(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            Death_Color;                                       // 0x0554(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           Local_Team_Energy_Color;                           // 0x0568(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            Alive_Color;                                       // 0x0578(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         CurrentMaxShieldAmount;                            // 0x058C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentMaxShieldRatio;                             // 0x0590(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594[0x4];                                      // 0x0594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchaPlayerUIData*                    NewVar;                                            // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentMaxEnergyRatio;                             // 0x05A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentMaxEnergyAmount;                            // 0x05A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           MaxRingOnColor;                                    // 0x05A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocalPlayer;                                     // 0x05B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BindData(class UOdyUIData* NewUIData);
	void CalculateNewMaxEnergyRatio(double* MaxRatio);
	void CheckStockRemaining(int32 RemainingStock);
	void ExecuteUbergraph_WBP_PlayerUI(int32 EntryPoint);
	void GetColorForDamagePercent(int32 DamagePercent, bool IsLocalPlayer_0, struct FSlateColor* DamageColor);
	void OnInitialized();
	void OnIsSpectatedChanged(bool OldValue, bool NewValue);
	void OnPlayerIndexChanged(int32 OldValue, int32 NewValue);
	void OnPlayerLivenessChanged(bool WasPlayerAlive, bool IsPlayerAlive);
	void OnTeamNumberChanged(int32 PreviousTeamNumber, int32 CurrentTeamNumber);
	void PreConstruct(bool IsDesignTime);
	void ResetUI();
	void SetColorsForDamagePercent(int32 PreviousDamagePercent, int32 CurrentDamagePercent);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void TrySetNewShieldColorUI(double* MaxRatio);
	void TryUpdateEnergyChunks(double CurrentEnergy);
	void UnbindData(class UOdyUIData* OldUIData);
	void UpdateCurrentEnergy(float OldValue, float NewValue);
	void UpdatedCurrentShieldAmount(float OldValue, float NewValue);
	void UpdateMaxEnergy(float OldValue, float NewValue);
	void UpdateMaxShieldAmount(float OldValue, float NewValue);
	void UpdateShieldAmount();
	void UpdateShieldBarColorBasedOnMaxRatio();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PlayerUI_C">();
	}
	static class UWBP_PlayerUI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PlayerUI_C>();
	}
};
static_assert(alignof(UWBP_PlayerUI_C) == 0x000008, "Wrong alignment on UWBP_PlayerUI_C");
static_assert(sizeof(UWBP_PlayerUI_C) == 0x0005C0, "Wrong size on UWBP_PlayerUI_C");
static_assert(offsetof(UWBP_PlayerUI_C, UberGraphFrame) == 0x000398, "Member 'UWBP_PlayerUI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, AnimBarFade3) == 0x0003A0, "Member 'UWBP_PlayerUI_C::AnimBarFade3' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, AnimBarFade2) == 0x0003A8, "Member 'UWBP_PlayerUI_C::AnimBarFade2' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, AnimBarFade1) == 0x0003B0, "Member 'UWBP_PlayerUI_C::AnimBarFade1' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, ArenaCount) == 0x0003B8, "Member 'UWBP_PlayerUI_C::ArenaCount' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, Border_TeamColor) == 0x0003C0, "Member 'UWBP_PlayerUI_C::Border_TeamColor' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, CharacterPortrait) == 0x0003C8, "Member 'UWBP_PlayerUI_C::CharacterPortrait' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, CoinCount) == 0x0003D0, "Member 'UWBP_PlayerUI_C::CoinCount' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, CurrShieldRatioImage) == 0x0003D8, "Member 'UWBP_PlayerUI_C::CurrShieldRatioImage' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, FilledChunk1) == 0x0003E0, "Member 'UWBP_PlayerUI_C::FilledChunk1' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, FilledChunk2) == 0x0003E8, "Member 'UWBP_PlayerUI_C::FilledChunk2' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, FilledChunk3) == 0x0003F0, "Member 'UWBP_PlayerUI_C::FilledChunk3' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, FilledChunk4) == 0x0003F8, "Member 'UWBP_PlayerUI_C::FilledChunk4' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, GearInventoryContainer) == 0x000400, "Member 'UWBP_PlayerUI_C::GearInventoryContainer' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, Icon_Arena) == 0x000408, "Member 'UWBP_PlayerUI_C::Icon_Arena' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, Icon_CoinCount) == 0x000410, "Member 'UWBP_PlayerUI_C::Icon_CoinCount' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, Icon_SpecialItem) == 0x000418, "Member 'UWBP_PlayerUI_C::Icon_SpecialItem' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, Icon_Stock) == 0x000420, "Member 'UWBP_PlayerUI_C::Icon_Stock' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, Image_6) == 0x000428, "Member 'UWBP_PlayerUI_C::Image_6' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, Lock1) == 0x000430, "Member 'UWBP_PlayerUI_C::Lock1' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, Lock2) == 0x000438, "Member 'UWBP_PlayerUI_C::Lock2' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, Lock3) == 0x000440, "Member 'UWBP_PlayerUI_C::Lock3' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, Lock4) == 0x000448, "Member 'UWBP_PlayerUI_C::Lock4' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, MaxShieldRingImage) == 0x000450, "Member 'UWBP_PlayerUI_C::MaxShieldRingImage' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, OverlayColor) == 0x000458, "Member 'UWBP_PlayerUI_C::OverlayColor' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, PlayerDamagePercent) == 0x000460, "Member 'UWBP_PlayerUI_C::PlayerDamagePercent' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, PlayerName) == 0x000468, "Member 'UWBP_PlayerUI_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, PlayerUIBarBorder1) == 0x000470, "Member 'UWBP_PlayerUI_C::PlayerUIBarBorder1' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, PlayerUIBarBorder2) == 0x000478, "Member 'UWBP_PlayerUI_C::PlayerUIBarBorder2' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, PlayerUIBarBorder3) == 0x000480, "Member 'UWBP_PlayerUI_C::PlayerUIBarBorder3' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, PlayerUIEnergyBarBorder) == 0x000488, "Member 'UWBP_PlayerUI_C::PlayerUIEnergyBarBorder' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, PlayerUIEnergyBarMain) == 0x000490, "Member 'UWBP_PlayerUI_C::PlayerUIEnergyBarMain' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, PlayerUIShieldBar) == 0x000498, "Member 'UWBP_PlayerUI_C::PlayerUIShieldBar' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, SpecialItemCount) == 0x0004A0, "Member 'UWBP_PlayerUI_C::SpecialItemCount' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, StockCount) == 0x0004A8, "Member 'UWBP_PlayerUI_C::StockCount' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, WBP_Gear_Inventory) == 0x0004B0, "Member 'UWBP_PlayerUI_C::WBP_Gear_Inventory' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, LastRepDamageVal) == 0x0004B8, "Member 'UWBP_PlayerUI_C::LastRepDamageVal' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, MediumDamageThreshold) == 0x0004BC, "Member 'UWBP_PlayerUI_C::MediumDamageThreshold' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, BoundPlayerState) == 0x0004C0, "Member 'UWBP_PlayerUI_C::BoundPlayerState' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, HighDamageThreshold) == 0x0004C8, "Member 'UWBP_PlayerUI_C::HighDamageThreshold' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, LowDamageColor) == 0x0004CC, "Member 'UWBP_PlayerUI_C::LowDamageColor' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, LowDamageColor_Self) == 0x0004E0, "Member 'UWBP_PlayerUI_C::LowDamageColor_Self' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, HighDamageColor) == 0x0004F4, "Member 'UWBP_PlayerUI_C::HighDamageColor' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, MediumDamageColor) == 0x000508, "Member 'UWBP_PlayerUI_C::MediumDamageColor' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, CurrentStoredTeamColor) == 0x00051C, "Member 'UWBP_PlayerUI_C::CurrentStoredTeamColor' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, PlayerTeam) == 0x000530, "Member 'UWBP_PlayerUI_C::PlayerTeam' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, LocalPlayerState) == 0x000538, "Member 'UWBP_PlayerUI_C::LocalPlayerState' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, Energy_Threshold_1) == 0x000540, "Member 'UWBP_PlayerUI_C::Energy_Threshold_1' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, First_Time_Threshold_1) == 0x000544, "Member 'UWBP_PlayerUI_C::First_Time_Threshold_1' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, Threshold_Hit_1) == 0x000545, "Member 'UWBP_PlayerUI_C::Threshold_Hit_1' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, Energy_Threshold_2) == 0x000548, "Member 'UWBP_PlayerUI_C::Energy_Threshold_2' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, First_Time_Threshold_2) == 0x00054C, "Member 'UWBP_PlayerUI_C::First_Time_Threshold_2' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, ThresholdHit2) == 0x00054D, "Member 'UWBP_PlayerUI_C::ThresholdHit2' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, Energy_Threshold_3) == 0x000550, "Member 'UWBP_PlayerUI_C::Energy_Threshold_3' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, Death_Color) == 0x000554, "Member 'UWBP_PlayerUI_C::Death_Color' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, Local_Team_Energy_Color) == 0x000568, "Member 'UWBP_PlayerUI_C::Local_Team_Energy_Color' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, Alive_Color) == 0x000578, "Member 'UWBP_PlayerUI_C::Alive_Color' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, CurrentMaxShieldAmount) == 0x00058C, "Member 'UWBP_PlayerUI_C::CurrentMaxShieldAmount' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, CurrentMaxShieldRatio) == 0x000590, "Member 'UWBP_PlayerUI_C::CurrentMaxShieldRatio' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, NewVar) == 0x000598, "Member 'UWBP_PlayerUI_C::NewVar' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, CurrentMaxEnergyRatio) == 0x0005A0, "Member 'UWBP_PlayerUI_C::CurrentMaxEnergyRatio' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, CurrentMaxEnergyAmount) == 0x0005A4, "Member 'UWBP_PlayerUI_C::CurrentMaxEnergyAmount' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, MaxRingOnColor) == 0x0005A8, "Member 'UWBP_PlayerUI_C::MaxRingOnColor' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerUI_C, IsLocalPlayer) == 0x0005B8, "Member 'UWBP_PlayerUI_C::IsLocalPlayer' has a wrong offset!");

}

