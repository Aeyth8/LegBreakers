#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Gear_Inventory

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "OdyUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Gear_Inventory.WBP_Gear_Inventory_C
// 0x00A8 (0x0440 - 0x0398)
class UWBP_Gear_Inventory_C final : public UOdyWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0398(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       OnHackUnslottedAnim;                               // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnHackSlottedAnim;                                 // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_InventorySlot_C*                   BodySlot;                                          // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventorySlot_C*                   FeetSlot;                                          // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventorySlot_C*                   HackSlot;                                          // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventorySlot_C*                   HandsSlot;                                         // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMatchaInventoryCategoryUIData*         BoundFeetCategoryUIData;                           // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMatchaInventoryCategoryUIData*         BoundHandsCategoryUIData;                          // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMatchaInventoryCategoryUIData*         BoundBodyCategoryUIData;                           // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class UWBP_InventorySlot_C*> SlotTypeToWidget;                                  // 0x03E8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          bInitialized;                                      // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BindData(class UOdyUIData* NewUIData);
	void Construct();
	void ExecuteUbergraph_WBP_Gear_Inventory(int32 EntryPoint);
	void InitSlotTypeToWidget();
	void OnBodySlotEnergizedChanged(bool NewEnergizedState);
	void OnCategoriesUpdated();
	void OnFeetSlotEnergizedChanged(bool NewEnergizedState);
	void OnHackSlotUpdated();
	void OnHandsSlotEnergizedChanged(bool NewEnergizedState);
	void OnInitialized();
	void ResetUI();
	void Set_Hack_Slot_Visibility(bool bIsEmpty);
	void UnbindData(class UOdyUIData* OldUIData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Gear_Inventory_C">();
	}
	static class UWBP_Gear_Inventory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Gear_Inventory_C>();
	}
};
static_assert(alignof(UWBP_Gear_Inventory_C) == 0x000008, "Wrong alignment on UWBP_Gear_Inventory_C");
static_assert(sizeof(UWBP_Gear_Inventory_C) == 0x000440, "Wrong size on UWBP_Gear_Inventory_C");
static_assert(offsetof(UWBP_Gear_Inventory_C, UberGraphFrame) == 0x000398, "Member 'UWBP_Gear_Inventory_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Gear_Inventory_C, OnHackUnslottedAnim) == 0x0003A0, "Member 'UWBP_Gear_Inventory_C::OnHackUnslottedAnim' has a wrong offset!");
static_assert(offsetof(UWBP_Gear_Inventory_C, OnHackSlottedAnim) == 0x0003A8, "Member 'UWBP_Gear_Inventory_C::OnHackSlottedAnim' has a wrong offset!");
static_assert(offsetof(UWBP_Gear_Inventory_C, BodySlot) == 0x0003B0, "Member 'UWBP_Gear_Inventory_C::BodySlot' has a wrong offset!");
static_assert(offsetof(UWBP_Gear_Inventory_C, FeetSlot) == 0x0003B8, "Member 'UWBP_Gear_Inventory_C::FeetSlot' has a wrong offset!");
static_assert(offsetof(UWBP_Gear_Inventory_C, HackSlot) == 0x0003C0, "Member 'UWBP_Gear_Inventory_C::HackSlot' has a wrong offset!");
static_assert(offsetof(UWBP_Gear_Inventory_C, HandsSlot) == 0x0003C8, "Member 'UWBP_Gear_Inventory_C::HandsSlot' has a wrong offset!");
static_assert(offsetof(UWBP_Gear_Inventory_C, BoundFeetCategoryUIData) == 0x0003D0, "Member 'UWBP_Gear_Inventory_C::BoundFeetCategoryUIData' has a wrong offset!");
static_assert(offsetof(UWBP_Gear_Inventory_C, BoundHandsCategoryUIData) == 0x0003D8, "Member 'UWBP_Gear_Inventory_C::BoundHandsCategoryUIData' has a wrong offset!");
static_assert(offsetof(UWBP_Gear_Inventory_C, BoundBodyCategoryUIData) == 0x0003E0, "Member 'UWBP_Gear_Inventory_C::BoundBodyCategoryUIData' has a wrong offset!");
static_assert(offsetof(UWBP_Gear_Inventory_C, SlotTypeToWidget) == 0x0003E8, "Member 'UWBP_Gear_Inventory_C::SlotTypeToWidget' has a wrong offset!");
static_assert(offsetof(UWBP_Gear_Inventory_C, bInitialized) == 0x000438, "Member 'UWBP_Gear_Inventory_C::bInitialized' has a wrong offset!");

}

